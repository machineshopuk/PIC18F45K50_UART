

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Sat Aug 26 22:14:12 2023

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    48                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    49                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    51  0000                     
    52                           ; Version 2.35
    53                           ; Generated 05/05/2021 GMT
    54                           ; 
    55                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution. Publication is not required when
    69                           ;        this file is used in an embedded application.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC18F45K50 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87  0000                     
    88 ;; Function _EUSART1_is_tx_ready is unused but had its address taken
    89  0000                     
    90 ;; Function _EUSART1_is_rx_ready is unused but had its address taken
    91  0000                     
    92 ;; Function _EUSART1_is_tx_done is unused but had its address taken
    93  0000                     
    94 ;; Function _EUSART1_Read is unused but had its address taken
    95  0000                     
    96                           	psect	idataBANK0
    97  001788                     __pidataBANK0:
    98                           	callstack 0
    99                           
   100                           ;initializer for _string
   101  001788  64                 	db	low STR_1
   102  001789  08                 	db	high STR_1
   103                           
   104                           	psect	smallconst
   105  000800                     __psmallconst:
   106                           	callstack 0
   107  000800  00                 	db	0
   108  000801                     _uart:
   109                           	callstack 0
   110  000801  00                 	db	0
   111  000802  00                 	db	0
   112  000803  CE                 	db	low _EUSART1_Write
   113  000804  14                 	db	high _EUSART1_Write
   114  000805  00                 	db	0
   115  000806  00                 	db	0
   116  000807  00                 	db	0
   117  000808  00                 	db	0
   118  000809  42                 	db	low _EUSART1_SetTxInterruptHandler
   119  00080A  17                 	db	high _EUSART1_SetTxInterruptHandler
   120  00080B  1E                 	db	low _EUSART1_Receive_ISR
   121  00080C  12                 	db	high _EUSART1_Receive_ISR
   122  00080D  4C                 	db	low _EUSART1_SetRxInterruptHandler
   123  00080E  17                 	db	high _EUSART1_SetRxInterruptHandler
   124  00080F  00                 	db	0
   125  000810  00                 	db	0
   126  000811  B8                 	db	low _EUSART1_Transmit_ISR
   127  000812  15                 	db	high _EUSART1_Transmit_ISR
   128  000813  F6                 	db	low _EUSART1_Initialize
   129  000814  13                 	db	high _EUSART1_Initialize
   130  000815                     __end_of_uart:
   131                           	callstack 0
   132  0000                     _PIR1bits	set	3998
   133  0000                     _IPR1bits	set	3999
   134  0000                     _TRISD	set	3989
   135  0000                     _TRISC	set	3988
   136  0000                     _TRISB	set	3987
   137  0000                     _LATC	set	3979
   138  0000                     _LATB	set	3978
   139  0000                     _RCREG1	set	4014
   140  0000                     _TXREG1	set	4013
   141  0000                     _SPBRG1	set	4015
   142  0000                     _TXSTA1	set	4012
   143  0000                     _RCSTA1	set	4011
   144  0000                     _BAUDCON1	set	4024
   145  0000                     _LATDbits	set	3980
   146  0000                     _RCSTA1bits	set	4011
   147  0000                     _TXSTA1bits	set	4012
   148  0000                     _PLLRDY	set	32407
   149  0000                     _ANSELA	set	3931
   150  0000                     _ANSELB	set	3932
   151  0000                     _ANSELC	set	3933
   152  0000                     _ANSELD	set	3934
   153  0000                     _LATA	set	3977
   154  0000                     _LATD	set	3980
   155  0000                     _LATE	set	3981
   156  0000                     _PIE1bits	set	3997
   157  0000                     _RCONbits	set	4048
   158  0000                     _INTCON2bits	set	4081
   159  0000                     _ACTCON	set	4021
   160  0000                     _SPBRGH1	set	4016
   161  0000                     _TRISA	set	3986
   162  0000                     _TRISE	set	3990
   163  0000                     _OSCTUNE	set	3995
   164  0000                     _WPUB	set	3973
   165  0000                     _ANSELE	set	3935
   166  0000                     _INTCONbits	set	4082
   167  0000                     _OSCCON2	set	4050
   168  0000                     _OSCCON	set	4051
   169  000815                     
   170                           ; BSR set to: 0
   171  000815  52                 	db	82	;'R'
   172  000816  65                 	db	101	;'e'
   173  000817  63                 	db	99	;'c'
   174  000818  65                 	db	101	;'e'
   175  000819  69                 	db	105	;'i'
   176  00081A  76                 	db	118	;'v'
   177  00081B  65                 	db	101	;'e'
   178  00081C  20                 	db	32
   179  00081D  74                 	db	116	;'t'
   180  00081E  65                 	db	101	;'e'
   181  00081F  73                 	db	115	;'s'
   182  000820  74                 	db	116	;'t'
   183  000821  3A                 	db	58	;':'
   184  000822  20                 	db	32
   185  000823  54                 	db	84	;'T'
   186  000824  79                 	db	121	;'y'
   187  000825  70                 	db	112	;'p'
   188  000826  65                 	db	101	;'e'
   189  000827  20                 	db	32
   190  000828  61                 	db	97	;'a'
   191  000829  20                 	db	32
   192  00082A  6D                 	db	109	;'m'
   193  00082B  65                 	db	101	;'e'
   194  00082C  73                 	db	115	;'s'
   195  00082D  73                 	db	115	;'s'
   196  00082E  61                 	db	97	;'a'
   197  00082F  67                 	db	103	;'g'
   198  000830  65                 	db	101	;'e'
   199  000831  20                 	db	32
   200  000832  74                 	db	116	;'t'
   201  000833  68                 	db	104	;'h'
   202  000834  65                 	db	101	;'e'
   203  000835  6E                 	db	110	;'n'
   204  000836  20                 	db	32
   205  000837  70                 	db	112	;'p'
   206  000838  72                 	db	114	;'r'
   207  000839  65                 	db	101	;'e'
   208  00083A  73                 	db	115	;'s'
   209  00083B  73                 	db	115	;'s'
   210  00083C  20                 	db	32
   211  00083D  65                 	db	101	;'e'
   212  00083E  6E                 	db	110	;'n'
   213  00083F  74                 	db	116	;'t'
   214  000840  65                 	db	101	;'e'
   215  000841  72                 	db	114	;'r'
   216  000842  20                 	db	32
   217  000843  28                 	db	40
   218  000844  6D                 	db	109	;'m'
   219  000845  61                 	db	97	;'a'
   220  000846  78                 	db	120	;'x'
   221  000847  20                 	db	32
   222  000848  31                 	db	49	;'1'
   223  000849  36                 	db	54	;'6'
   224  00084A  20                 	db	32
   225  00084B  63                 	db	99	;'c'
   226  00084C  68                 	db	104	;'h'
   227  00084D  61                 	db	97	;'a'
   228  00084E  72                 	db	114	;'r'
   229  00084F  73                 	db	115	;'s'
   230  000850  29                 	db	41
   231  000851  3A                 	db	58	;':'
   232  000852  00                 	db	0
   233  000853                     
   234                           ; BSR set to: 0
   235  000853  48                 	db	72	;'H'
   236  000854  65                 	db	101	;'e'
   237  000855  6C                 	db	108	;'l'
   238  000856  6C                 	db	108	;'l'
   239  000857  6F                 	db	111	;'o'
   240  000858  20                 	db	32
   241  000859  57                 	db	87	;'W'
   242  00085A  6F                 	db	111	;'o'
   243  00085B  72                 	db	114	;'r'
   244  00085C  6C                 	db	108	;'l'
   245  00085D  64                 	db	100	;'d'
   246  00085E  21                 	db	33
   247  00085F  20                 	db	32
   248  000860  25                 	db	37
   249  000861  64                 	db	100	;'d'
   250  000862  0A                 	db	10
   251  000863  00                 	db	0
   252  000864                     STR_1:
   253                           
   254                           ; BSR set to: 0
   255  000864  54                 	db	84	;'T'
   256  000865  72                 	db	114	;'r'
   257  000866  61                 	db	97	;'a'
   258  000867  6E                 	db	110	;'n'
   259  000868  73                 	db	115	;'s'
   260  000869  6D                 	db	109	;'m'
   261  00086A  69                 	db	105	;'i'
   262  00086B  74                 	db	116	;'t'
   263  00086C  20                 	db	32
   264  00086D  74                 	db	116	;'t'
   265  00086E  65                 	db	101	;'e'
   266  00086F  73                 	db	115	;'s'
   267  000870  74                 	db	116	;'t'
   268  000871  0A                 	db	10
   269  000872  00                 	db	0
   270  000873                     STR_7:
   271                           
   272                           ; BSR set to: 0
   273  000873  63                 	db	99	;'c'
   274  000874  6F                 	db	111	;'o'
   275  000875  75                 	db	117	;'u'
   276  000876  6E                 	db	110	;'n'
   277  000877  74                 	db	116	;'t'
   278  000878  65                 	db	101	;'e'
   279  000879  72                 	db	114	;'r'
   280  00087A  3A                 	db	58	;':'
   281  00087B  20                 	db	32
   282  00087C  25                 	db	37
   283  00087D  64                 	db	100	;'d'
   284  00087E  0D                 	db	13
   285  00087F  0A                 	db	10
   286  000880  00                 	db	0
   287  000881                     
   288                           ; BSR set to: 0
   289  000881  59                 	db	89	;'Y'
   290  000882  6F                 	db	111	;'o'
   291  000883  75                 	db	117	;'u'
   292  000884  20                 	db	32
   293  000885  74                 	db	116	;'t'
   294  000886  79                 	db	121	;'y'
   295  000887  70                 	db	112	;'p'
   296  000888  65                 	db	101	;'e'
   297  000889  64                 	db	100	;'d'
   298  00088A  3A                 	db	58	;':'
   299  00088B  20                 	db	32
   300  00088C  00                 	db	0
   301  00088D                     
   302                           ; BSR set to: 0
   303  00088D  0A                 	db	10
   304  00088E  6F                 	db	111	;'o'
   305  00088F  6B                 	db	107	;'k'
   306  000890  00                 	db	0
   307  000891                     
   308                           ; BSR set to: 0
   309  000891  25                 	db	37
   310  000892  63                 	db	99	;'c'
   311  000893  00                 	db	0
   312  000894  00                 	db	0	; dummy byte at the end
   313  0000                     
   314                           ; #config settings
   315                           
   316                           	psect	cinit
   317  001678                     __pcinit:
   318                           	callstack 0
   319  001678                     start_initialization:
   320                           	callstack 0
   321  001678                     __initialization:
   322                           	callstack 0
   323                           
   324                           ; Initialize objects allocated to BANK0 (2 bytes)
   325                           ; load TBLPTR registers with __pidataBANK0
   326  001678  0E88               	movlw	low __pidataBANK0
   327  00167A  6EF6               	movwf	tblptrl,c
   328  00167C  0E17               	movlw	high __pidataBANK0
   329  00167E  6EF7               	movwf	tblptrh,c
   330  001680  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   331  001682  6EF8               	movwf	tblptru,c
   332  001684  0009               	tblrd		*+	;fetch initializer
   333  001686  CFF5 F0CF          	movff	tablat,__pdataBANK0
   334  00168A  0009               	tblrd		*+	;fetch initializer
   335  00168C  CFF5 F0D0          	movff	tablat,__pdataBANK0+1
   336                           
   337                           ; Clear objects allocated to BANK0 (93 bytes)
   338  001690  EE00  F060         	lfsr	0,__pbssBANK0
   339  001694  0E5D               	movlw	93
   340  001696                     clear_0:
   341  001696  6AEE               	clrf	postinc0,c
   342  001698  06E8               	decf	wreg,f,c
   343  00169A  E1FD               	bnz	clear_0
   344                           
   345                           ; Clear objects allocated to COMRAM (4 bytes)
   346  00169C  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   347  00169E  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
   348  0016A0  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
   349  0016A2  6A57               	clrf	__pbssCOMRAM& (0+255),c
   350  0016A4                     end_of_initialization:
   351                           	callstack 0
   352  0016A4                     __end_of__initialization:
   353                           	callstack 0
   354  0016A4  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   355  0016A6  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   356  0016A8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   357  0016AA  6EF8               	movwf	tblptru,c
   358  0016AC  0100               	movlb	0
   359  0016AE  EFBB  F009         	goto	_main	;jump to C main() function
   360                           
   361                           	psect	bssCOMRAM
   362  000057                     __pbssCOMRAM:
   363                           	callstack 0
   364  000057                     _flags:
   365                           	callstack 0
   366  000057                     	ds	2
   367  000059                     _eusart1RxTail:
   368                           	callstack 0
   369  000059                     	ds	1
   370  00005A                     _eusart1RxHead:
   371                           	callstack 0
   372  00005A                     	ds	1
   373                           
   374                           	psect	bssBANK0
   375  000060                     __pbssBANK0:
   376                           	callstack 0
   377  000060                     _eusart1RxStatusBuffer:
   378                           	callstack 0
   379  000060                     	ds	8
   380  000068                     _eusart1RxBuffer:
   381                           	callstack 0
   382  000068                     	ds	8
   383  000070                     _eusart1TxBuffer:
   384                           	callstack 0
   385  000070                     	ds	8
   386  000078                     _nout:
   387                           	callstack 0
   388  000078                     	ds	2
   389  00007A                     _width:
   390                           	callstack 0
   391  00007A                     	ds	2
   392  00007C                     _prec:
   393                           	callstack 0
   394  00007C                     	ds	2
   395  00007E                     _EUSART1_ErrorHandler:
   396                           	callstack 0
   397  00007E                     	ds	2
   398  000080                     _EUSART1_OverrunErrorHandler:
   399                           	callstack 0
   400  000080                     	ds	2
   401  000082                     _EUSART1_FramingErrorHandler:
   402                           	callstack 0
   403  000082                     	ds	2
   404  000084                     _EUSART1_RxDefaultInterruptHandler:
   405                           	callstack 0
   406  000084                     	ds	2
   407  000086                     _EUSART1_TxDefaultInterruptHandler:
   408                           	callstack 0
   409  000086                     	ds	2
   410  000088                     _eusart1RxLastError:
   411                           	callstack 0
   412  000088                     	ds	1
   413  000089                     _eusart1RxCount:
   414                           	callstack 0
   415  000089                     	ds	1
   416  00008A                     _eusart1TxBufferRemaining:
   417                           	callstack 0
   418  00008A                     	ds	1
   419  00008B                     _eusart1TxTail:
   420                           	callstack 0
   421  00008B                     	ds	1
   422  00008C                     _eusart1TxHead:
   423                           	callstack 0
   424  00008C                     	ds	1
   425  00008D                     _dbuf:
   426                           	callstack 0
   427  00008D                     	ds	32
   428  0000AD                     _rx:
   429                           	callstack 0
   430  0000AD                     	ds	16
   431                           
   432                           	psect	dataBANK0
   433  0000CF                     __pdataBANK0:
   434                           	callstack 0
   435  0000CF                     _string:
   436                           	callstack 0
   437  0000CF                     	ds	2
   438                           
   439                           	psect	cstackBANK0
   440  0000BD                     __pcstackBANK0:
   441                           	callstack 0
   442  0000BD                     ?_vfprintf:
   443                           	callstack 0
   444  0000BD                     vfprintf@fp:
   445                           	callstack 0
   446                           
   447                           ; 2 bytes @ 0x0
   448  0000BD                     	ds	2
   449  0000BF                     vfprintf@fmt:
   450                           	callstack 0
   451                           
   452                           ; 2 bytes @ 0x2
   453  0000BF                     	ds	2
   454  0000C1                     vfprintf@ap:
   455                           	callstack 0
   456                           
   457                           ; 2 bytes @ 0x4
   458  0000C1                     	ds	2
   459  0000C3                     vfprintf@cfmt:
   460                           	callstack 0
   461                           
   462                           ; 2 bytes @ 0x6
   463  0000C3                     	ds	2
   464  0000C5                     ?_printf:
   465                           	callstack 0
   466  0000C5                     printf@fmt:
   467                           	callstack 0
   468                           
   469                           ; 2 bytes @ 0x8
   470  0000C5                     	ds	4
   471  0000C9                     printf@ap:
   472                           	callstack 0
   473                           
   474                           ; 2 bytes @ 0xC
   475  0000C9                     	ds	2
   476  0000CB                     ??_main:
   477                           
   478                           ; 1 bytes @ 0xE
   479  0000CB                     	ds	2
   480  0000CD                     main@counter:
   481                           	callstack 0
   482                           
   483                           ; 2 bytes @ 0x10
   484  0000CD                     	ds	2
   485                           
   486                           	psect	cstackCOMRAM
   487  000001                     __pcstackCOMRAM:
   488                           	callstack 0
   489  000001                     ??_INTERRUPT_InterruptManagerHigh:
   490  000001                     
   491                           ; 1 bytes @ 0x0
   492  000001                     	ds	4
   493  000005                     ?_strlen:
   494                           	callstack 0
   495  000005                     ?___aodiv:
   496                           	callstack 0
   497  000005                     ?___aomod:
   498                           	callstack 0
   499  000005                     EUSART1_Write@txData:
   500                           	callstack 0
   501  000005                     EUSART1_SetFramingErrorHandler@interruptHandler:
   502                           	callstack 0
   503  000005                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   504                           	callstack 0
   505  000005                     EUSART1_SetErrorHandler@interruptHandler:
   506                           	callstack 0
   507  000005                     EUSART1_SetTxInterruptHandler@interruptHandler:
   508                           	callstack 0
   509  000005                     EUSART1_SetRxInterruptHandler@interruptHandler:
   510                           	callstack 0
   511  000005                     strlen@s:
   512                           	callstack 0
   513  000005                     ___aodiv@dividend:
   514                           	callstack 0
   515  000005                     ___aomod@dividend:
   516                           	callstack 0
   517                           
   518                           ; 8 bytes @ 0x4
   519  000005                     	ds	1
   520  000006                     putch@txData:
   521                           	callstack 0
   522                           
   523                           ; 1 bytes @ 0x5
   524  000006                     	ds	1
   525  000007                     fputc@c:
   526                           	callstack 0
   527  000007                     strlen@a:
   528                           	callstack 0
   529                           
   530                           ; 2 bytes @ 0x6
   531  000007                     	ds	2
   532  000009                     fputc@fp:
   533                           	callstack 0
   534                           
   535                           ; 2 bytes @ 0x8
   536  000009                     	ds	2
   537  00000B                     ??_fputc:
   538                           
   539                           ; 1 bytes @ 0xA
   540  00000B                     	ds	2
   541  00000D                     ___aodiv@divisor:
   542                           	callstack 0
   543  00000D                     ___aomod@divisor:
   544                           	callstack 0
   545                           
   546                           ; 8 bytes @ 0xC
   547  00000D                     	ds	3
   548  000010                     ?_ctoa:
   549                           	callstack 0
   550  000010                     ctoa@fp:
   551                           	callstack 0
   552  000010                     fputs@s:
   553                           	callstack 0
   554                           
   555                           ; 2 bytes @ 0xF
   556  000010                     	ds	2
   557  000012                     ctoa@c:
   558                           	callstack 0
   559  000012                     fputs@fp:
   560                           	callstack 0
   561                           
   562                           ; 2 bytes @ 0x11
   563  000012                     	ds	1
   564  000013                     ??_ctoa:
   565                           
   566                           ; 1 bytes @ 0x12
   567  000013                     	ds	1
   568  000014                     fputs@c:
   569                           	callstack 0
   570  000014                     ctoa@l:
   571                           	callstack 0
   572                           
   573                           ; 2 bytes @ 0x13
   574  000014                     	ds	1
   575  000015                     ___aodiv@counter:
   576                           	callstack 0
   577  000015                     ___aomod@counter:
   578                           	callstack 0
   579  000015                     fputs@i:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0x14
   583  000015                     	ds	1
   584  000016                     ___aodiv@sign:
   585                           	callstack 0
   586  000016                     ___aomod@sign:
   587                           	callstack 0
   588  000016                     ctoa@w:
   589                           	callstack 0
   590                           
   591                           ; 2 bytes @ 0x15
   592  000016                     	ds	1
   593  000017                     ?_abs:
   594                           	callstack 0
   595  000017                     ?_pad:
   596                           	callstack 0
   597  000017                     pad@fp:
   598                           	callstack 0
   599  000017                     abs@a:
   600                           	callstack 0
   601  000017                     ___aodiv@quotient:
   602                           	callstack 0
   603                           
   604                           ; 8 bytes @ 0x16
   605  000017                     	ds	2
   606  000019                     ??_abs:
   607  000019                     pad@buf:
   608                           	callstack 0
   609                           
   610                           ; 2 bytes @ 0x18
   611  000019                     	ds	2
   612  00001B                     pad@p:
   613                           	callstack 0
   614                           
   615                           ; 2 bytes @ 0x1A
   616  00001B                     	ds	2
   617  00001D                     ??_pad:
   618                           
   619                           ; 1 bytes @ 0x1C
   620  00001D                     	ds	1
   621  00001E                     pad@i:
   622                           	callstack 0
   623                           
   624                           ; 2 bytes @ 0x1D
   625  00001E                     	ds	2
   626  000020                     pad@w:
   627                           	callstack 0
   628                           
   629                           ; 2 bytes @ 0x1F
   630  000020                     	ds	2
   631  000022                     ?_dtoa:
   632                           	callstack 0
   633  000022                     dtoa@fp:
   634                           	callstack 0
   635                           
   636                           ; 2 bytes @ 0x21
   637  000022                     	ds	2
   638  000024                     dtoa@d:
   639                           	callstack 0
   640                           
   641                           ; 8 bytes @ 0x23
   642  000024                     	ds	8
   643  00002C                     ??_dtoa:
   644                           
   645                           ; 1 bytes @ 0x2B
   646  00002C                     	ds	8
   647  000034                     _dtoa$1472:
   648                           	callstack 0
   649                           
   650                           ; 2 bytes @ 0x33
   651  000034                     	ds	2
   652  000036                     dtoa@p:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0x35
   656  000036                     	ds	2
   657  000038                     dtoa@w:
   658                           	callstack 0
   659                           
   660                           ; 2 bytes @ 0x37
   661  000038                     	ds	2
   662  00003A                     dtoa@s:
   663                           	callstack 0
   664                           
   665                           ; 2 bytes @ 0x39
   666  00003A                     	ds	2
   667  00003C                     dtoa@n:
   668                           	callstack 0
   669                           
   670                           ; 8 bytes @ 0x3B
   671  00003C                     	ds	8
   672  000044                     dtoa@i:
   673                           	callstack 0
   674                           
   675                           ; 2 bytes @ 0x43
   676  000044                     	ds	2
   677  000046                     ?_vfpfcnvrt:
   678                           	callstack 0
   679  000046                     vfpfcnvrt@fp:
   680                           	callstack 0
   681                           
   682                           ; 2 bytes @ 0x45
   683  000046                     	ds	2
   684  000048                     vfpfcnvrt@fmt:
   685                           	callstack 0
   686                           
   687                           ; 2 bytes @ 0x47
   688  000048                     	ds	2
   689  00004A                     vfpfcnvrt@ap:
   690                           	callstack 0
   691                           
   692                           ; 2 bytes @ 0x49
   693  00004A                     	ds	2
   694  00004C                     ??_vfpfcnvrt:
   695                           
   696                           ; 1 bytes @ 0x4B
   697  00004C                     	ds	2
   698  00004E                     vfpfcnvrt@ll:
   699                           	callstack 0
   700                           
   701                           ; 8 bytes @ 0x4D
   702  00004E                     	ds	8
   703  000056                     vfpfcnvrt@c:
   704                           	callstack 0
   705                           
   706                           ; 1 bytes @ 0x55
   707  000056                     	ds	1
   708  000057                     
   709                           ; 1 bytes @ 0x56
   710 ;;
   711 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   712 ;;
   713 ;; *************** function _main *****************
   714 ;; Defined at:
   715 ;;		line 4 in file "main.c"
   716 ;; Parameters:    Size  Location     Type
   717 ;;		None
   718 ;; Auto vars:     Size  Location     Type
   719 ;;  counter         2   16[BANK0 ] int 
   720 ;; Return value:  Size  Location     Type
   721 ;;                  1    wreg      void 
   722 ;; Registers used:
   723 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   724 ;; Tracked objects:
   725 ;;		On entry : 0/0
   726 ;;		On exit  : 0/0
   727 ;;		Unchanged: 0/0
   728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   729 ;;      Params:         0       0       0       0       0       0       0       0       0
   730 ;;      Locals:         0       2       0       0       0       0       0       0       0
   731 ;;      Temps:          0       2       0       0       0       0       0       0       0
   732 ;;      Totals:         0       4       0       0       0       0       0       0       0
   733 ;;Total ram usage:        4 bytes
   734 ;; Hardware stack levels required when called: 13
   735 ;; This function calls:
   736 ;;		_SYSTEM_Initialize
   737 ;;		_printf
   738 ;; This function is called by:
   739 ;;		Startup code after reset
   740 ;; This function uses a non-reentrant model
   741 ;;
   742                           
   743                           	psect	text0
   744  001376                     __ptext0:
   745                           	callstack 0
   746  001376                     _main:
   747                           	callstack 18
   748  001376                     
   749                           ;main.c: 6:     SYSTEM_Initialize();
   750  001376  EC93  F00B         	call	_SYSTEM_Initialize	;wreg free
   751  00137A                     
   752                           ;main.c: 8:     (INTCONbits.GIEH = 1);
   753  00137A  8EF2               	bsf	242,7,c	;volatile
   754  00137C                     
   755                           ;main.c: 9:     (INTCONbits.PEIE = 1);
   756  00137C  8CF2               	bsf	242,6,c	;volatile
   757  00137E                     
   758                           ;main.c: 14:     int counter = 0;
   759  00137E  0E00               	movlw	0
   760  001380  0100               	movlb	0	; () banked
   761  001382  6FCE               	movwf	(main@counter+1)& (0+255),b
   762  001384  0E00               	movlw	0
   763  001386  6FCD               	movwf	main@counter& (0+255),b
   764  001388                     
   765                           ; BSR set to: 0
   766                           ;main.c: 15:     TRISD = 0;
   767  001388  0E00               	movlw	0
   768  00138A  6E95               	movwf	149,c	;volatile
   769  00138C                     
   770                           ; BSR set to: 0
   771                           ;main.c: 16:     ANSELD = 0;
   772  00138C  0E00               	movlw	0
   773  00138E  010F               	movlb	15	; () banked
   774  001390  6F5E               	movwf	94,b	;volatile
   775  001392                     l2627:
   776                           
   777                           ;main.c: 19:     {;main.c: 20:         _delay((unsigned long)((100)*(48000000/4000.0)));
   778  001392  0E07               	movlw	7
   779  001394  0100               	movlb	0	; () banked
   780  001396  6FCC               	movwf	(??_main+1)& (0+255),b
   781  001398  0E17               	movlw	23
   782  00139A  6FCB               	movwf	??_main& (0+255),b
   783  00139C  0E6A               	movlw	106
   784  00139E                     u2417:
   785  00139E  2EE8               	decfsz	wreg,f,c
   786  0013A0  D7FE               	bra	u2417
   787  0013A2  2FCB               	decfsz	??_main& (0+255),f,b
   788  0013A4  D7FC               	bra	u2417
   789  0013A6  2FCC               	decfsz	(??_main+1)& (0+255),f,b
   790  0013A8  D7FA               	bra	u2417
   791  0013AA  F000               	nop	
   792  0013AC                     
   793                           ;main.c: 21:         LATDbits.LATD6 = !LATDbits.LATD6;
   794  0013AC  AC8C               	btfss	140,6,c	;volatile
   795  0013AE  EFDB  F009         	goto	u2391
   796  0013B2  EFE0  F009         	goto	u2390
   797  0013B6                     u2391:
   798  0013B6  0100               	movlb	0	; () banked
   799  0013B8  6BCB               	clrf	??_main& (0+255),b
   800  0013BA  2BCB               	incf	??_main& (0+255),f,b
   801  0013BC  EFE2  F009         	goto	u2408
   802  0013C0                     u2390:
   803  0013C0  0100               	movlb	0	; () banked
   804  0013C2  6BCB               	clrf	??_main& (0+255),b
   805  0013C4                     u2408:
   806  0013C4  3BCB               	swapf	??_main& (0+255),f,b
   807  0013C6  47CB               	rlncf	??_main& (0+255),f,b
   808  0013C8  47CB               	rlncf	??_main& (0+255),f,b
   809  0013CA  508C               	movf	140,w,c	;volatile
   810  0013CC  19CB               	xorwf	??_main& (0+255),w,b
   811  0013CE  0BBF               	andlw	-65
   812  0013D0  19CB               	xorwf	??_main& (0+255),w,b
   813  0013D2  6E8C               	movwf	140,c	;volatile
   814  0013D4                     
   815                           ; BSR set to: 0
   816                           ;main.c: 22:         printf("counter: %d\r\n", counter++);
   817  0013D4  0E73               	movlw	low STR_7
   818  0013D6  6FC5               	movwf	printf@fmt& (0+255),b
   819  0013D8  0E08               	movlw	high STR_7
   820  0013DA  6FC6               	movwf	(printf@fmt+1)& (0+255),b
   821  0013DC  C0CD  F0C7         	movff	main@counter,?_printf+2
   822  0013E0  C0CE  F0C8         	movff	main@counter+1,?_printf+3
   823  0013E4  EC6F  F00B         	call	_printf	;wreg free
   824  0013E8  0100               	movlb	0	; () banked
   825  0013EA  4BCD               	infsnz	main@counter& (0+255),f,b
   826  0013EC  2BCE               	incf	(main@counter+1)& (0+255),f,b
   827  0013EE  EFC9  F009         	goto	l2627
   828  0013F2  EF51  F000         	goto	start
   829  0013F6                     __end_of_main:
   830                           	callstack 0
   831                           
   832 ;; *************** function _printf *****************
   833 ;; Defined at:
   834 ;;		line 5 in file "/Applications/microchip/xc8/v2.35/pic/sources/c99/common/printf.c"
   835 ;; Parameters:    Size  Location     Type
   836 ;;  fmt             2    8[BANK0 ] PTR const unsigned char 
   837 ;;		 -> STR_7(14), STR_6(4), STR_5(3), STR_4(12), 
   838 ;;		 -> STR_3(62), STR_2(17), 
   839 ;; Auto vars:     Size  Location     Type
   840 ;;  ap              2   12[BANK0 ] PTR void [1]
   841 ;;		 -> ?_printf(2), 
   842 ;;  ret             2    0        int 
   843 ;; Return value:  Size  Location     Type
   844 ;;                  2    8[BANK0 ] int 
   845 ;; Registers used:
   846 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   847 ;; Tracked objects:
   848 ;;		On entry : 0/0
   849 ;;		On exit  : 0/0
   850 ;;		Unchanged: 0/0
   851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   852 ;;      Params:         0       4       0       0       0       0       0       0       0
   853 ;;      Locals:         0       2       0       0       0       0       0       0       0
   854 ;;      Temps:          0       0       0       0       0       0       0       0       0
   855 ;;      Totals:         0       6       0       0       0       0       0       0       0
   856 ;;Total ram usage:        6 bytes
   857 ;; Hardware stack levels used: 1
   858 ;; Hardware stack levels required when called: 12
   859 ;; This function calls:
   860 ;;		_vfprintf
   861 ;; This function is called by:
   862 ;;		_main
   863 ;;		_UART_example_PRINTF
   864 ;;		_UART_example_READ
   865 ;;		_UART_example_RUNALL
   866 ;; This function uses a non-reentrant model
   867 ;;
   868                           
   869                           	psect	text1
   870  0016DE                     __ptext1:
   871                           	callstack 0
   872  0016DE                     _printf:
   873                           	callstack 18
   874  0016DE  0EC7               	movlw	low (?_printf+2)
   875  0016E0  0100               	movlb	0	; () banked
   876  0016E2  6FC9               	movwf	printf@ap& (0+255),b
   877  0016E4  0E00               	movlw	high (?_printf+2)
   878  0016E6  6FCA               	movwf	(printf@ap+1)& (0+255),b
   879  0016E8                     
   880                           ; BSR set to: 0
   881  0016E8  0E00               	movlw	0
   882  0016EA  6FBD               	movwf	vfprintf@fp& (0+255),b
   883  0016EC  0E00               	movlw	0
   884  0016EE  6FBE               	movwf	(vfprintf@fp+1)& (0+255),b
   885  0016F0  C0C5  F0BF         	movff	printf@fmt,vfprintf@fmt
   886  0016F4  C0C6  F0C0         	movff	printf@fmt+1,vfprintf@fmt+1
   887  0016F8  0EC9               	movlw	low printf@ap
   888  0016FA  6FC1               	movwf	vfprintf@ap& (0+255),b
   889  0016FC  0E00               	movlw	high printf@ap
   890  0016FE  6FC2               	movwf	(vfprintf@ap+1)& (0+255),b
   891  001700  EC36  F00A         	call	_vfprintf	;wreg free
   892  001704  0012               	return		;funcret
   893  001706                     __end_of_printf:
   894                           	callstack 0
   895                           
   896 ;; *************** function _vfprintf *****************
   897 ;; Defined at:
   898 ;;		line 1390 in file "/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c"
   899 ;; Parameters:    Size  Location     Type
   900 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
   901 ;;		 -> NULL(0), 
   902 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
   903 ;;		 -> STR_7(14), STR_6(4), STR_5(3), STR_4(12), 
   904 ;;		 -> STR_3(62), STR_2(17), 
   905 ;;  ap              2    4[BANK0 ] PTR PTR void 
   906 ;;		 -> printf@ap(2), 
   907 ;; Auto vars:     Size  Location     Type
   908 ;;  cfmt            2    6[BANK0 ] PTR unsigned char 
   909 ;;		 -> STR_7(14), STR_6(4), STR_5(3), STR_4(12), 
   910 ;;		 -> STR_3(62), STR_2(17), 
   911 ;; Return value:  Size  Location     Type
   912 ;;                  2    0[BANK0 ] int 
   913 ;; Registers used:
   914 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   915 ;; Tracked objects:
   916 ;;		On entry : 0/0
   917 ;;		On exit  : 0/0
   918 ;;		Unchanged: 0/0
   919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   920 ;;      Params:         0       6       0       0       0       0       0       0       0
   921 ;;      Locals:         0       2       0       0       0       0       0       0       0
   922 ;;      Temps:          0       0       0       0       0       0       0       0       0
   923 ;;      Totals:         0       8       0       0       0       0       0       0       0
   924 ;;Total ram usage:        8 bytes
   925 ;; Hardware stack levels used: 1
   926 ;; Hardware stack levels required when called: 11
   927 ;; This function calls:
   928 ;;		_vfpfcnvrt
   929 ;; This function is called by:
   930 ;;		_printf
   931 ;; This function uses a non-reentrant model
   932 ;;
   933                           
   934                           	psect	text2
   935  00146C                     __ptext2:
   936                           	callstack 0
   937  00146C                     _vfprintf:
   938                           	callstack 18
   939  00146C                     
   940                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 1390: int vfprintf(F
      +                          ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v2.35/pic/sources/c99/
      +                          common/doprnt.c: 1391: {;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt
      +                          .c: 1393:     char *cfmt;;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprn
      +                          t.c: 1395:     cfmt = (char *)fmt;
   941  00146C  C0BF  F0C3         	movff	vfprintf@fmt,vfprintf@cfmt
   942  001470  C0C0  F0C4         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   943  001474                     
   944                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 1396:     nout = 0;
   945  001474  0E00               	movlw	0
   946  001476  0100               	movlb	0	; () banked
   947  001478  6F79               	movwf	(_nout+1)& (0+255),b
   948  00147A  0E00               	movlw	0
   949  00147C  6F78               	movwf	_nout& (0+255),b
   950                           
   951                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 1397:     while (*cf
      +                          mt) {
   952  00147E  EF54  F00A         	goto	l2551
   953  001482                     l2549:
   954                           
   955                           ; BSR set to: 0
   956                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 1398:         nout +
      +                          = vfpfcnvrt(fp, &cfmt, ap);
   957  001482  C0BD  F046         	movff	vfprintf@fp,vfpfcnvrt@fp
   958  001486  C0BE  F047         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   959  00148A  0EC3               	movlw	low vfprintf@cfmt
   960  00148C  6E48               	movwf	vfpfcnvrt@fmt^0,c
   961  00148E  0E00               	movlw	high vfprintf@cfmt
   962  001490  6E49               	movwf	(vfpfcnvrt@fmt+1)^0,c
   963  001492  C0C1  F04A         	movff	vfprintf@ap,vfpfcnvrt@ap
   964  001496  C0C2  F04B         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   965  00149A  ECBA  F005         	call	_vfpfcnvrt	;wreg free
   966  00149E  5046               	movf	?_vfpfcnvrt^0,w,c
   967  0014A0  0100               	movlb	0	; () banked
   968  0014A2  2778               	addwf	_nout& (0+255),f,b
   969  0014A4  5047               	movf	(?_vfpfcnvrt+1)^0,w,c
   970  0014A6  2379               	addwfc	(_nout+1)& (0+255),f,b
   971  0014A8                     l2551:
   972                           
   973                           ; BSR set to: 0
   974                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 1397:     while (*cf
      +                          mt) {
   975  0014A8  C0C3  FFF6         	movff	vfprintf@cfmt,tblptrl
   976  0014AC  C0C4  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   977  0014B0                     	if	0	;tblptru may be non-zero
   978  0014B0                     	endif
   979  0014B0                     	if	0	;tblptru may be non-zero
   980  0014B0                     	endif
   981  0014B0  0008               	tblrd		*
   982  0014B2  50F5               	movf	tablat,w,c
   983  0014B4  0900               	iorlw	0
   984  0014B6  A4D8               	btfss	status,2,c
   985  0014B8  EF60  F00A         	goto	u2291
   986  0014BC  EF62  F00A         	goto	u2290
   987  0014C0                     u2291:
   988  0014C0  EF41  F00A         	goto	l2549
   989  0014C4                     u2290:
   990  0014C4                     
   991                           ; BSR set to: 0
   992                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 1400:     return nou
      +                          t;
   993  0014C4  C078  F0BD         	movff	_nout,?_vfprintf
   994  0014C8  C079  F0BE         	movff	_nout+1,?_vfprintf+1
   995  0014CC                     
   996                           ; BSR set to: 0
   997  0014CC  0012               	return		;funcret
   998  0014CE                     __end_of_vfprintf:
   999                           	callstack 0
  1000                           
  1001 ;; *************** function _vfpfcnvrt *****************
  1002 ;; Defined at:
  1003 ;;		line 692 in file "/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c"
  1004 ;; Parameters:    Size  Location     Type
  1005 ;;  fp              2   69[COMRAM] PTR struct _IO_FILE
  1006 ;;		 -> NULL(0), 
  1007 ;;  fmt             2   71[COMRAM] PTR PTR unsigned char 
  1008 ;;		 -> vfprintf@cfmt(2), 
  1009 ;;  ap              2   73[COMRAM] PTR PTR void 
  1010 ;;		 -> printf@ap(2), 
  1011 ;; Auto vars:     Size  Location     Type
  1012 ;;  ll              8   77[COMRAM] long long 
  1013 ;;  llu             8    0        unsigned long long 
  1014 ;;  f               4    0        unsigned long long 
  1015 ;;  vp              3    0        PTR void 
  1016 ;;  ct              3    0        unsigned char [3]
  1017 ;;  cp              3    0        PTR unsigned char 
  1018 ;;  i               2    0        int 
  1019 ;;  done            2    0        int 
  1020 ;;  c               1   85[COMRAM] unsigned char 
  1021 ;; Return value:  Size  Location     Type
  1022 ;;                  2   69[COMRAM] int 
  1023 ;; Registers used:
  1024 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1025 ;; Tracked objects:
  1026 ;;		On entry : 0/0
  1027 ;;		On exit  : 0/0
  1028 ;;		Unchanged: 0/0
  1029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1030 ;;      Params:         6       0       0       0       0       0       0       0       0
  1031 ;;      Locals:         9       0       0       0       0       0       0       0       0
  1032 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1033 ;;      Totals:        17       0       0       0       0       0       0       0       0
  1034 ;;Total ram usage:       17 bytes
  1035 ;; Hardware stack levels used: 1
  1036 ;; Hardware stack levels required when called: 10
  1037 ;; This function calls:
  1038 ;;		_ctoa
  1039 ;;		_dtoa
  1040 ;;		_fputc
  1041 ;; This function is called by:
  1042 ;;		_vfprintf
  1043 ;; This function uses a non-reentrant model
  1044 ;;
  1045                           
  1046                           	psect	text3
  1047  000B74                     __ptext3:
  1048                           	callstack 0
  1049  000B74                     _vfpfcnvrt:
  1050                           	callstack 18
  1051  000B74                     
  1052                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 692: static int vfpf
      +                          cnvrt(FILE *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v2.35/pic/sources/c
      +                          99/common/doprnt.c: 693: {;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/dopr
      +                          nt.c: 694:     char c, *cp, ct[3];;/Applications/microchip/xc8/v2.35/pic/sources/c99/com
      +                          mon/doprnt.c: 695:     int done, i;;/Applications/microchip/xc8/v2.35/pic/sources/c99/co
      +                          mmon/doprnt.c: 696:     long long ll;;/Applications/microchip/xc8/v2.35/pic/sources/c99/
      +                          common/doprnt.c: 697:     unsigned long long llu;
  1053  000B74  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1054  000B78  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1055  000B7C  CFDE FFF6          	movff	postinc2,tblptrl
  1056  000B80  CFDD FFF7          	movff	postdec2,tblptrh
  1057  000B84                     	if	0	;tblptru may be non-zero
  1058  000B84                     	endif
  1059  000B84                     	if	0	;tblptru may be non-zero
  1060  000B84                     	endif
  1061  000B84  0008               	tblrd		*
  1062  000B86  50F5               	movf	tablat,w,c
  1063  000B88  0A25               	xorlw	37
  1064  000B8A  A4D8               	btfss	status,2,c
  1065  000B8C  EFCA  F005         	goto	u2241
  1066  000B90  EFCC  F005         	goto	u2240
  1067  000B94                     u2241:
  1068  000B94  EFB1  F006         	goto	l2537
  1069  000B98                     u2240:
  1070  000B98                     
  1071                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 703:         ++*fmt;
  1072  000B98  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1073  000B9C  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1074  000BA0  2ADE               	incf	postinc2,f,c
  1075  000BA2  0E00               	movlw	0
  1076  000BA4  22DD               	addwfc	postdec2,f,c
  1077  000BA6                     
  1078                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 705:         flags =
      +                           width = 0;
  1079  000BA6  0E00               	movlw	0
  1080  000BA8  0100               	movlb	0	; () banked
  1081  000BAA  6F7B               	movwf	(_width+1)& (0+255),b
  1082  000BAC  0E00               	movlw	0
  1083  000BAE  6F7A               	movwf	_width& (0+255),b
  1084  000BB0  C07A  F057         	movff	_width,_flags
  1085  000BB4  C07B  F058         	movff	_width+1,_flags+1
  1086  000BB8                     
  1087                           ; BSR set to: 0
  1088                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 706:         prec = 
      +                          -1;
  1089  000BB8  697C               	setf	_prec& (0+255),b
  1090  000BBA  697D               	setf	(_prec+1)& (0+255),b
  1091  000BBC                     
  1092                           ; BSR set to: 0
  1093                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 814:         if (*fm
      +                          t[0] == 'c') {
  1094  000BBC  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1095  000BC0  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1096  000BC4  CFDE FFF6          	movff	postinc2,tblptrl
  1097  000BC8  CFDD FFF7          	movff	postdec2,tblptrh
  1098  000BCC                     	if	0	;tblptru may be non-zero
  1099  000BCC                     	endif
  1100  000BCC                     	if	0	;tblptru may be non-zero
  1101  000BCC                     	endif
  1102  000BCC  0008               	tblrd		*
  1103  000BCE  50F5               	movf	tablat,w,c
  1104  000BD0  0A63               	xorlw	99
  1105  000BD2  A4D8               	btfss	status,2,c
  1106  000BD4  EFEE  F005         	goto	u2251
  1107  000BD8  EFF0  F005         	goto	u2250
  1108  000BDC                     u2251:
  1109  000BDC  EF17  F006         	goto	l2511
  1110  000BE0                     u2250:
  1111  000BE0                     
  1112                           ; BSR set to: 0
  1113                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 815:             ++*
      +                          fmt;
  1114  000BE0  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1115  000BE4  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1116  000BE8  2ADE               	incf	postinc2,f,c
  1117  000BEA  0E00               	movlw	0
  1118  000BEC  22DD               	addwfc	postdec2,f,c
  1119                           
  1120                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 816:             c =
      +                           (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  1121  000BEE  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1122  000BF2  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1123  000BF6  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  1124  000BFA  0E02               	movlw	2
  1125  000BFC  26DE               	addwf	postinc2,f,c
  1126  000BFE  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  1127  000C02  0E00               	movlw	0
  1128  000C04  22DD               	addwfc	postdec2,f,c
  1129  000C06  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1130  000C0A  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1131  000C0E  50DF               	movf	indf2,w,c
  1132  000C10  6E56               	movwf	vfpfcnvrt@c^0,c
  1133  000C12                     
  1134                           ; BSR set to: 0
  1135                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 817:             ret
      +                          urn ctoa(fp, c);
  1136  000C12  C046  F010         	movff	vfpfcnvrt@fp,ctoa@fp
  1137  000C16  C047  F011         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  1138  000C1A  C056  F012         	movff	vfpfcnvrt@c,ctoa@c
  1139  000C1E  EC43  F008         	call	_ctoa	;wreg free
  1140  000C22  C010  F046         	movff	?_ctoa,?_vfpfcnvrt
  1141  000C26  C011  F047         	movff	?_ctoa+1,?_vfpfcnvrt+1
  1142  000C2A  EFCC  F006         	goto	l1096
  1143  000C2E                     l2511:
  1144                           
  1145                           ; BSR set to: 0
  1146                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 847:         if ((*f
      +                          mt[0] == 'd') || (*fmt[0] == 'i')) {
  1147  000C2E  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1148  000C32  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1149  000C36  CFDE FFF6          	movff	postinc2,tblptrl
  1150  000C3A  CFDD FFF7          	movff	postdec2,tblptrh
  1151  000C3E                     	if	0	;tblptru may be non-zero
  1152  000C3E                     	endif
  1153  000C3E                     	if	0	;tblptru may be non-zero
  1154  000C3E                     	endif
  1155  000C3E  0008               	tblrd		*
  1156  000C40  50F5               	movf	tablat,w,c
  1157  000C42  0A64               	xorlw	100
  1158  000C44  B4D8               	btfsc	status,2,c
  1159  000C46  EF27  F006         	goto	u2261
  1160  000C4A  EF29  F006         	goto	u2260
  1161  000C4E                     u2261:
  1162  000C4E  EF3B  F006         	goto	l2515
  1163  000C52                     u2260:
  1164  000C52                     
  1165                           ; BSR set to: 0
  1166  000C52  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1167  000C56  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1168  000C5A  CFDE FFF6          	movff	postinc2,tblptrl
  1169  000C5E  CFDD FFF7          	movff	postdec2,tblptrh
  1170  000C62                     	if	0	;tblptru may be non-zero
  1171  000C62                     	endif
  1172  000C62                     	if	0	;tblptru may be non-zero
  1173  000C62                     	endif
  1174  000C62  0008               	tblrd		*
  1175  000C64  50F5               	movf	tablat,w,c
  1176  000C66  0A69               	xorlw	105
  1177  000C68  A4D8               	btfss	status,2,c
  1178  000C6A  EF39  F006         	goto	u2271
  1179  000C6E  EF3B  F006         	goto	u2270
  1180  000C72                     u2271:
  1181  000C72  EF7B  F006         	goto	l2521
  1182  000C76                     u2270:
  1183  000C76                     l2515:
  1184                           
  1185                           ; BSR set to: 0
  1186                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 849:             ++*
      +                          fmt;
  1187  000C76  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1188  000C7A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1189  000C7E  2ADE               	incf	postinc2,f,c
  1190  000C80  0E00               	movlw	0
  1191  000C82  22DD               	addwfc	postdec2,f,c
  1192                           
  1193                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 850:             ll 
      +                          = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1194  000C84  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1195  000C88  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1196  000C8C  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  1197  000C90  0E02               	movlw	2
  1198  000C92  26DE               	addwf	postinc2,f,c
  1199  000C94  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  1200  000C98  0E00               	movlw	0
  1201  000C9A  22DD               	addwfc	postdec2,f,c
  1202  000C9C  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1203  000CA0  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1204  000CA4  CFDE F04E          	movff	postinc2,vfpfcnvrt@ll
  1205  000CA8  CFDD F04F          	movff	postdec2,vfpfcnvrt@ll+1
  1206  000CAC  0E00               	movlw	0
  1207  000CAE  BE4F               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  1208  000CB0  0EFF               	movlw	-1
  1209  000CB2  6E50               	movwf	(vfpfcnvrt@ll+2)^0,c
  1210  000CB4  6E51               	movwf	(vfpfcnvrt@ll+3)^0,c
  1211  000CB6  6E52               	movwf	(vfpfcnvrt@ll+4)^0,c
  1212  000CB8  6E53               	movwf	(vfpfcnvrt@ll+5)^0,c
  1213  000CBA  6E54               	movwf	(vfpfcnvrt@ll+6)^0,c
  1214  000CBC  6E55               	movwf	(vfpfcnvrt@ll+7)^0,c
  1215  000CBE                     
  1216                           ; BSR set to: 0
  1217                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 852:             ret
      +                          urn dtoa(fp, ll);
  1218  000CBE  C046  F022         	movff	vfpfcnvrt@fp,dtoa@fp
  1219  000CC2  C047  F023         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1220  000CC6  C04E  F024         	movff	vfpfcnvrt@ll,dtoa@d
  1221  000CCA  C04F  F025         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1222  000CCE  C050  F026         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1223  000CD2  C051  F027         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1224  000CD6  C052  F028         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1225  000CDA  C053  F029         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1226  000CDE  C054  F02A         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1227  000CE2  C055  F02B         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1228  000CE6  EC4B  F004         	call	_dtoa	;wreg free
  1229  000CEA  C022  F046         	movff	?_dtoa,?_vfpfcnvrt
  1230  000CEE  C023  F047         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1231  000CF2  EFCC  F006         	goto	l1096
  1232  000CF6                     l2521:
  1233                           
  1234                           ; BSR set to: 0
  1235                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 1372:         if ((*
      +                          fmt)[0] == '%') {
  1236  000CF6  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1237  000CFA  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1238  000CFE  CFDE FFF6          	movff	postinc2,tblptrl
  1239  000D02  CFDD FFF7          	movff	postdec2,tblptrh
  1240  000D06                     	if	0	;tblptru may be non-zero
  1241  000D06                     	endif
  1242  000D06                     	if	0	;tblptru may be non-zero
  1243  000D06                     	endif
  1244  000D06  0008               	tblrd		*
  1245  000D08  50F5               	movf	tablat,w,c
  1246  000D0A  0A25               	xorlw	37
  1247  000D0C  A4D8               	btfss	status,2,c
  1248  000D0E  EF8B  F006         	goto	u2281
  1249  000D12  EF8D  F006         	goto	u2280
  1250  000D16                     u2281:
  1251  000D16  EFA4  F006         	goto	l2531
  1252  000D1A                     u2280:
  1253  000D1A                     
  1254                           ; BSR set to: 0
  1255                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 1373:             ++
      +                          *fmt;
  1256  000D1A  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1257  000D1E  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1258  000D22  2ADE               	incf	postinc2,f,c
  1259  000D24  0E00               	movlw	0
  1260  000D26  22DD               	addwfc	postdec2,f,c
  1261  000D28                     
  1262                           ; BSR set to: 0
  1263                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 1374:             fp
      +                          utc((int)'%', fp);
  1264  000D28  0E00               	movlw	0
  1265  000D2A  6E08               	movwf	(fputc@c+1)^0,c
  1266  000D2C  0E25               	movlw	37
  1267  000D2E  6E07               	movwf	fputc@c^0,c
  1268  000D30  C046  F009         	movff	vfpfcnvrt@fp,fputc@fp
  1269  000D34  C047  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1270  000D38  EC70  F009         	call	_fputc	;wreg free
  1271  000D3C                     l2527:
  1272                           
  1273                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 1375:             re
      +                          turn 1;
  1274  000D3C  0E00               	movlw	0
  1275  000D3E  6E47               	movwf	(?_vfpfcnvrt+1)^0,c
  1276  000D40  0E01               	movlw	1
  1277  000D42  6E46               	movwf	?_vfpfcnvrt^0,c
  1278  000D44  EFCC  F006         	goto	l1096
  1279  000D48                     l2531:
  1280                           
  1281                           ; BSR set to: 0
  1282                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 1379:         ++*fmt
      +                          ;
  1283  000D48  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1284  000D4C  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1285  000D50  2ADE               	incf	postinc2,f,c
  1286  000D52  0E00               	movlw	0
  1287  000D54  22DD               	addwfc	postdec2,f,c
  1288  000D56                     
  1289                           ; BSR set to: 0
  1290                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 1380:         return
      +                           0;
  1291  000D56  0E00               	movlw	0
  1292  000D58  6E47               	movwf	(?_vfpfcnvrt+1)^0,c
  1293  000D5A  0E00               	movlw	0
  1294  000D5C  6E46               	movwf	?_vfpfcnvrt^0,c
  1295  000D5E  EFCC  F006         	goto	l1096
  1296  000D62                     l2537:
  1297                           
  1298                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 1384:     fputc((int
      +                          )(*fmt)[0], fp);
  1299  000D62  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1300  000D66  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1301  000D6A  CFDE FFF6          	movff	postinc2,tblptrl
  1302  000D6E  CFDD FFF7          	movff	postdec2,tblptrh
  1303  000D72                     	if	0	;tblptru may be non-zero
  1304  000D72                     	endif
  1305  000D72                     	if	0	;tblptru may be non-zero
  1306  000D72                     	endif
  1307  000D72  0008               	tblrd		*
  1308  000D74  50F5               	movf	tablat,w,c
  1309  000D76  6E07               	movwf	fputc@c^0,c
  1310  000D78  6A08               	clrf	(fputc@c+1)^0,c
  1311  000D7A  C046  F009         	movff	vfpfcnvrt@fp,fputc@fp
  1312  000D7E  C047  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1313  000D82  EC70  F009         	call	_fputc	;wreg free
  1314  000D86                     
  1315                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 1385:     ++*fmt;
  1316  000D86  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1317  000D8A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1318  000D8E  2ADE               	incf	postinc2,f,c
  1319  000D90  0E00               	movlw	0
  1320  000D92  22DD               	addwfc	postdec2,f,c
  1321  000D94  EF9E  F006         	goto	l2527
  1322  000D98                     l1096:
  1323  000D98  0012               	return		;funcret
  1324  000D9A                     __end_of_vfpfcnvrt:
  1325                           	callstack 0
  1326                           
  1327 ;; *************** function _dtoa *****************
  1328 ;; Defined at:
  1329 ;;		line 287 in file "/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c"
  1330 ;; Parameters:    Size  Location     Type
  1331 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  1332 ;;		 -> NULL(0), 
  1333 ;;  d               8   35[COMRAM] long long 
  1334 ;; Auto vars:     Size  Location     Type
  1335 ;;  n               8   59[COMRAM] long long 
  1336 ;;  i               2   67[COMRAM] int 
  1337 ;;  s               2   57[COMRAM] int 
  1338 ;;  w               2   55[COMRAM] int 
  1339 ;;  p               2   53[COMRAM] int 
  1340 ;; Return value:  Size  Location     Type
  1341 ;;                  2   33[COMRAM] int 
  1342 ;; Registers used:
  1343 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1344 ;; Tracked objects:
  1345 ;;		On entry : 0/0
  1346 ;;		On exit  : 0/0
  1347 ;;		Unchanged: 0/0
  1348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1349 ;;      Params:        10       0       0       0       0       0       0       0       0
  1350 ;;      Locals:        18       0       0       0       0       0       0       0       0
  1351 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1352 ;;      Totals:        36       0       0       0       0       0       0       0       0
  1353 ;;Total ram usage:       36 bytes
  1354 ;; Hardware stack levels used: 1
  1355 ;; Hardware stack levels required when called: 9
  1356 ;; This function calls:
  1357 ;;		___aodiv
  1358 ;;		___aomod
  1359 ;;		_abs
  1360 ;;		_pad
  1361 ;; This function is called by:
  1362 ;;		_vfpfcnvrt
  1363 ;; This function uses a non-reentrant model
  1364 ;;
  1365                           
  1366                           	psect	text4
  1367  000896                     __ptext4:
  1368                           	callstack 0
  1369  000896                     _dtoa:
  1370                           	callstack 18
  1371  000896                     
  1372                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 287: static int dtoa
      +                          (FILE *fp, long long d);/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.
      +                          c: 288: {;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 289:     in
      +                          t i, p, s, w;;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 290:   
      +                            long long n;;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 293:  
      +                             n = d;
  1373  000896  C024  F03C         	movff	dtoa@d,dtoa@n
  1374  00089A  C025  F03D         	movff	dtoa@d+1,dtoa@n+1
  1375  00089E  C026  F03E         	movff	dtoa@d+2,dtoa@n+2
  1376  0008A2  C027  F03F         	movff	dtoa@d+3,dtoa@n+3
  1377  0008A6  C028  F040         	movff	dtoa@d+4,dtoa@n+4
  1378  0008AA  C029  F041         	movff	dtoa@d+5,dtoa@n+5
  1379  0008AE  C02A  F042         	movff	dtoa@d+6,dtoa@n+6
  1380  0008B2  C02B  F043         	movff	dtoa@d+7,dtoa@n+7
  1381  0008B6                     
  1382                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 294:     s = n < 0 ?
      +                           1 : 0;
  1383  0008B6  BE43               	btfsc	(dtoa@n+7)^0,7,c
  1384  0008B8  EF60  F004         	goto	u2091
  1385  0008BC  EF63  F004         	goto	u2090
  1386  0008C0                     u2091:
  1387  0008C0  0E01               	movlw	1
  1388  0008C2  EF64  F004         	goto	u2100
  1389  0008C6                     u2090:
  1390  0008C6  0E00               	movlw	0
  1391  0008C8                     u2100:
  1392  0008C8  6E3A               	movwf	dtoa@s^0,c
  1393  0008CA  6A3B               	clrf	(dtoa@s+1)^0,c
  1394                           
  1395                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 295:     if (s) {
  1396  0008CC  503A               	movf	dtoa@s^0,w,c
  1397  0008CE  103B               	iorwf	(dtoa@s+1)^0,w,c
  1398  0008D0  B4D8               	btfsc	status,2,c
  1399  0008D2  EF6D  F004         	goto	u2111
  1400  0008D6  EF6F  F004         	goto	u2110
  1401  0008DA                     u2111:
  1402  0008DA  EF7F  F004         	goto	l2439
  1403  0008DE                     u2110:
  1404  0008DE                     
  1405                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 296:         n = -n;
  1406  0008DE  1E43               	comf	(dtoa@n+7)^0,f,c
  1407  0008E0  1E42               	comf	(dtoa@n+6)^0,f,c
  1408  0008E2  1E41               	comf	(dtoa@n+5)^0,f,c
  1409  0008E4  1E40               	comf	(dtoa@n+4)^0,f,c
  1410  0008E6  1E3F               	comf	(dtoa@n+3)^0,f,c
  1411  0008E8  1E3E               	comf	(dtoa@n+2)^0,f,c
  1412  0008EA  1E3D               	comf	(dtoa@n+1)^0,f,c
  1413  0008EC  6C3C               	negf	dtoa@n^0,c
  1414  0008EE  0E00               	movlw	0
  1415  0008F0  223D               	addwfc	(dtoa@n+1)^0,f,c
  1416  0008F2  223E               	addwfc	(dtoa@n+2)^0,f,c
  1417  0008F4  223F               	addwfc	(dtoa@n+3)^0,f,c
  1418  0008F6  2240               	addwfc	(dtoa@n+4)^0,f,c
  1419  0008F8  2241               	addwfc	(dtoa@n+5)^0,f,c
  1420  0008FA  2242               	addwfc	(dtoa@n+6)^0,f,c
  1421  0008FC  2243               	addwfc	(dtoa@n+7)^0,f,c
  1422  0008FE                     l2439:
  1423                           
  1424                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 300:     if (!(prec 
      +                          < 0)) {
  1425  0008FE  0100               	movlb	0	; () banked
  1426  000900  BF7D               	btfsc	(_prec+1)& (0+255),7,b
  1427  000902  EF85  F004         	goto	u2121
  1428  000906  EF87  F004         	goto	u2120
  1429  00090A                     u2121:
  1430  00090A  EF88  F004         	goto	l2443
  1431  00090E                     u2120:
  1432  00090E                     
  1433                           ; BSR set to: 0
  1434                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 301:         flags &
      +                          = ~(1 << 1);
  1435  00090E  9257               	bcf	_flags^0,1,c
  1436  000910                     l2443:
  1437                           
  1438                           ; BSR set to: 0
  1439                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 303:     p = (0 < pr
      +                          ec) ? prec : 1;
  1440  000910  BF7D               	btfsc	(_prec+1)& (0+255),7,b
  1441  000912  EF95  F004         	goto	u2130
  1442  000916  517D               	movf	(_prec+1)& (0+255),w,b
  1443  000918  E106               	bnz	u2131
  1444  00091A  057C               	decf	_prec& (0+255),w,b
  1445  00091C  B0D8               	btfsc	status,0,c
  1446  00091E  EF93  F004         	goto	u2131
  1447  000922  EF95  F004         	goto	u2130
  1448  000926                     u2131:
  1449  000926  EF9B  F004         	goto	l1071
  1450  00092A                     u2130:
  1451  00092A                     
  1452                           ; BSR set to: 0
  1453  00092A  0E00               	movlw	0
  1454  00092C  6E37               	movwf	(dtoa@p+1)^0,c
  1455  00092E  0E01               	movlw	1
  1456  000930  6E36               	movwf	dtoa@p^0,c
  1457  000932  EF9F  F004         	goto	l1073
  1458  000936                     l1071:
  1459                           
  1460                           ; BSR set to: 0
  1461  000936  C07C  F036         	movff	_prec,dtoa@p
  1462  00093A  C07D  F037         	movff	_prec+1,dtoa@p+1
  1463  00093E                     l1073:
  1464                           
  1465                           ; BSR set to: 0
  1466                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 304:     w = width;
  1467  00093E  C07A  F038         	movff	_width,dtoa@w
  1468  000942  C07B  F039         	movff	_width+1,dtoa@w+1
  1469  000946                     
  1470                           ; BSR set to: 0
  1471                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 305:     if (s || (f
      +                          lags & (1 << 2))) {
  1472  000946  503A               	movf	dtoa@s^0,w,c
  1473  000948  103B               	iorwf	(dtoa@s+1)^0,w,c
  1474  00094A  A4D8               	btfss	status,2,c
  1475  00094C  EFAA  F004         	goto	u2141
  1476  000950  EFAC  F004         	goto	u2140
  1477  000954                     u2141:
  1478  000954  EFB3  F004         	goto	l2451
  1479  000958                     u2140:
  1480  000958                     
  1481                           ; BSR set to: 0
  1482  000958  A457               	btfss	_flags^0,2,c
  1483  00095A  EFB1  F004         	goto	u2151
  1484  00095E  EFB3  F004         	goto	u2150
  1485  000962                     u2151:
  1486  000962  EFB6  F004         	goto	l2453
  1487  000966                     u2150:
  1488  000966                     l2451:
  1489                           
  1490                           ; BSR set to: 0
  1491                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 306:         --w;
  1492  000966  0638               	decf	dtoa@w^0,f,c
  1493  000968  A0D8               	btfss	status,0,c
  1494  00096A  0639               	decf	(dtoa@w+1)^0,f,c
  1495  00096C                     l2453:
  1496                           
  1497                           ; BSR set to: 0
  1498                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 310:     i = sizeof(
      +                          dbuf) - 1;
  1499  00096C  0E00               	movlw	0
  1500  00096E  6E45               	movwf	(dtoa@i+1)^0,c
  1501  000970  0E1F               	movlw	31
  1502  000972  6E44               	movwf	dtoa@i^0,c
  1503  000974                     
  1504                           ; BSR set to: 0
  1505                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 311:     dbuf[i] = '
      +                          \0';
  1506  000974  0E00               	movlw	0
  1507  000976  6FAC               	movwf	(_dbuf+31)& (0+255),b
  1508                           
  1509                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 312:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1510  000978  EF3A  F005         	goto	l2467
  1511  00097C                     l2457:
  1512                           
  1513                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 313:         --i;
  1514  00097C  0644               	decf	dtoa@i^0,f,c
  1515  00097E  A0D8               	btfss	status,0,c
  1516  000980  0645               	decf	(dtoa@i+1)^0,f,c
  1517  000982                     
  1518                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 314:         dbuf[i]
      +                           = (char)((int)'0' + abs(n % 10));
  1519  000982  0E8D               	movlw	low _dbuf
  1520  000984  2444               	addwf	dtoa@i^0,w,c
  1521  000986  6ED9               	movwf	fsr2l,c
  1522  000988  0E00               	movlw	high _dbuf
  1523  00098A  2045               	addwfc	(dtoa@i+1)^0,w,c
  1524  00098C  6EDA               	movwf	fsr2h,c
  1525  00098E  C03C  F005         	movff	dtoa@n,___aomod@dividend
  1526  000992  C03D  F006         	movff	dtoa@n+1,___aomod@dividend+1
  1527  000996  C03E  F007         	movff	dtoa@n+2,___aomod@dividend+2
  1528  00099A  C03F  F008         	movff	dtoa@n+3,___aomod@dividend+3
  1529  00099E  C040  F009         	movff	dtoa@n+4,___aomod@dividend+4
  1530  0009A2  C041  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  1531  0009A6  C042  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  1532  0009AA  C043  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  1533  0009AE  0E0A               	movlw	10
  1534  0009B0  6E0D               	movwf	___aomod@divisor^0,c
  1535  0009B2  0E00               	movlw	0
  1536  0009B4  6E0E               	movwf	(___aomod@divisor+1)^0,c
  1537  0009B6  0E00               	movlw	0
  1538  0009B8  6E0F               	movwf	(___aomod@divisor+2)^0,c
  1539  0009BA  0E00               	movlw	0
  1540  0009BC  6E10               	movwf	(___aomod@divisor+3)^0,c
  1541  0009BE  0E00               	movlw	0
  1542  0009C0  6E11               	movwf	(___aomod@divisor+4)^0,c
  1543  0009C2  0E00               	movlw	0
  1544  0009C4  6E12               	movwf	(___aomod@divisor+5)^0,c
  1545  0009C6  0E00               	movlw	0
  1546  0009C8  6E13               	movwf	(___aomod@divisor+6)^0,c
  1547  0009CA  0E00               	movlw	0
  1548  0009CC  6E14               	movwf	(___aomod@divisor+7)^0,c
  1549  0009CE  EC91  F007         	call	___aomod	;wreg free
  1550  0009D2  C005  F02C         	movff	?___aomod,??_dtoa
  1551  0009D6  C006  F02D         	movff	?___aomod+1,??_dtoa+1
  1552  0009DA  C007  F02E         	movff	?___aomod+2,??_dtoa+2
  1553  0009DE  C008  F02F         	movff	?___aomod+3,??_dtoa+3
  1554  0009E2  C009  F030         	movff	?___aomod+4,??_dtoa+4
  1555  0009E6  C00A  F031         	movff	?___aomod+5,??_dtoa+5
  1556  0009EA  C00B  F032         	movff	?___aomod+6,??_dtoa+6
  1557  0009EE  C00C  F033         	movff	?___aomod+7,??_dtoa+7
  1558  0009F2  C02C  F017         	movff	??_dtoa,abs@a
  1559  0009F6  C02E  F018         	movff	??_dtoa+2,abs@a+1
  1560  0009FA  ECFD  F00A         	call	_abs	;wreg free
  1561  0009FE  5017               	movf	?_abs^0,w,c
  1562  000A00  0F30               	addlw	48
  1563  000A02  6EDF               	movwf	indf2,c
  1564  000A04                     
  1565                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 315:         --p;
  1566  000A04  0636               	decf	dtoa@p^0,f,c
  1567  000A06  A0D8               	btfss	status,0,c
  1568  000A08  0637               	decf	(dtoa@p+1)^0,f,c
  1569  000A0A                     
  1570                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 316:         --w;
  1571  000A0A  0638               	decf	dtoa@w^0,f,c
  1572  000A0C  A0D8               	btfss	status,0,c
  1573  000A0E  0639               	decf	(dtoa@w+1)^0,f,c
  1574  000A10                     
  1575                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 317:         n = n /
      +                           10;
  1576  000A10  C03C  F005         	movff	dtoa@n,___aodiv@dividend
  1577  000A14  C03D  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  1578  000A18  C03E  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  1579  000A1C  C03F  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  1580  000A20  C040  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  1581  000A24  C041  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  1582  000A28  C042  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  1583  000A2C  C043  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  1584  000A30  0E0A               	movlw	10
  1585  000A32  6E0D               	movwf	___aodiv@divisor^0,c
  1586  000A34  0E00               	movlw	0
  1587  000A36  6E0E               	movwf	(___aodiv@divisor+1)^0,c
  1588  000A38  0E00               	movlw	0
  1589  000A3A  6E0F               	movwf	(___aodiv@divisor+2)^0,c
  1590  000A3C  0E00               	movlw	0
  1591  000A3E  6E10               	movwf	(___aodiv@divisor+3)^0,c
  1592  000A40  0E00               	movlw	0
  1593  000A42  6E11               	movwf	(___aodiv@divisor+4)^0,c
  1594  000A44  0E00               	movlw	0
  1595  000A46  6E12               	movwf	(___aodiv@divisor+5)^0,c
  1596  000A48  0E00               	movlw	0
  1597  000A4A  6E13               	movwf	(___aodiv@divisor+6)^0,c
  1598  000A4C  0E00               	movlw	0
  1599  000A4E  6E14               	movwf	(___aodiv@divisor+7)^0,c
  1600  000A50  ECCD  F006         	call	___aodiv	;wreg free
  1601  000A54  C005  F03C         	movff	?___aodiv,dtoa@n
  1602  000A58  C006  F03D         	movff	?___aodiv+1,dtoa@n+1
  1603  000A5C  C007  F03E         	movff	?___aodiv+2,dtoa@n+2
  1604  000A60  C008  F03F         	movff	?___aodiv+3,dtoa@n+3
  1605  000A64  C009  F040         	movff	?___aodiv+4,dtoa@n+4
  1606  000A68  C00A  F041         	movff	?___aodiv+5,dtoa@n+5
  1607  000A6C  C00B  F042         	movff	?___aodiv+6,dtoa@n+6
  1608  000A70  C00C  F043         	movff	?___aodiv+7,dtoa@n+7
  1609  000A74                     l2467:
  1610                           
  1611                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 312:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1612  000A74  BE45               	btfsc	(dtoa@i+1)^0,7,c
  1613  000A76  EF45  F005         	goto	u2161
  1614  000A7A  5045               	movf	(dtoa@i+1)^0,w,c
  1615  000A7C  E108               	bnz	u2160
  1616  000A7E  0444               	decf	dtoa@i^0,w,c
  1617  000A80  A0D8               	btfss	status,0,c
  1618  000A82  EF45  F005         	goto	u2161
  1619  000A86  EF47  F005         	goto	u2160
  1620  000A8A                     u2161:
  1621  000A8A  EF77  F005         	goto	l2477
  1622  000A8E                     u2160:
  1623  000A8E  503C               	movf	dtoa@n^0,w,c
  1624  000A90  103D               	iorwf	(dtoa@n+1)^0,w,c
  1625  000A92  103E               	iorwf	(dtoa@n+2)^0,w,c
  1626  000A94  103F               	iorwf	(dtoa@n+3)^0,w,c
  1627  000A96  1040               	iorwf	(dtoa@n+4)^0,w,c
  1628  000A98  1041               	iorwf	(dtoa@n+5)^0,w,c
  1629  000A9A  1042               	iorwf	(dtoa@n+6)^0,w,c
  1630  000A9C  1043               	iorwf	(dtoa@n+7)^0,w,c
  1631  000A9E  A4D8               	btfss	status,2,c
  1632  000AA0  EF54  F005         	goto	u2171
  1633  000AA4  EF56  F005         	goto	u2170
  1634  000AA8                     u2171:
  1635  000AA8  EFBE  F004         	goto	l2457
  1636  000AAC                     u2170:
  1637  000AAC  BE37               	btfsc	(dtoa@p+1)^0,7,c
  1638  000AAE  EF63  F005         	goto	u2180
  1639  000AB2  5037               	movf	(dtoa@p+1)^0,w,c
  1640  000AB4  E106               	bnz	u2181
  1641  000AB6  0436               	decf	dtoa@p^0,w,c
  1642  000AB8  B0D8               	btfsc	status,0,c
  1643  000ABA  EF61  F005         	goto	u2181
  1644  000ABE  EF63  F005         	goto	u2180
  1645  000AC2                     u2181:
  1646  000AC2  EFBE  F004         	goto	l2457
  1647  000AC6                     u2180:
  1648  000AC6  BE39               	btfsc	(dtoa@w+1)^0,7,c
  1649  000AC8  EF6E  F005         	goto	u2191
  1650  000ACC  5039               	movf	(dtoa@w+1)^0,w,c
  1651  000ACE  E108               	bnz	u2190
  1652  000AD0  0438               	decf	dtoa@w^0,w,c
  1653  000AD2  A0D8               	btfss	status,0,c
  1654  000AD4  EF6E  F005         	goto	u2191
  1655  000AD8  EF70  F005         	goto	u2190
  1656  000ADC                     u2191:
  1657  000ADC  EF77  F005         	goto	l2477
  1658  000AE0                     u2190:
  1659  000AE0  B257               	btfsc	_flags^0,1,c
  1660  000AE2  EF75  F005         	goto	u2201
  1661  000AE6  EF77  F005         	goto	u2200
  1662  000AEA                     u2201:
  1663  000AEA  EFBE  F004         	goto	l2457
  1664  000AEE                     u2200:
  1665  000AEE                     l2477:
  1666                           
  1667                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 321:     if (s || (f
      +                          lags & (1 << 2))) {
  1668  000AEE  503A               	movf	dtoa@s^0,w,c
  1669  000AF0  103B               	iorwf	(dtoa@s+1)^0,w,c
  1670  000AF2  A4D8               	btfss	status,2,c
  1671  000AF4  EF7E  F005         	goto	u2211
  1672  000AF8  EF80  F005         	goto	u2210
  1673  000AFC                     u2211:
  1674  000AFC  EF87  F005         	goto	l2481
  1675  000B00                     u2210:
  1676  000B00  A457               	btfss	_flags^0,2,c
  1677  000B02  EF85  F005         	goto	u2221
  1678  000B06  EF87  F005         	goto	u2220
  1679  000B0A                     u2221:
  1680  000B0A  EFA5  F005         	goto	l2491
  1681  000B0E                     u2220:
  1682  000B0E                     l2481:
  1683                           
  1684                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 322:         --i;
  1685  000B0E  0644               	decf	dtoa@i^0,f,c
  1686  000B10  A0D8               	btfss	status,0,c
  1687  000B12  0645               	decf	(dtoa@i+1)^0,f,c
  1688  000B14                     
  1689                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 323:         dbuf[i]
      +                           = s ? '-' : '+';
  1690  000B14  503A               	movf	dtoa@s^0,w,c
  1691  000B16  103B               	iorwf	(dtoa@s+1)^0,w,c
  1692  000B18  A4D8               	btfss	status,2,c
  1693  000B1A  EF91  F005         	goto	u2231
  1694  000B1E  EF93  F005         	goto	u2230
  1695  000B22                     u2231:
  1696  000B22  EF99  F005         	goto	l2487
  1697  000B26                     u2230:
  1698  000B26  0E00               	movlw	0
  1699  000B28  6E35               	movwf	(_dtoa$1472+1)^0,c
  1700  000B2A  0E2B               	movlw	43
  1701  000B2C  6E34               	movwf	_dtoa$1472^0,c
  1702  000B2E  EF9D  F005         	goto	l2489
  1703  000B32                     l2487:
  1704  000B32  0E00               	movlw	0
  1705  000B34  6E35               	movwf	(_dtoa$1472+1)^0,c
  1706  000B36  0E2D               	movlw	45
  1707  000B38  6E34               	movwf	_dtoa$1472^0,c
  1708  000B3A                     l2489:
  1709  000B3A  0E8D               	movlw	low _dbuf
  1710  000B3C  2444               	addwf	dtoa@i^0,w,c
  1711  000B3E  6ED9               	movwf	fsr2l,c
  1712  000B40  0E00               	movlw	high _dbuf
  1713  000B42  2045               	addwfc	(dtoa@i+1)^0,w,c
  1714  000B44  6EDA               	movwf	fsr2h,c
  1715  000B46  C034  FFDF         	movff	_dtoa$1472,indf2
  1716  000B4A                     l2491:
  1717                           
  1718                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 327:     return pad(
      +                          fp, &dbuf[i], w);
  1719  000B4A  C022  F017         	movff	dtoa@fp,pad@fp
  1720  000B4E  C023  F018         	movff	dtoa@fp+1,pad@fp+1
  1721  000B52  0E8D               	movlw	low _dbuf
  1722  000B54  2444               	addwf	dtoa@i^0,w,c
  1723  000B56  6E19               	movwf	pad@buf^0,c
  1724  000B58  0E00               	movlw	high _dbuf
  1725  000B5A  2045               	addwfc	(dtoa@i+1)^0,w,c
  1726  000B5C  6E1A               	movwf	(pad@buf+1)^0,c
  1727  000B5E  C038  F01B         	movff	dtoa@w,pad@p
  1728  000B62  C039  F01C         	movff	dtoa@w+1,pad@p+1
  1729  000B66  ECAE  F008         	call	_pad	;wreg free
  1730  000B6A  C017  F022         	movff	?_pad,?_dtoa
  1731  000B6E  C018  F023         	movff	?_pad+1,?_dtoa+1
  1732  000B72  0012               	return		;funcret
  1733  000B74                     __end_of_dtoa:
  1734                           	callstack 0
  1735                           
  1736 ;; *************** function _pad *****************
  1737 ;; Defined at:
  1738 ;;		line 72 in file "/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c"
  1739 ;; Parameters:    Size  Location     Type
  1740 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  1741 ;;		 -> NULL(0), 
  1742 ;;  buf             2   24[COMRAM] PTR unsigned char 
  1743 ;;		 -> dbuf(32), 
  1744 ;;  p               2   26[COMRAM] int 
  1745 ;; Auto vars:     Size  Location     Type
  1746 ;;  w               2   31[COMRAM] int 
  1747 ;;  i               2   29[COMRAM] int 
  1748 ;; Return value:  Size  Location     Type
  1749 ;;                  2   22[COMRAM] int 
  1750 ;; Registers used:
  1751 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1752 ;; Tracked objects:
  1753 ;;		On entry : 0/0
  1754 ;;		On exit  : 0/0
  1755 ;;		Unchanged: 0/0
  1756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1757 ;;      Params:         6       0       0       0       0       0       0       0       0
  1758 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1759 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1760 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1761 ;;Total ram usage:       11 bytes
  1762 ;; Hardware stack levels used: 1
  1763 ;; Hardware stack levels required when called: 8
  1764 ;; This function calls:
  1765 ;;		_fputc
  1766 ;;		_fputs
  1767 ;;		_strlen
  1768 ;; This function is called by:
  1769 ;;		_dtoa
  1770 ;; This function uses a non-reentrant model
  1771 ;;
  1772                           
  1773                           	psect	text5
  1774  00115C                     __ptext5:
  1775                           	callstack 0
  1776  00115C                     _pad:
  1777                           	callstack 18
  1778  00115C                     
  1779                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 72: static int pad(F
      +                          ILE *fp, char *buf, int p);/Applications/microchip/xc8/v2.35/pic/sources/c99/common/dopr
      +                          nt.c: 73: {;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 74:     i
      +                          nt i, w;;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 77:     if (
      +                          flags & (1 << 0)) {
  1780  00115C  A057               	btfss	_flags^0,0,c
  1781  00115E  EFB3  F008         	goto	u1991
  1782  001162  EFB5  F008         	goto	u1990
  1783  001166                     u1991:
  1784  001166  EFBF  F008         	goto	l2383
  1785  00116A                     u1990:
  1786  00116A                     
  1787                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 78:         fputs((c
      +                          onst char *)buf, fp);
  1788  00116A  C019  F010         	movff	pad@buf,fputs@s
  1789  00116E  C01A  F011         	movff	pad@buf+1,fputs@s+1
  1790  001172  C017  F012         	movff	pad@fp,fputs@fp
  1791  001176  C018  F013         	movff	pad@fp+1,fputs@fp+1
  1792  00117A  ECBA  F00A         	call	_fputs	;wreg free
  1793  00117E                     l2383:
  1794                           
  1795                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) 
      +                          ? 0 : p;
  1796  00117E  BE1C               	btfsc	(pad@p+1)^0,7,c
  1797  001180  EFC4  F008         	goto	u2001
  1798  001184  EFC6  F008         	goto	u2000
  1799  001188                     u2001:
  1800  001188  EFCC  F008         	goto	l2387
  1801  00118C                     u2000:
  1802  00118C  C01B  F020         	movff	pad@p,pad@w
  1803  001190  C01C  F021         	movff	pad@p+1,pad@w+1
  1804  001194  EFD0  F008         	goto	l1044
  1805  001198                     l2387:
  1806  001198  0E00               	movlw	0
  1807  00119A  6E21               	movwf	(pad@w+1)^0,c
  1808  00119C  0E00               	movlw	0
  1809  00119E  6E20               	movwf	pad@w^0,c
  1810  0011A0                     l1044:
  1811                           
  1812                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  1813  0011A0  0E00               	movlw	0
  1814  0011A2  6E1F               	movwf	(pad@i+1)^0,c
  1815  0011A4  0E00               	movlw	0
  1816  0011A6  6E1E               	movwf	pad@i^0,c
  1817                           
  1818                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
  1819  0011A8  EFE2  F008         	goto	l2393
  1820  0011AC                     l2389:
  1821                           
  1822                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 85:         fputc(' 
      +                          ', fp);
  1823  0011AC  0E00               	movlw	0
  1824  0011AE  6E08               	movwf	(fputc@c+1)^0,c
  1825  0011B0  0E20               	movlw	32
  1826  0011B2  6E07               	movwf	fputc@c^0,c
  1827  0011B4  C017  F009         	movff	pad@fp,fputc@fp
  1828  0011B8  C018  F00A         	movff	pad@fp+1,fputc@fp+1
  1829  0011BC  EC70  F009         	call	_fputc	;wreg free
  1830  0011C0                     
  1831                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 86:         ++i;
  1832  0011C0  4A1E               	infsnz	pad@i^0,f,c
  1833  0011C2  2A1F               	incf	(pad@i+1)^0,f,c
  1834  0011C4                     l2393:
  1835                           
  1836                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
  1837  0011C4  5020               	movf	pad@w^0,w,c
  1838  0011C6  5C1E               	subwf	pad@i^0,w,c
  1839  0011C8  501F               	movf	(pad@i+1)^0,w,c
  1840  0011CA  0A80               	xorlw	128
  1841  0011CC  6E1D               	movwf	??_pad^0,c
  1842  0011CE  5021               	movf	(pad@w+1)^0,w,c
  1843  0011D0  0A80               	xorlw	128
  1844  0011D2  581D               	subwfb	??_pad^0,w,c
  1845  0011D4  A0D8               	btfss	status,0,c
  1846  0011D6  EFEF  F008         	goto	u2011
  1847  0011DA  EFF1  F008         	goto	u2010
  1848  0011DE                     u2011:
  1849  0011DE  EFD6  F008         	goto	l2389
  1850  0011E2                     u2010:
  1851  0011E2                     
  1852                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 90:     if (!(flags 
      +                          & (1 << 0))) {
  1853  0011E2  B057               	btfsc	_flags^0,0,c
  1854  0011E4  EFF6  F008         	goto	u2021
  1855  0011E8  EFF8  F008         	goto	u2020
  1856  0011EC                     u2021:
  1857  0011EC  EF02  F009         	goto	l2397
  1858  0011F0                     u2020:
  1859  0011F0                     
  1860                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 91:         fputs((c
      +                          onst char *)buf, fp);
  1861  0011F0  C019  F010         	movff	pad@buf,fputs@s
  1862  0011F4  C01A  F011         	movff	pad@buf+1,fputs@s+1
  1863  0011F8  C017  F012         	movff	pad@fp,fputs@fp
  1864  0011FC  C018  F013         	movff	pad@fp+1,fputs@fp+1
  1865  001200  ECBA  F00A         	call	_fputs	;wreg free
  1866  001204                     l2397:
  1867                           
  1868                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 94:     return (int)
      +                          (strlen(buf) + (size_t)w);
  1869  001204  C019  F005         	movff	pad@buf,strlen@s
  1870  001208  C01A  F006         	movff	pad@buf+1,strlen@s+1
  1871  00120C  EC93  F00A         	call	_strlen	;wreg free
  1872  001210  5020               	movf	pad@w^0,w,c
  1873  001212  2405               	addwf	?_strlen^0,w,c
  1874  001214  6E17               	movwf	?_pad^0,c
  1875  001216  5021               	movf	(pad@w+1)^0,w,c
  1876  001218  2006               	addwfc	(?_strlen+1)^0,w,c
  1877  00121A  6E18               	movwf	(?_pad+1)^0,c
  1878  00121C  0012               	return		;funcret
  1879  00121E                     __end_of_pad:
  1880                           	callstack 0
  1881                           
  1882 ;; *************** function _strlen *****************
  1883 ;; Defined at:
  1884 ;;		line 5 in file "/Applications/microchip/xc8/v2.35/pic/sources/c99/common/strlen.c"
  1885 ;; Parameters:    Size  Location     Type
  1886 ;;  s               2    4[COMRAM] PTR const unsigned char 
  1887 ;;		 -> dbuf(32), STR_1(15), 
  1888 ;; Auto vars:     Size  Location     Type
  1889 ;;  a               2    6[COMRAM] PTR const unsigned char 
  1890 ;;		 -> dbuf(32), STR_1(15), 
  1891 ;; Return value:  Size  Location     Type
  1892 ;;                  2    4[COMRAM] unsigned int 
  1893 ;; Registers used:
  1894 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  1895 ;; Tracked objects:
  1896 ;;		On entry : 0/0
  1897 ;;		On exit  : 0/0
  1898 ;;		Unchanged: 0/0
  1899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1900 ;;      Params:         2       0       0       0       0       0       0       0       0
  1901 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1902 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1903 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1904 ;;Total ram usage:        4 bytes
  1905 ;; Hardware stack levels used: 1
  1906 ;; Hardware stack levels required when called: 4
  1907 ;; This function calls:
  1908 ;;		Nothing
  1909 ;; This function is called by:
  1910 ;;		_pad
  1911 ;;		_UART_example_WRITE_STRING
  1912 ;; This function uses a non-reentrant model
  1913 ;;
  1914                           
  1915                           	psect	text6
  1916  001526                     __ptext6:
  1917                           	callstack 0
  1918  001526                     _strlen:
  1919                           	callstack 21
  1920  001526  C005  F007         	movff	strlen@s,strlen@a
  1921  00152A  C006  F008         	movff	strlen@s+1,strlen@a+1
  1922  00152E  EF9B  F00A         	goto	l2285
  1923  001532                     l2283:
  1924  001532  4A05               	infsnz	strlen@s^0,f,c
  1925  001534  2A06               	incf	(strlen@s+1)^0,f,c
  1926  001536                     l2285:
  1927  001536  C005  FFF6         	movff	strlen@s,tblptrl
  1928  00153A  C006  FFF7         	movff	strlen@s+1,tblptrh
  1929  00153E  6AF8               	clrf	tblptru,c
  1930  001540  0E07               	movlw	(high __ramtop+-1)
  1931  001542  64F7               	cpfsgt	tblptrh,c
  1932  001544  D003               	bra	u1837
  1933  001546  0008               	tblrd		*
  1934  001548  50F5               	movf	tablat,w,c
  1935  00154A  D005               	bra	u1830
  1936  00154C                     u1837:
  1937  00154C  CFF6 FFE9          	movff	tblptrl,fsr0l
  1938  001550  CFF7 FFEA          	movff	tblptrh,fsr0h
  1939  001554  50EF               	movf	indf0,w,c
  1940  001556                     u1830:
  1941  001556  0900               	iorlw	0
  1942  001558  A4D8               	btfss	status,2,c
  1943  00155A  EFB1  F00A         	goto	u1841
  1944  00155E  EFB3  F00A         	goto	u1840
  1945  001562                     u1841:
  1946  001562  EF99  F00A         	goto	l2283
  1947  001566                     u1840:
  1948  001566  5007               	movf	strlen@a^0,w,c
  1949  001568  5C05               	subwf	strlen@s^0,w,c
  1950  00156A  6E05               	movwf	?_strlen^0,c
  1951  00156C  5008               	movf	(strlen@a+1)^0,w,c
  1952  00156E  5806               	subwfb	(strlen@s+1)^0,w,c
  1953  001570  6E06               	movwf	(?_strlen+1)^0,c
  1954  001572  0012               	return		;funcret
  1955  001574                     __end_of_strlen:
  1956                           	callstack 0
  1957                           
  1958 ;; *************** function _fputs *****************
  1959 ;; Defined at:
  1960 ;;		line 8 in file "/Applications/microchip/xc8/v2.35/pic/sources/c99/common/nf_fputs.c"
  1961 ;; Parameters:    Size  Location     Type
  1962 ;;  s               2   15[COMRAM] PTR const unsigned char 
  1963 ;;		 -> dbuf(32), 
  1964 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  1965 ;;		 -> NULL(0), 
  1966 ;; Auto vars:     Size  Location     Type
  1967 ;;  i               2   20[COMRAM] int 
  1968 ;;  c               1   19[COMRAM] unsigned char 
  1969 ;; Return value:  Size  Location     Type
  1970 ;;                  2   15[COMRAM] int 
  1971 ;; Registers used:
  1972 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1973 ;; Tracked objects:
  1974 ;;		On entry : 0/0
  1975 ;;		On exit  : 0/0
  1976 ;;		Unchanged: 0/0
  1977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1978 ;;      Params:         4       0       0       0       0       0       0       0       0
  1979 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1980 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1981 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1982 ;;Total ram usage:        7 bytes
  1983 ;; Hardware stack levels used: 1
  1984 ;; Hardware stack levels required when called: 7
  1985 ;; This function calls:
  1986 ;;		_fputc
  1987 ;; This function is called by:
  1988 ;;		_pad
  1989 ;; This function uses a non-reentrant model
  1990 ;;
  1991                           
  1992                           	psect	text7
  1993  001574                     __ptext7:
  1994                           	callstack 0
  1995  001574                     _fputs:
  1996                           	callstack 18
  1997  001574  0E00               	movlw	0
  1998  001576  6E16               	movwf	(fputs@i+1)^0,c
  1999  001578  0E00               	movlw	0
  2000  00157A  6E15               	movwf	fputs@i^0,c
  2001  00157C  EFCB  F00A         	goto	l2297
  2002  001580                     l2293:
  2003  001580  C014  F007         	movff	fputs@c,fputc@c
  2004  001584  6A08               	clrf	(fputc@c+1)^0,c
  2005  001586  C012  F009         	movff	fputs@fp,fputc@fp
  2006  00158A  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
  2007  00158E  EC70  F009         	call	_fputc	;wreg free
  2008  001592  4A15               	infsnz	fputs@i^0,f,c
  2009  001594  2A16               	incf	(fputs@i+1)^0,f,c
  2010  001596                     l2297:
  2011  001596  5015               	movf	fputs@i^0,w,c
  2012  001598  2410               	addwf	fputs@s^0,w,c
  2013  00159A  6ED9               	movwf	fsr2l,c
  2014  00159C  5016               	movf	(fputs@i+1)^0,w,c
  2015  00159E  2011               	addwfc	(fputs@s+1)^0,w,c
  2016  0015A0  6EDA               	movwf	fsr2h,c
  2017  0015A2  50DF               	movf	indf2,w,c
  2018  0015A4  6E14               	movwf	fputs@c^0,c
  2019  0015A6  5014               	movf	fputs@c^0,w,c
  2020  0015A8  A4D8               	btfss	status,2,c
  2021  0015AA  EFD9  F00A         	goto	u1851
  2022  0015AE  EFDB  F00A         	goto	u1850
  2023  0015B2                     u1851:
  2024  0015B2  EFC0  F00A         	goto	l2293
  2025  0015B6                     u1850:
  2026  0015B6  0012               	return		;funcret
  2027  0015B8                     __end_of_fputs:
  2028                           	callstack 0
  2029                           
  2030 ;; *************** function _abs *****************
  2031 ;; Defined at:
  2032 ;;		line 1 in file "/Applications/microchip/xc8/v2.35/pic/sources/c99/common/abs.c"
  2033 ;; Parameters:    Size  Location     Type
  2034 ;;  a               2   22[COMRAM] int 
  2035 ;; Auto vars:     Size  Location     Type
  2036 ;;		None
  2037 ;; Return value:  Size  Location     Type
  2038 ;;                  2   22[COMRAM] int 
  2039 ;; Registers used:
  2040 ;;		wreg, status,2, status,0
  2041 ;; Tracked objects:
  2042 ;;		On entry : 0/0
  2043 ;;		On exit  : 0/0
  2044 ;;		Unchanged: 0/0
  2045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2046 ;;      Params:         2       0       0       0       0       0       0       0       0
  2047 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2048 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2049 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2050 ;;Total ram usage:        4 bytes
  2051 ;; Hardware stack levels used: 1
  2052 ;; Hardware stack levels required when called: 4
  2053 ;; This function calls:
  2054 ;;		Nothing
  2055 ;; This function is called by:
  2056 ;;		_dtoa
  2057 ;; This function uses a non-reentrant model
  2058 ;;
  2059                           
  2060                           	psect	text8
  2061  0015FA                     __ptext8:
  2062                           	callstack 0
  2063  0015FA                     _abs:
  2064                           	callstack 22
  2065  0015FA  BE18               	btfsc	(abs@a+1)^0,7,c
  2066  0015FC  EF0A  F00B         	goto	u2030
  2067  001600  5018               	movf	(abs@a+1)^0,w,c
  2068  001602  E106               	bnz	u2031
  2069  001604  0417               	decf	abs@a^0,w,c
  2070  001606  B0D8               	btfsc	status,0,c
  2071  001608  EF08  F00B         	goto	u2031
  2072  00160C  EF0A  F00B         	goto	u2030
  2073  001610                     u2031:
  2074  001610  EF18  F00B         	goto	l1110
  2075  001614                     u2030:
  2076  001614  C017  F019         	movff	abs@a,??_abs
  2077  001618  C018  F01A         	movff	abs@a+1,??_abs+1
  2078  00161C  1E19               	comf	??_abs^0,f,c
  2079  00161E  1E1A               	comf	(??_abs+1)^0,f,c
  2080  001620  4A19               	infsnz	??_abs^0,f,c
  2081  001622  2A1A               	incf	(??_abs+1)^0,f,c
  2082  001624  C019  F017         	movff	??_abs,?_abs
  2083  001628  C01A  F018         	movff	??_abs+1,?_abs+1
  2084  00162C  EF1C  F00B         	goto	l1113
  2085  001630                     l1110:
  2086  001630  C017  F017         	movff	abs@a,?_abs
  2087  001634  C018  F018         	movff	abs@a+1,?_abs+1
  2088  001638                     l1113:
  2089  001638  0012               	return		;funcret
  2090  00163A                     __end_of_abs:
  2091                           	callstack 0
  2092                           
  2093 ;; *************** function ___aomod *****************
  2094 ;; Defined at:
  2095 ;;		line 9 in file "/Applications/microchip/xc8/v2.35/pic/sources/c99/common/aomod.c"
  2096 ;; Parameters:    Size  Location     Type
  2097 ;;  dividend        8    4[COMRAM] long long 
  2098 ;;  divisor         8   12[COMRAM] long long 
  2099 ;; Auto vars:     Size  Location     Type
  2100 ;;  sign            1   21[COMRAM] unsigned char 
  2101 ;;  counter         1   20[COMRAM] unsigned char 
  2102 ;; Return value:  Size  Location     Type
  2103 ;;                  8    4[COMRAM] long long 
  2104 ;; Registers used:
  2105 ;;		wreg, status,2, status,0
  2106 ;; Tracked objects:
  2107 ;;		On entry : 0/0
  2108 ;;		On exit  : 0/0
  2109 ;;		Unchanged: 0/0
  2110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2111 ;;      Params:        16       0       0       0       0       0       0       0       0
  2112 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2113 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2114 ;;      Totals:        18       0       0       0       0       0       0       0       0
  2115 ;;Total ram usage:       18 bytes
  2116 ;; Hardware stack levels used: 1
  2117 ;; Hardware stack levels required when called: 4
  2118 ;; This function calls:
  2119 ;;		Nothing
  2120 ;; This function is called by:
  2121 ;;		_dtoa
  2122 ;; This function uses a non-reentrant model
  2123 ;;
  2124                           
  2125                           	psect	text9
  2126  000F22                     __ptext9:
  2127                           	callstack 0
  2128  000F22                     ___aomod:
  2129                           	callstack 22
  2130  000F22  0E00               	movlw	0
  2131  000F24  6E16               	movwf	___aomod@sign^0,c
  2132  000F26  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
  2133  000F28  EF9A  F007         	goto	u1930
  2134  000F2C  EF98  F007         	goto	u1931
  2135  000F30                     u1931:
  2136  000F30  EFAC  F007         	goto	l2351
  2137  000F34                     u1930:
  2138  000F34  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  2139  000F36  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  2140  000F38  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  2141  000F3A  1E09               	comf	(___aomod@dividend+4)^0,f,c
  2142  000F3C  1E08               	comf	(___aomod@dividend+3)^0,f,c
  2143  000F3E  1E07               	comf	(___aomod@dividend+2)^0,f,c
  2144  000F40  1E06               	comf	(___aomod@dividend+1)^0,f,c
  2145  000F42  6C05               	negf	___aomod@dividend^0,c
  2146  000F44  0E00               	movlw	0
  2147  000F46  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  2148  000F48  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  2149  000F4A  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  2150  000F4C  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  2151  000F4E  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  2152  000F50  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  2153  000F52  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  2154  000F54  0E01               	movlw	1
  2155  000F56  6E16               	movwf	___aomod@sign^0,c
  2156  000F58                     l2351:
  2157  000F58  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
  2158  000F5A  EFB3  F007         	goto	u1940
  2159  000F5E  EFB1  F007         	goto	u1941
  2160  000F62                     u1941:
  2161  000F62  EFC3  F007         	goto	l2355
  2162  000F66                     u1940:
  2163  000F66  1E14               	comf	(___aomod@divisor+7)^0,f,c
  2164  000F68  1E13               	comf	(___aomod@divisor+6)^0,f,c
  2165  000F6A  1E12               	comf	(___aomod@divisor+5)^0,f,c
  2166  000F6C  1E11               	comf	(___aomod@divisor+4)^0,f,c
  2167  000F6E  1E10               	comf	(___aomod@divisor+3)^0,f,c
  2168  000F70  1E0F               	comf	(___aomod@divisor+2)^0,f,c
  2169  000F72  1E0E               	comf	(___aomod@divisor+1)^0,f,c
  2170  000F74  6C0D               	negf	___aomod@divisor^0,c
  2171  000F76  0E00               	movlw	0
  2172  000F78  220E               	addwfc	(___aomod@divisor+1)^0,f,c
  2173  000F7A  220F               	addwfc	(___aomod@divisor+2)^0,f,c
  2174  000F7C  2210               	addwfc	(___aomod@divisor+3)^0,f,c
  2175  000F7E  2211               	addwfc	(___aomod@divisor+4)^0,f,c
  2176  000F80  2212               	addwfc	(___aomod@divisor+5)^0,f,c
  2177  000F82  2213               	addwfc	(___aomod@divisor+6)^0,f,c
  2178  000F84  2214               	addwfc	(___aomod@divisor+7)^0,f,c
  2179  000F86                     l2355:
  2180  000F86  500D               	movf	___aomod@divisor^0,w,c
  2181  000F88  100E               	iorwf	(___aomod@divisor+1)^0,w,c
  2182  000F8A  100F               	iorwf	(___aomod@divisor+2)^0,w,c
  2183  000F8C  1010               	iorwf	(___aomod@divisor+3)^0,w,c
  2184  000F8E  1011               	iorwf	(___aomod@divisor+4)^0,w,c
  2185  000F90  1012               	iorwf	(___aomod@divisor+5)^0,w,c
  2186  000F92  1013               	iorwf	(___aomod@divisor+6)^0,w,c
  2187  000F94  1014               	iorwf	(___aomod@divisor+7)^0,w,c
  2188  000F96  B4D8               	btfsc	status,2,c
  2189  000F98  EFD0  F007         	goto	u1951
  2190  000F9C  EFD2  F007         	goto	u1950
  2191  000FA0                     u1951:
  2192  000FA0  EF1A  F008         	goto	l2371
  2193  000FA4                     u1950:
  2194  000FA4  0E01               	movlw	1
  2195  000FA6  6E15               	movwf	___aomod@counter^0,c
  2196  000FA8  EFE0  F007         	goto	l2361
  2197  000FAC                     l2359:
  2198  000FAC  90D8               	bcf	status,0,c
  2199  000FAE  360D               	rlcf	___aomod@divisor^0,f,c
  2200  000FB0  360E               	rlcf	(___aomod@divisor+1)^0,f,c
  2201  000FB2  360F               	rlcf	(___aomod@divisor+2)^0,f,c
  2202  000FB4  3610               	rlcf	(___aomod@divisor+3)^0,f,c
  2203  000FB6  3611               	rlcf	(___aomod@divisor+4)^0,f,c
  2204  000FB8  3612               	rlcf	(___aomod@divisor+5)^0,f,c
  2205  000FBA  3613               	rlcf	(___aomod@divisor+6)^0,f,c
  2206  000FBC  3614               	rlcf	(___aomod@divisor+7)^0,f,c
  2207  000FBE  2A15               	incf	___aomod@counter^0,f,c
  2208  000FC0                     l2361:
  2209  000FC0  AE14               	btfss	(___aomod@divisor+7)^0,7,c
  2210  000FC2  EFE5  F007         	goto	u1961
  2211  000FC6  EFE7  F007         	goto	u1960
  2212  000FCA                     u1961:
  2213  000FCA  EFD6  F007         	goto	l2359
  2214  000FCE                     u1960:
  2215  000FCE                     l2363:
  2216  000FCE  500D               	movf	___aomod@divisor^0,w,c
  2217  000FD0  5C05               	subwf	___aomod@dividend^0,w,c
  2218  000FD2  500E               	movf	(___aomod@divisor+1)^0,w,c
  2219  000FD4  5806               	subwfb	(___aomod@dividend+1)^0,w,c
  2220  000FD6  500F               	movf	(___aomod@divisor+2)^0,w,c
  2221  000FD8  5807               	subwfb	(___aomod@dividend+2)^0,w,c
  2222  000FDA  5010               	movf	(___aomod@divisor+3)^0,w,c
  2223  000FDC  5808               	subwfb	(___aomod@dividend+3)^0,w,c
  2224  000FDE  5011               	movf	(___aomod@divisor+4)^0,w,c
  2225  000FE0  5809               	subwfb	(___aomod@dividend+4)^0,w,c
  2226  000FE2  5012               	movf	(___aomod@divisor+5)^0,w,c
  2227  000FE4  580A               	subwfb	(___aomod@dividend+5)^0,w,c
  2228  000FE6  5013               	movf	(___aomod@divisor+6)^0,w,c
  2229  000FE8  580B               	subwfb	(___aomod@dividend+6)^0,w,c
  2230  000FEA  5014               	movf	(___aomod@divisor+7)^0,w,c
  2231  000FEC  580C               	subwfb	(___aomod@dividend+7)^0,w,c
  2232  000FEE  A0D8               	btfss	status,0,c
  2233  000FF0  EFFC  F007         	goto	u1971
  2234  000FF4  EFFE  F007         	goto	u1970
  2235  000FF8                     u1971:
  2236  000FF8  EF0E  F008         	goto	l2367
  2237  000FFC                     u1970:
  2238  000FFC  500D               	movf	___aomod@divisor^0,w,c
  2239  000FFE  5E05               	subwf	___aomod@dividend^0,f,c
  2240  001000  500E               	movf	(___aomod@divisor+1)^0,w,c
  2241  001002  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
  2242  001004  500F               	movf	(___aomod@divisor+2)^0,w,c
  2243  001006  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
  2244  001008  5010               	movf	(___aomod@divisor+3)^0,w,c
  2245  00100A  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
  2246  00100C  5011               	movf	(___aomod@divisor+4)^0,w,c
  2247  00100E  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
  2248  001010  5012               	movf	(___aomod@divisor+5)^0,w,c
  2249  001012  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
  2250  001014  5013               	movf	(___aomod@divisor+6)^0,w,c
  2251  001016  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
  2252  001018  5014               	movf	(___aomod@divisor+7)^0,w,c
  2253  00101A  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
  2254  00101C                     l2367:
  2255  00101C  90D8               	bcf	status,0,c
  2256  00101E  3214               	rrcf	(___aomod@divisor+7)^0,f,c
  2257  001020  3213               	rrcf	(___aomod@divisor+6)^0,f,c
  2258  001022  3212               	rrcf	(___aomod@divisor+5)^0,f,c
  2259  001024  3211               	rrcf	(___aomod@divisor+4)^0,f,c
  2260  001026  3210               	rrcf	(___aomod@divisor+3)^0,f,c
  2261  001028  320F               	rrcf	(___aomod@divisor+2)^0,f,c
  2262  00102A  320E               	rrcf	(___aomod@divisor+1)^0,f,c
  2263  00102C  320D               	rrcf	___aomod@divisor^0,f,c
  2264  00102E  2E15               	decfsz	___aomod@counter^0,f,c
  2265  001030  EFE7  F007         	goto	l2363
  2266  001034                     l2371:
  2267  001034  5016               	movf	___aomod@sign^0,w,c
  2268  001036  B4D8               	btfsc	status,2,c
  2269  001038  EF20  F008         	goto	u1981
  2270  00103C  EF22  F008         	goto	u1980
  2271  001040                     u1981:
  2272  001040  EF32  F008         	goto	l2375
  2273  001044                     u1980:
  2274  001044  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  2275  001046  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  2276  001048  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  2277  00104A  1E09               	comf	(___aomod@dividend+4)^0,f,c
  2278  00104C  1E08               	comf	(___aomod@dividend+3)^0,f,c
  2279  00104E  1E07               	comf	(___aomod@dividend+2)^0,f,c
  2280  001050  1E06               	comf	(___aomod@dividend+1)^0,f,c
  2281  001052  6C05               	negf	___aomod@dividend^0,c
  2282  001054  0E00               	movlw	0
  2283  001056  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  2284  001058  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  2285  00105A  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  2286  00105C  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  2287  00105E  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  2288  001060  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  2289  001062  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  2290  001064                     l2375:
  2291  001064  C005  F005         	movff	___aomod@dividend,?___aomod
  2292  001068  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  2293  00106C  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  2294  001070  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  2295  001074  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  2296  001078  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  2297  00107C  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  2298  001080  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  2299  001084  0012               	return		;funcret
  2300  001086                     __end_of___aomod:
  2301                           	callstack 0
  2302                           
  2303 ;; *************** function ___aodiv *****************
  2304 ;; Defined at:
  2305 ;;		line 9 in file "/Applications/microchip/xc8/v2.35/pic/sources/c99/common/aodiv.c"
  2306 ;; Parameters:    Size  Location     Type
  2307 ;;  dividend        8    4[COMRAM] long long 
  2308 ;;  divisor         8   12[COMRAM] long long 
  2309 ;; Auto vars:     Size  Location     Type
  2310 ;;  quotient        8   22[COMRAM] long long 
  2311 ;;  sign            1   21[COMRAM] unsigned char 
  2312 ;;  counter         1   20[COMRAM] unsigned char 
  2313 ;; Return value:  Size  Location     Type
  2314 ;;                  8    4[COMRAM] long long 
  2315 ;; Registers used:
  2316 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2317 ;; Tracked objects:
  2318 ;;		On entry : 0/0
  2319 ;;		On exit  : 0/0
  2320 ;;		Unchanged: 0/0
  2321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2322 ;;      Params:        16       0       0       0       0       0       0       0       0
  2323 ;;      Locals:        10       0       0       0       0       0       0       0       0
  2324 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2325 ;;      Totals:        26       0       0       0       0       0       0       0       0
  2326 ;;Total ram usage:       26 bytes
  2327 ;; Hardware stack levels used: 1
  2328 ;; Hardware stack levels required when called: 4
  2329 ;; This function calls:
  2330 ;;		Nothing
  2331 ;; This function is called by:
  2332 ;;		_dtoa
  2333 ;; This function uses a non-reentrant model
  2334 ;;
  2335                           
  2336                           	psect	text10
  2337  000D9A                     __ptext10:
  2338                           	callstack 0
  2339  000D9A                     ___aodiv:
  2340                           	callstack 22
  2341  000D9A  0E00               	movlw	0
  2342  000D9C  6E16               	movwf	___aodiv@sign^0,c
  2343  000D9E  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
  2344  000DA0  EFD6  F006         	goto	u1860
  2345  000DA4  EFD4  F006         	goto	u1861
  2346  000DA8                     u1861:
  2347  000DA8  EFE8  F006         	goto	l2307
  2348  000DAC                     u1860:
  2349  000DAC  1E14               	comf	(___aodiv@divisor+7)^0,f,c
  2350  000DAE  1E13               	comf	(___aodiv@divisor+6)^0,f,c
  2351  000DB0  1E12               	comf	(___aodiv@divisor+5)^0,f,c
  2352  000DB2  1E11               	comf	(___aodiv@divisor+4)^0,f,c
  2353  000DB4  1E10               	comf	(___aodiv@divisor+3)^0,f,c
  2354  000DB6  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
  2355  000DB8  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
  2356  000DBA  6C0D               	negf	___aodiv@divisor^0,c
  2357  000DBC  0E00               	movlw	0
  2358  000DBE  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
  2359  000DC0  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
  2360  000DC2  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
  2361  000DC4  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
  2362  000DC6  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
  2363  000DC8  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
  2364  000DCA  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
  2365  000DCC  0E01               	movlw	1
  2366  000DCE  6E16               	movwf	___aodiv@sign^0,c
  2367  000DD0                     l2307:
  2368  000DD0  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
  2369  000DD2  EFEF  F006         	goto	u1870
  2370  000DD6  EFED  F006         	goto	u1871
  2371  000DDA                     u1871:
  2372  000DDA  EF01  F007         	goto	l2313
  2373  000DDE                     u1870:
  2374  000DDE  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
  2375  000DE0  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
  2376  000DE2  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
  2377  000DE4  1E09               	comf	(___aodiv@dividend+4)^0,f,c
  2378  000DE6  1E08               	comf	(___aodiv@dividend+3)^0,f,c
  2379  000DE8  1E07               	comf	(___aodiv@dividend+2)^0,f,c
  2380  000DEA  1E06               	comf	(___aodiv@dividend+1)^0,f,c
  2381  000DEC  6C05               	negf	___aodiv@dividend^0,c
  2382  000DEE  0E00               	movlw	0
  2383  000DF0  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
  2384  000DF2  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
  2385  000DF4  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
  2386  000DF6  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
  2387  000DF8  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
  2388  000DFA  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
  2389  000DFC  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
  2390  000DFE  0E01               	movlw	1
  2391  000E00  1A16               	xorwf	___aodiv@sign^0,f,c
  2392  000E02                     l2313:
  2393  000E02  EE20  F017         	lfsr	2,___aodiv@quotient
  2394  000E06  0E07               	movlw	7
  2395  000E08                     u1881:
  2396  000E08  6ADE               	clrf	postinc2,c
  2397  000E0A  06E8               	decf	wreg,f,c
  2398  000E0C  E2FD               	bc	u1881
  2399  000E0E  500D               	movf	___aodiv@divisor^0,w,c
  2400  000E10  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
  2401  000E12  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
  2402  000E14  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
  2403  000E16  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
  2404  000E18  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
  2405  000E1A  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
  2406  000E1C  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
  2407  000E1E  B4D8               	btfsc	status,2,c
  2408  000E20  EF14  F007         	goto	u1891
  2409  000E24  EF16  F007         	goto	u1890
  2410  000E28                     u1891:
  2411  000E28  EF68  F007         	goto	l2335
  2412  000E2C                     u1890:
  2413  000E2C  0E01               	movlw	1
  2414  000E2E  6E15               	movwf	___aodiv@counter^0,c
  2415  000E30  EF24  F007         	goto	l2321
  2416  000E34                     l2319:
  2417  000E34  90D8               	bcf	status,0,c
  2418  000E36  360D               	rlcf	___aodiv@divisor^0,f,c
  2419  000E38  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
  2420  000E3A  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
  2421  000E3C  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
  2422  000E3E  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
  2423  000E40  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
  2424  000E42  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
  2425  000E44  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
  2426  000E46  2A15               	incf	___aodiv@counter^0,f,c
  2427  000E48                     l2321:
  2428  000E48  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
  2429  000E4A  EF29  F007         	goto	u1901
  2430  000E4E  EF2B  F007         	goto	u1900
  2431  000E52                     u1901:
  2432  000E52  EF1A  F007         	goto	l2319
  2433  000E56                     u1900:
  2434  000E56                     l2323:
  2435  000E56  90D8               	bcf	status,0,c
  2436  000E58  3617               	rlcf	___aodiv@quotient^0,f,c
  2437  000E5A  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
  2438  000E5C  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
  2439  000E5E  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
  2440  000E60  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
  2441  000E62  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
  2442  000E64  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
  2443  000E66  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
  2444  000E68  500D               	movf	___aodiv@divisor^0,w,c
  2445  000E6A  5C05               	subwf	___aodiv@dividend^0,w,c
  2446  000E6C  500E               	movf	(___aodiv@divisor+1)^0,w,c
  2447  000E6E  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
  2448  000E70  500F               	movf	(___aodiv@divisor+2)^0,w,c
  2449  000E72  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
  2450  000E74  5010               	movf	(___aodiv@divisor+3)^0,w,c
  2451  000E76  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
  2452  000E78  5011               	movf	(___aodiv@divisor+4)^0,w,c
  2453  000E7A  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
  2454  000E7C  5012               	movf	(___aodiv@divisor+5)^0,w,c
  2455  000E7E  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
  2456  000E80  5013               	movf	(___aodiv@divisor+6)^0,w,c
  2457  000E82  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
  2458  000E84  5014               	movf	(___aodiv@divisor+7)^0,w,c
  2459  000E86  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
  2460  000E88  A0D8               	btfss	status,0,c
  2461  000E8A  EF49  F007         	goto	u1911
  2462  000E8E  EF4B  F007         	goto	u1910
  2463  000E92                     u1911:
  2464  000E92  EF5C  F007         	goto	l2331
  2465  000E96                     u1910:
  2466  000E96  500D               	movf	___aodiv@divisor^0,w,c
  2467  000E98  5E05               	subwf	___aodiv@dividend^0,f,c
  2468  000E9A  500E               	movf	(___aodiv@divisor+1)^0,w,c
  2469  000E9C  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
  2470  000E9E  500F               	movf	(___aodiv@divisor+2)^0,w,c
  2471  000EA0  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
  2472  000EA2  5010               	movf	(___aodiv@divisor+3)^0,w,c
  2473  000EA4  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
  2474  000EA6  5011               	movf	(___aodiv@divisor+4)^0,w,c
  2475  000EA8  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
  2476  000EAA  5012               	movf	(___aodiv@divisor+5)^0,w,c
  2477  000EAC  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
  2478  000EAE  5013               	movf	(___aodiv@divisor+6)^0,w,c
  2479  000EB0  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
  2480  000EB2  5014               	movf	(___aodiv@divisor+7)^0,w,c
  2481  000EB4  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
  2482  000EB6  8017               	bsf	___aodiv@quotient^0,0,c
  2483  000EB8                     l2331:
  2484  000EB8  90D8               	bcf	status,0,c
  2485  000EBA  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
  2486  000EBC  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
  2487  000EBE  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
  2488  000EC0  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
  2489  000EC2  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
  2490  000EC4  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
  2491  000EC6  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
  2492  000EC8  320D               	rrcf	___aodiv@divisor^0,f,c
  2493  000ECA  2E15               	decfsz	___aodiv@counter^0,f,c
  2494  000ECC  EF2B  F007         	goto	l2323
  2495  000ED0                     l2335:
  2496  000ED0  5016               	movf	___aodiv@sign^0,w,c
  2497  000ED2  B4D8               	btfsc	status,2,c
  2498  000ED4  EF6E  F007         	goto	u1921
  2499  000ED8  EF70  F007         	goto	u1920
  2500  000EDC                     u1921:
  2501  000EDC  EF80  F007         	goto	l2339
  2502  000EE0                     u1920:
  2503  000EE0  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
  2504  000EE2  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
  2505  000EE4  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
  2506  000EE6  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
  2507  000EE8  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
  2508  000EEA  1E19               	comf	(___aodiv@quotient+2)^0,f,c
  2509  000EEC  1E18               	comf	(___aodiv@quotient+1)^0,f,c
  2510  000EEE  6C17               	negf	___aodiv@quotient^0,c
  2511  000EF0  0E00               	movlw	0
  2512  000EF2  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
  2513  000EF4  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
  2514  000EF6  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
  2515  000EF8  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
  2516  000EFA  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
  2517  000EFC  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
  2518  000EFE  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
  2519  000F00                     l2339:
  2520  000F00  C017  F005         	movff	___aodiv@quotient,?___aodiv
  2521  000F04  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  2522  000F08  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  2523  000F0C  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  2524  000F10  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  2525  000F14  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  2526  000F18  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  2527  000F1C  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  2528  000F20  0012               	return		;funcret
  2529  000F22                     __end_of___aodiv:
  2530                           	callstack 0
  2531                           
  2532 ;; *************** function _ctoa *****************
  2533 ;; Defined at:
  2534 ;;		line 259 in file "/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c"
  2535 ;; Parameters:    Size  Location     Type
  2536 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  2537 ;;		 -> NULL(0), 
  2538 ;;  c               1   17[COMRAM] unsigned char 
  2539 ;; Auto vars:     Size  Location     Type
  2540 ;;  w               2   21[COMRAM] int 
  2541 ;;  l               2   19[COMRAM] int 
  2542 ;; Return value:  Size  Location     Type
  2543 ;;                  2   15[COMRAM] int 
  2544 ;; Registers used:
  2545 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2546 ;; Tracked objects:
  2547 ;;		On entry : 0/0
  2548 ;;		On exit  : 0/0
  2549 ;;		Unchanged: 0/0
  2550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2551 ;;      Params:         3       0       0       0       0       0       0       0       0
  2552 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2553 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2554 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2555 ;;Total ram usage:        8 bytes
  2556 ;; Hardware stack levels used: 1
  2557 ;; Hardware stack levels required when called: 7
  2558 ;; This function calls:
  2559 ;;		_fputc
  2560 ;; This function is called by:
  2561 ;;		_vfpfcnvrt
  2562 ;; This function uses a non-reentrant model
  2563 ;;
  2564                           
  2565                           	psect	text11
  2566  001086                     __ptext11:
  2567                           	callstack 0
  2568  001086                     _ctoa:
  2569                           	callstack 20
  2570  001086                     
  2571                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 259: static int ctoa
      +                          (FILE *fp, char c);/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 26
      +                          0: {;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 261:     int l, 
      +                          w;;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 264:     w = width
      +                           ? width - 1 : width;
  2572  001086  0100               	movlb	0	; () banked
  2573  001088  517A               	movf	_width& (0+255),w,b
  2574  00108A  117B               	iorwf	(_width+1)& (0+255),w,b
  2575  00108C  A4D8               	btfss	status,2,c
  2576  00108E  EF4B  F008         	goto	u2041
  2577  001092  EF4D  F008         	goto	u2040
  2578  001096                     u2041:
  2579  001096  EF53  F008         	goto	l2409
  2580  00109A                     u2040:
  2581  00109A                     
  2582                           ; BSR set to: 0
  2583  00109A  C07A  F016         	movff	_width,ctoa@w
  2584  00109E  C07B  F017         	movff	_width+1,ctoa@w+1
  2585  0010A2  EF59  F008         	goto	l2411
  2586  0010A6                     l2409:
  2587                           
  2588                           ; BSR set to: 0
  2589  0010A6  0EFF               	movlw	255
  2590  0010A8  257A               	addwf	_width& (0+255),w,b
  2591  0010AA  6E16               	movwf	ctoa@w^0,c
  2592  0010AC  0EFF               	movlw	255
  2593  0010AE  217B               	addwfc	(_width+1)& (0+255),w,b
  2594  0010B0  6E17               	movwf	(ctoa@w+1)^0,c
  2595  0010B2                     l2411:
  2596                           
  2597                           ; BSR set to: 0
  2598                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 267:     if (flags &
      +                           (1 << 0)) {
  2599  0010B2  A057               	btfss	_flags^0,0,c
  2600  0010B4  EF5E  F008         	goto	u2051
  2601  0010B8  EF60  F008         	goto	u2050
  2602  0010BC                     u2051:
  2603  0010BC  EF69  F008         	goto	l2415
  2604  0010C0                     u2050:
  2605  0010C0                     
  2606                           ; BSR set to: 0
  2607                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 268:         fputc(c
      +                          , fp);
  2608  0010C0  C012  F007         	movff	ctoa@c,fputc@c
  2609  0010C4  6A08               	clrf	(fputc@c+1)^0,c
  2610  0010C6  C010  F009         	movff	ctoa@fp,fputc@fp
  2611  0010CA  C011  F00A         	movff	ctoa@fp+1,fputc@fp+1
  2612  0010CE  EC70  F009         	call	_fputc	;wreg free
  2613  0010D2                     l2415:
  2614                           
  2615                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 271:     w = (w < 0)
      +                           ? 0 : w;
  2616  0010D2  BE17               	btfsc	(ctoa@w+1)^0,7,c
  2617  0010D4  EF6E  F008         	goto	u2061
  2618  0010D8  EF70  F008         	goto	u2060
  2619  0010DC                     u2061:
  2620  0010DC  EF72  F008         	goto	l2419
  2621  0010E0                     u2060:
  2622  0010E0  EF76  F008         	goto	l1060
  2623  0010E4                     l2419:
  2624  0010E4  0E00               	movlw	0
  2625  0010E6  6E17               	movwf	(ctoa@w+1)^0,c
  2626  0010E8  0E00               	movlw	0
  2627  0010EA  6E16               	movwf	ctoa@w^0,c
  2628  0010EC                     l1060:
  2629                           
  2630                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 272:     l = 0;
  2631  0010EC  0E00               	movlw	0
  2632  0010EE  6E15               	movwf	(ctoa@l+1)^0,c
  2633  0010F0  0E00               	movlw	0
  2634  0010F2  6E14               	movwf	ctoa@l^0,c
  2635                           
  2636                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 273:     while (l < 
      +                          w) {
  2637  0010F4  EF88  F008         	goto	l2425
  2638  0010F8                     l2421:
  2639                           
  2640                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 274:         fputc('
      +                           ', fp);
  2641  0010F8  0E00               	movlw	0
  2642  0010FA  6E08               	movwf	(fputc@c+1)^0,c
  2643  0010FC  0E20               	movlw	32
  2644  0010FE  6E07               	movwf	fputc@c^0,c
  2645  001100  C010  F009         	movff	ctoa@fp,fputc@fp
  2646  001104  C011  F00A         	movff	ctoa@fp+1,fputc@fp+1
  2647  001108  EC70  F009         	call	_fputc	;wreg free
  2648  00110C                     
  2649                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 275:         ++l;
  2650  00110C  4A14               	infsnz	ctoa@l^0,f,c
  2651  00110E  2A15               	incf	(ctoa@l+1)^0,f,c
  2652  001110                     l2425:
  2653                           
  2654                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 273:     while (l < 
      +                          w) {
  2655  001110  5016               	movf	ctoa@w^0,w,c
  2656  001112  5C14               	subwf	ctoa@l^0,w,c
  2657  001114  5015               	movf	(ctoa@l+1)^0,w,c
  2658  001116  0A80               	xorlw	128
  2659  001118  6E13               	movwf	??_ctoa^0,c
  2660  00111A  5017               	movf	(ctoa@w+1)^0,w,c
  2661  00111C  0A80               	xorlw	128
  2662  00111E  5813               	subwfb	??_ctoa^0,w,c
  2663  001120  A0D8               	btfss	status,0,c
  2664  001122  EF95  F008         	goto	u2071
  2665  001126  EF97  F008         	goto	u2070
  2666  00112A                     u2071:
  2667  00112A  EF7C  F008         	goto	l2421
  2668  00112E                     u2070:
  2669  00112E                     
  2670                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 278:     if (!(flags
      +                           & (1 << 0))) {
  2671  00112E  B057               	btfsc	_flags^0,0,c
  2672  001130  EF9C  F008         	goto	u2081
  2673  001134  EF9E  F008         	goto	u2080
  2674  001138                     u2081:
  2675  001138  EFA7  F008         	goto	l2429
  2676  00113C                     u2080:
  2677  00113C                     
  2678                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 279:         fputc(c
      +                          , fp);
  2679  00113C  C012  F007         	movff	ctoa@c,fputc@c
  2680  001140  6A08               	clrf	(fputc@c+1)^0,c
  2681  001142  C010  F009         	movff	ctoa@fp,fputc@fp
  2682  001146  C011  F00A         	movff	ctoa@fp+1,fputc@fp+1
  2683  00114A  EC70  F009         	call	_fputc	;wreg free
  2684  00114E                     l2429:
  2685                           
  2686                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 282:     return l+1;
  2687  00114E  0E01               	movlw	1
  2688  001150  2414               	addwf	ctoa@l^0,w,c
  2689  001152  6E10               	movwf	?_ctoa^0,c
  2690  001154  0E00               	movlw	0
  2691  001156  2015               	addwfc	(ctoa@l+1)^0,w,c
  2692  001158  6E11               	movwf	(?_ctoa+1)^0,c
  2693  00115A  0012               	return		;funcret
  2694  00115C                     __end_of_ctoa:
  2695                           	callstack 0
  2696                           
  2697 ;; *************** function _fputc *****************
  2698 ;; Defined at:
  2699 ;;		line 8 in file "/Applications/microchip/xc8/v2.35/pic/sources/c99/common/nf_fputc.c"
  2700 ;; Parameters:    Size  Location     Type
  2701 ;;  c               2    6[COMRAM] int 
  2702 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
  2703 ;;		 -> NULL(0), 
  2704 ;; Auto vars:     Size  Location     Type
  2705 ;;		None
  2706 ;; Return value:  Size  Location     Type
  2707 ;;                  2    6[COMRAM] int 
  2708 ;; Registers used:
  2709 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2710 ;; Tracked objects:
  2711 ;;		On entry : 0/0
  2712 ;;		On exit  : 0/0
  2713 ;;		Unchanged: 0/0
  2714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2715 ;;      Params:         4       0       0       0       0       0       0       0       0
  2716 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2717 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2718 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2719 ;;Total ram usage:        9 bytes
  2720 ;; Hardware stack levels used: 1
  2721 ;; Hardware stack levels required when called: 6
  2722 ;; This function calls:
  2723 ;;		_putch
  2724 ;; This function is called by:
  2725 ;;		_pad
  2726 ;;		_ctoa
  2727 ;;		_vfpfcnvrt
  2728 ;;		_fputs
  2729 ;; This function uses a non-reentrant model
  2730 ;;
  2731                           
  2732                           	psect	text12
  2733  0012E0                     __ptext12:
  2734                           	callstack 0
  2735  0012E0                     _fputc:
  2736                           	callstack 21
  2737  0012E0  5009               	movf	fputc@fp^0,w,c
  2738  0012E2  100A               	iorwf	(fputc@fp+1)^0,w,c
  2739  0012E4  B4D8               	btfsc	status,2,c
  2740  0012E6  EF77  F009         	goto	u1791
  2741  0012EA  EF79  F009         	goto	u1790
  2742  0012EE                     u1791:
  2743  0012EE  EF82  F009         	goto	l2271
  2744  0012F2                     u1790:
  2745  0012F2  5009               	movf	fputc@fp^0,w,c
  2746  0012F4  100A               	iorwf	(fputc@fp+1)^0,w,c
  2747  0012F6  A4D8               	btfss	status,2,c
  2748  0012F8  EF80  F009         	goto	u1801
  2749  0012FC  EF82  F009         	goto	u1800
  2750  001300                     u1801:
  2751  001300  EF87  F009         	goto	l2273
  2752  001304                     u1800:
  2753  001304                     l2271:
  2754  001304  5007               	movf	fputc@c^0,w,c
  2755  001306  EC9C  F00B         	call	_putch
  2756  00130A  EFBA  F009         	goto	l1125
  2757  00130E                     l2273:
  2758  00130E  EE20 F009          	lfsr	2,9
  2759  001312  5009               	movf	fputc@fp^0,w,c
  2760  001314  26D9               	addwf	fsr2l,f,c
  2761  001316  500A               	movf	(fputc@fp+1)^0,w,c
  2762  001318  22DA               	addwfc	fsr2h,f,c
  2763  00131A  50DE               	movf	postinc2,w,c
  2764  00131C  10DE               	iorwf	postinc2,w,c
  2765  00131E  B4D8               	btfsc	status,2,c
  2766  001320  EF94  F009         	goto	u1811
  2767  001324  EF96  F009         	goto	u1810
  2768  001328                     u1811:
  2769  001328  EFB1  F009         	goto	l2277
  2770  00132C                     u1810:
  2771  00132C  EE20 F009          	lfsr	2,9
  2772  001330  5009               	movf	fputc@fp^0,w,c
  2773  001332  26D9               	addwf	fsr2l,f,c
  2774  001334  500A               	movf	(fputc@fp+1)^0,w,c
  2775  001336  22DA               	addwfc	fsr2h,f,c
  2776  001338  EE10 F003          	lfsr	1,3
  2777  00133C  5009               	movf	fputc@fp^0,w,c
  2778  00133E  26E1               	addwf	fsr1l,f,c
  2779  001340  500A               	movf	(fputc@fp+1)^0,w,c
  2780  001342  22E2               	addwfc	fsr1h,f,c
  2781  001344  50DE               	movf	postinc2,w,c
  2782  001346  5CE6               	subwf	postinc1,w,c
  2783  001348  50E6               	movf	postinc1,w,c
  2784  00134A  0A80               	xorlw	128
  2785  00134C  6E0F               	movwf	(??_fputc+4)^0,c
  2786  00134E  50DE               	movf	postinc2,w,c
  2787  001350  0A80               	xorlw	128
  2788  001352  580F               	subwfb	(??_fputc+4)^0,w,c
  2789  001354  B0D8               	btfsc	status,0,c
  2790  001356  EFAF  F009         	goto	u1821
  2791  00135A  EFB1  F009         	goto	u1820
  2792  00135E                     u1821:
  2793  00135E  EFBA  F009         	goto	l1125
  2794  001362                     u1820:
  2795  001362                     l2277:
  2796  001362  EE20 F003          	lfsr	2,3
  2797  001366  5009               	movf	fputc@fp^0,w,c
  2798  001368  26D9               	addwf	fsr2l,f,c
  2799  00136A  500A               	movf	(fputc@fp+1)^0,w,c
  2800  00136C  22DA               	addwfc	fsr2h,f,c
  2801  00136E  2ADE               	incf	postinc2,f,c
  2802  001370  0E00               	movlw	0
  2803  001372  22DD               	addwfc	postdec2,f,c
  2804  001374                     l1125:
  2805  001374  0012               	return		;funcret
  2806  001376                     __end_of_fputc:
  2807                           	callstack 0
  2808                           
  2809 ;; *************** function _putch *****************
  2810 ;; Defined at:
  2811 ;;		line 201 in file "mcc_generated_files/eusart1.c"
  2812 ;; Parameters:    Size  Location     Type
  2813 ;;  txData          1    wreg     unsigned char 
  2814 ;; Auto vars:     Size  Location     Type
  2815 ;;  txData          1    5[COMRAM] unsigned char 
  2816 ;; Return value:  Size  Location     Type
  2817 ;;                  1    wreg      void 
  2818 ;; Registers used:
  2819 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2820 ;; Tracked objects:
  2821 ;;		On entry : 0/0
  2822 ;;		On exit  : 0/0
  2823 ;;		Unchanged: 0/0
  2824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2825 ;;      Params:         0       0       0       0       0       0       0       0       0
  2826 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2827 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2828 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2829 ;;Total ram usage:        1 bytes
  2830 ;; Hardware stack levels used: 1
  2831 ;; Hardware stack levels required when called: 5
  2832 ;; This function calls:
  2833 ;;		_EUSART1_Write
  2834 ;; This function is called by:
  2835 ;;		_fputc
  2836 ;; This function uses a non-reentrant model
  2837 ;;
  2838                           
  2839                           	psect	text13
  2840  001738                     __ptext13:
  2841                           	callstack 0
  2842  001738                     _putch:
  2843                           	callstack 21
  2844                           
  2845                           ;incstack = 0
  2846                           ;putch@txData stored from wreg
  2847  001738  6E06               	movwf	putch@txData^0,c
  2848  00173A                     
  2849                           ;mcc_generated_files/eusart1.c: 201: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 202: {;mcc_generated_files/eusart1.c: 203:     EUSART1_Write(txData);
  2850  00173A  5006               	movf	putch@txData^0,w,c
  2851  00173C  EC67  F00A         	call	_EUSART1_Write
  2852  001740  0012               	return		;funcret
  2853  001742                     __end_of_putch:
  2854                           	callstack 0
  2855                           
  2856 ;; *************** function _EUSART1_Write *****************
  2857 ;; Defined at:
  2858 ;;		line 173 in file "mcc_generated_files/eusart1.c"
  2859 ;; Parameters:    Size  Location     Type
  2860 ;;  txData          1    wreg     unsigned char 
  2861 ;; Auto vars:     Size  Location     Type
  2862 ;;  txData          1    4[COMRAM] unsigned char 
  2863 ;; Return value:  Size  Location     Type
  2864 ;;                  1    wreg      void 
  2865 ;; Registers used:
  2866 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2867 ;; Tracked objects:
  2868 ;;		On entry : 0/0
  2869 ;;		On exit  : 0/0
  2870 ;;		Unchanged: 0/0
  2871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2872 ;;      Params:         0       0       0       0       0       0       0       0       0
  2873 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2874 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2875 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2876 ;;Total ram usage:        1 bytes
  2877 ;; Hardware stack levels used: 1
  2878 ;; Hardware stack levels required when called: 4
  2879 ;; This function calls:
  2880 ;;		Nothing
  2881 ;; This function is called by:
  2882 ;;		_putch
  2883 ;;		_UART_example_WRITE_STRING
  2884 ;; This function uses a non-reentrant model
  2885 ;;
  2886                           
  2887                           	psect	text14
  2888  0014CE                     __ptext14:
  2889                           	callstack 0
  2890  0014CE                     _EUSART1_Write:
  2891                           	callstack 21
  2892                           
  2893                           ;incstack = 0
  2894                           ;EUSART1_Write@txData stored from wreg
  2895  0014CE  6E05               	movwf	EUSART1_Write@txData^0,c
  2896  0014D0                     l2249:
  2897                           
  2898                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
  2899  0014D0  0100               	movlb	0	; () banked
  2900  0014D2  518A               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
  2901  0014D4  B4D8               	btfsc	status,2,c
  2902  0014D6  EF6F  F00A         	goto	u1761
  2903  0014DA  EF71  F00A         	goto	u1760
  2904  0014DE                     u1761:
  2905  0014DE  EF68  F00A         	goto	l2249
  2906  0014E2                     u1760:
  2907  0014E2                     
  2908                           ; BSR set to: 0
  2909                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE1bits.TX1IE)
  2910  0014E2  B89D               	btfsc	157,4,c	;volatile
  2911  0014E4  EF76  F00A         	goto	u1771
  2912  0014E8  EF78  F00A         	goto	u1770
  2913  0014EC                     u1771:
  2914  0014EC  EF7C  F00A         	goto	l100
  2915  0014F0                     u1770:
  2916  0014F0                     
  2917                           ; BSR set to: 0
  2918                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          XREG1 = txData;
  2919  0014F0  C005  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  2920                           
  2921                           ;mcc_generated_files/eusart1.c: 182:     }
  2922  0014F4  EF91  F00A         	goto	l2263
  2923  0014F8                     l100:
  2924                           
  2925                           ; BSR set to: 0
  2926                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE1bits.TX1IE = 0;
  2927  0014F8  989D               	bcf	157,4,c	;volatile
  2928  0014FA                     
  2929                           ; BSR set to: 0
  2930                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
  2931  0014FA  0E70               	movlw	low _eusart1TxBuffer
  2932  0014FC  258C               	addwf	_eusart1TxHead& (0+255),w,b	;volatile
  2933  0014FE  6ED9               	movwf	fsr2l,c
  2934  001500  6ADA               	clrf	fsr2h,c
  2935  001502  0E00               	movlw	high _eusart1TxBuffer
  2936  001504  22DA               	addwfc	fsr2h,f,c
  2937  001506  C005  FFDF         	movff	EUSART1_Write@txData,indf2
  2938  00150A                     
  2939                           ; BSR set to: 0
  2940  00150A  2B8C               	incf	_eusart1TxHead& (0+255),f,b	;volatile
  2941  00150C                     
  2942                           ; BSR set to: 0
  2943                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
  2944  00150C  0E07               	movlw	7
  2945  00150E  658C               	cpfsgt	_eusart1TxHead& (0+255),b	;volatile
  2946  001510  EF8C  F00A         	goto	u1781
  2947  001514  EF8E  F00A         	goto	u1780
  2948  001518                     u1781:
  2949  001518  EF90  F00A         	goto	l2261
  2950  00151C                     u1780:
  2951  00151C                     
  2952                           ; BSR set to: 0
  2953                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
  2954  00151C  0E00               	movlw	0
  2955  00151E  6F8C               	movwf	_eusart1TxHead& (0+255),b	;volatile
  2956  001520                     l2261:
  2957                           
  2958                           ; BSR set to: 0
  2959                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
  2960  001520  078A               	decf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
  2961  001522                     l2263:
  2962                           
  2963                           ; BSR set to: 0
  2964                           ;mcc_generated_files/eusart1.c: 193:     PIE1bits.TX1IE = 1;
  2965  001522  889D               	bsf	157,4,c	;volatile
  2966  001524                     
  2967                           ; BSR set to: 0
  2968  001524  0012               	return		;funcret
  2969  001526                     __end_of_EUSART1_Write:
  2970                           	callstack 0
  2971                           
  2972 ;; *************** function _SYSTEM_Initialize *****************
  2973 ;; Defined at:
  2974 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2975 ;; Parameters:    Size  Location     Type
  2976 ;;		None
  2977 ;; Auto vars:     Size  Location     Type
  2978 ;;		None
  2979 ;; Return value:  Size  Location     Type
  2980 ;;                  1    wreg      void 
  2981 ;; Registers used:
  2982 ;;		wreg, status,2, status,0, cstack
  2983 ;; Tracked objects:
  2984 ;;		On entry : 0/0
  2985 ;;		On exit  : 0/0
  2986 ;;		Unchanged: 0/0
  2987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2988 ;;      Params:         0       0       0       0       0       0       0       0       0
  2989 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2990 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2991 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2992 ;;Total ram usage:        0 bytes
  2993 ;; Hardware stack levels used: 1
  2994 ;; Hardware stack levels required when called: 6
  2995 ;; This function calls:
  2996 ;;		_EUSART1_Initialize
  2997 ;;		_INTERRUPT_Initialize
  2998 ;;		_OSCILLATOR_Initialize
  2999 ;;		_PIN_MANAGER_Initialize
  3000 ;; This function is called by:
  3001 ;;		_main
  3002 ;; This function uses a non-reentrant model
  3003 ;;
  3004                           
  3005                           	psect	text15
  3006  001726                     __ptext15:
  3007                           	callstack 0
  3008  001726                     _SYSTEM_Initialize:
  3009                           	callstack 24
  3010  001726                     
  3011                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  3012  001726  ECBA  F00B         	call	_INTERRUPT_Initialize	;wreg free
  3013  00172A                     
  3014                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  3015  00172A  EC1D  F00B         	call	_PIN_MANAGER_Initialize	;wreg free
  3016  00172E                     
  3017                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  3018  00172E  EC83  F00B         	call	_OSCILLATOR_Initialize	;wreg free
  3019  001732                     
  3020                           ;mcc_generated_files/mcc.c: 56:     EUSART1_Initialize();
  3021  001732  ECFB  F009         	call	_EUSART1_Initialize	;wreg free
  3022  001736  0012               	return		;funcret
  3023  001738                     __end_of_SYSTEM_Initialize:
  3024                           	callstack 0
  3025                           
  3026 ;; *************** function _PIN_MANAGER_Initialize *****************
  3027 ;; Defined at:
  3028 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3029 ;; Parameters:    Size  Location     Type
  3030 ;;		None
  3031 ;; Auto vars:     Size  Location     Type
  3032 ;;		None
  3033 ;; Return value:  Size  Location     Type
  3034 ;;                  1    wreg      void 
  3035 ;; Registers used:
  3036 ;;		wreg, status,2
  3037 ;; Tracked objects:
  3038 ;;		On entry : 0/0
  3039 ;;		On exit  : 0/0
  3040 ;;		Unchanged: 0/0
  3041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3042 ;;      Params:         0       0       0       0       0       0       0       0       0
  3043 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3044 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3045 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3046 ;;Total ram usage:        0 bytes
  3047 ;; Hardware stack levels used: 1
  3048 ;; Hardware stack levels required when called: 4
  3049 ;; This function calls:
  3050 ;;		Nothing
  3051 ;; This function is called by:
  3052 ;;		_SYSTEM_Initialize
  3053 ;; This function uses a non-reentrant model
  3054 ;;
  3055                           
  3056                           	psect	text16
  3057  00163A                     __ptext16:
  3058                           	callstack 0
  3059  00163A                     _PIN_MANAGER_Initialize:
  3060                           	callstack 25
  3061  00163A                     
  3062                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  3063  00163A  0E00               	movlw	0
  3064  00163C  6E8D               	movwf	141,c	;volatile
  3065                           
  3066                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  3067  00163E  0E00               	movlw	0
  3068  001640  6E8C               	movwf	140,c	;volatile
  3069                           
  3070                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  3071  001642  0E00               	movlw	0
  3072  001644  6E89               	movwf	137,c	;volatile
  3073                           
  3074                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  3075  001646  0E00               	movlw	0
  3076  001648  6E8A               	movwf	138,c	;volatile
  3077                           
  3078                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  3079  00164A  0E00               	movlw	0
  3080  00164C  6E8B               	movwf	139,c	;volatile
  3081                           
  3082                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  3083  00164E  0E07               	movlw	7
  3084  001650  6E96               	movwf	150,c	;volatile
  3085  001652                     
  3086                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  3087  001652  6892               	setf	146,c	;volatile
  3088  001654                     
  3089                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  3090  001654  6893               	setf	147,c	;volatile
  3091                           
  3092                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0x87;
  3093  001656  0E87               	movlw	135
  3094  001658  6E94               	movwf	148,c	;volatile
  3095  00165A                     
  3096                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  3097  00165A  6895               	setf	149,c	;volatile
  3098  00165C                     
  3099                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
  3100  00165C  010F               	movlb	15	; () banked
  3101  00165E  695E               	setf	94,b	;volatile
  3102                           
  3103                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x04;
  3104  001660  0E04               	movlw	4
  3105  001662  6F5D               	movwf	93,b	;volatile
  3106                           
  3107                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x3F;
  3108  001664  0E3F               	movlw	63
  3109  001666  6F5C               	movwf	92,b	;volatile
  3110                           
  3111                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  3112  001668  0E07               	movlw	7
  3113  00166A  6F5F               	movwf	95,b	;volatile
  3114                           
  3115                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x2F;
  3116  00166C  0E2F               	movlw	47
  3117  00166E  6F5B               	movwf	91,b	;volatile
  3118                           
  3119                           ;mcc_generated_files/pin_manager.c: 87:     WPUB = 0x00;
  3120  001670  0E00               	movlw	0
  3121  001672  6E85               	movwf	133,c	;volatile
  3122  001674                     
  3123                           ; BSR set to: 15
  3124                           ;mcc_generated_files/pin_manager.c: 88:     INTCON2bits.nRBPU = 1;
  3125  001674  8EF1               	bsf	241,7,c	;volatile
  3126  001676                     
  3127                           ; BSR set to: 15
  3128  001676  0012               	return		;funcret
  3129  001678                     __end_of_PIN_MANAGER_Initialize:
  3130                           	callstack 0
  3131                           
  3132 ;; *************** function _OSCILLATOR_Initialize *****************
  3133 ;; Defined at:
  3134 ;;		line 59 in file "mcc_generated_files/mcc.c"
  3135 ;; Parameters:    Size  Location     Type
  3136 ;;		None
  3137 ;; Auto vars:     Size  Location     Type
  3138 ;;		None
  3139 ;; Return value:  Size  Location     Type
  3140 ;;                  1    wreg      void 
  3141 ;; Registers used:
  3142 ;;		wreg, status,2
  3143 ;; Tracked objects:
  3144 ;;		On entry : 0/0
  3145 ;;		On exit  : 0/0
  3146 ;;		Unchanged: 0/0
  3147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3148 ;;      Params:         0       0       0       0       0       0       0       0       0
  3149 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3150 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3151 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3152 ;;Total ram usage:        0 bytes
  3153 ;; Hardware stack levels used: 1
  3154 ;; Hardware stack levels required when called: 4
  3155 ;; This function calls:
  3156 ;;		Nothing
  3157 ;; This function is called by:
  3158 ;;		_SYSTEM_Initialize
  3159 ;; This function uses a non-reentrant model
  3160 ;;
  3161                           
  3162                           	psect	text17
  3163  001706                     __ptext17:
  3164                           	callstack 0
  3165  001706                     _OSCILLATOR_Initialize:
  3166                           	callstack 25
  3167  001706                     
  3168                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x70;
  3169  001706  0E70               	movlw	112
  3170  001708  6ED3               	movwf	211,c	;volatile
  3171                           
  3172                           ;mcc_generated_files/mcc.c: 64:     OSCCON2 = 0x00;
  3173  00170A  0E00               	movlw	0
  3174  00170C  6ED2               	movwf	210,c	;volatile
  3175                           
  3176                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x80;
  3177  00170E  0E80               	movlw	128
  3178  001710  6E9B               	movwf	155,c	;volatile
  3179                           
  3180                           ;mcc_generated_files/mcc.c: 68:     ACTCON = 0x00;
  3181  001712  0E00               	movlw	0
  3182  001714  6EB5               	movwf	181,c	;volatile
  3183  001716                     l301:
  3184                           
  3185                           ;mcc_generated_files/mcc.c: 70:     while(PLLRDY == 0)
  3186  001716  AED2               	btfss	4050,7,c	;volatile
  3187  001718  EF90  F00B         	goto	u1441
  3188  00171C  EF92  F00B         	goto	u1440
  3189  001720                     u1441:
  3190  001720  EF8B  F00B         	goto	l301
  3191  001724                     u1440:
  3192  001724  0012               	return		;funcret
  3193  001726                     __end_of_OSCILLATOR_Initialize:
  3194                           	callstack 0
  3195                           
  3196 ;; *************** function _INTERRUPT_Initialize *****************
  3197 ;; Defined at:
  3198 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3199 ;; Parameters:    Size  Location     Type
  3200 ;;		None
  3201 ;; Auto vars:     Size  Location     Type
  3202 ;;		None
  3203 ;; Return value:  Size  Location     Type
  3204 ;;                  1    wreg      void 
  3205 ;; Registers used:
  3206 ;;		None
  3207 ;; Tracked objects:
  3208 ;;		On entry : 0/0
  3209 ;;		On exit  : 0/0
  3210 ;;		Unchanged: 0/0
  3211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3212 ;;      Params:         0       0       0       0       0       0       0       0       0
  3213 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3214 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3215 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3216 ;;Total ram usage:        0 bytes
  3217 ;; Hardware stack levels used: 1
  3218 ;; Hardware stack levels required when called: 4
  3219 ;; This function calls:
  3220 ;;		Nothing
  3221 ;; This function is called by:
  3222 ;;		_SYSTEM_Initialize
  3223 ;; This function uses a non-reentrant model
  3224 ;;
  3225                           
  3226                           	psect	text18
  3227  001774                     __ptext18:
  3228                           	callstack 0
  3229  001774                     _INTERRUPT_Initialize:
  3230                           	callstack 25
  3231  001774                     
  3232                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 1;
  3233  001774  8ED0               	bsf	208,7,c	;volatile
  3234                           
  3235                           ;mcc_generated_files/interrupt_manager.c: 60:     IPR1bits.TX1IP = 1;
  3236  001776  889F               	bsf	159,4,c	;volatile
  3237                           
  3238                           ;mcc_generated_files/interrupt_manager.c: 63:     IPR1bits.RC1IP = 1;
  3239  001778  8A9F               	bsf	159,5,c	;volatile
  3240  00177A  0012               	return		;funcret
  3241  00177C                     __end_of_INTERRUPT_Initialize:
  3242                           	callstack 0
  3243                           
  3244 ;; *************** function _EUSART1_Initialize *****************
  3245 ;; Defined at:
  3246 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  3247 ;; Parameters:    Size  Location     Type
  3248 ;;		None
  3249 ;; Auto vars:     Size  Location     Type
  3250 ;;		None
  3251 ;; Return value:  Size  Location     Type
  3252 ;;                  1    wreg      void 
  3253 ;; Registers used:
  3254 ;;		wreg, status,2, status,0, cstack
  3255 ;; Tracked objects:
  3256 ;;		On entry : 0/0
  3257 ;;		On exit  : 0/0
  3258 ;;		Unchanged: 0/0
  3259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3260 ;;      Params:         0       0       0       0       0       0       0       0       0
  3261 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3262 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3263 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3264 ;;Total ram usage:        0 bytes
  3265 ;; Hardware stack levels used: 1
  3266 ;; Hardware stack levels required when called: 5
  3267 ;; This function calls:
  3268 ;;		_EUSART1_SetErrorHandler
  3269 ;;		_EUSART1_SetFramingErrorHandler
  3270 ;;		_EUSART1_SetOverrunErrorHandler
  3271 ;;		_EUSART1_SetRxInterruptHandler
  3272 ;;		_EUSART1_SetTxInterruptHandler
  3273 ;; This function is called by:
  3274 ;;		_SYSTEM_Initialize
  3275 ;; This function uses a non-reentrant model
  3276 ;;
  3277                           
  3278                           	psect	text19
  3279  0013F6                     __ptext19:
  3280                           	callstack 0
  3281  0013F6                     _EUSART1_Initialize:
  3282                           	callstack 24
  3283  0013F6                     
  3284                           ;mcc_generated_files/eusart1.c: 91:     PIE1bits.RC1IE = 0;
  3285  0013F6  9A9D               	bcf	157,5,c	;volatile
  3286  0013F8                     
  3287                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  3288  0013F8  0E1E               	movlw	low _EUSART1_Receive_ISR
  3289  0013FA  6E05               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
  3290  0013FC  0E12               	movlw	high _EUSART1_Receive_ISR
  3291  0013FE  6E06               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
  3292  001400  ECA6  F00B         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  3293  001404                     
  3294                           ;mcc_generated_files/eusart1.c: 93:     PIE1bits.TX1IE = 0;
  3295  001404  989D               	bcf	157,4,c	;volatile
  3296                           
  3297                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  3298  001406  0EB8               	movlw	low _EUSART1_Transmit_ISR
  3299  001408  6E05               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
  3300  00140A  0E15               	movlw	high _EUSART1_Transmit_ISR
  3301  00140C  6E06               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
  3302  00140E  ECA1  F00B         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  3303  001412                     
  3304                           ;mcc_generated_files/eusart1.c: 98:     BAUDCON1 = 0x08;
  3305  001412  0E08               	movlw	8
  3306  001414  6EB8               	movwf	184,c	;volatile
  3307  001416                     
  3308                           ;mcc_generated_files/eusart1.c: 101:     RCSTA1 = 0x90;
  3309  001416  0E90               	movlw	144
  3310  001418  6EAB               	movwf	171,c	;volatile
  3311  00141A                     
  3312                           ;mcc_generated_files/eusart1.c: 104:     TXSTA1 = 0x24;
  3313  00141A  0E24               	movlw	36
  3314  00141C  6EAC               	movwf	172,c	;volatile
  3315  00141E                     
  3316                           ;mcc_generated_files/eusart1.c: 107:     SPBRG1 = 0xE1;
  3317  00141E  0EE1               	movlw	225
  3318  001420  6EAF               	movwf	175,c	;volatile
  3319  001422                     
  3320                           ;mcc_generated_files/eusart1.c: 110:     SPBRGH1 = 0x04;
  3321  001422  0E04               	movlw	4
  3322  001424  6EB0               	movwf	176,c	;volatile
  3323  001426                     
  3324                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  3325  001426  0E8A               	movlw	low _EUSART1_DefaultFramingErrorHandler
  3326  001428  6E05               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  3327  00142A  0E17               	movlw	high _EUSART1_DefaultFramingErrorHandler
  3328  00142C  6E06               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  3329  00142E  ECB0  F00B         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  3330  001432                     
  3331                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  3332  001432  0E7C               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  3333  001434  6E05               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  3334  001436  0E17               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  3335  001438  6E06               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  3336  00143A  ECAB  F00B         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  3337  00143E                     
  3338                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  3339  00143E  0E82               	movlw	low _EUSART1_DefaultErrorHandler
  3340  001440  6E05               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  3341  001442  0E17               	movlw	high _EUSART1_DefaultErrorHandler
  3342  001444  6E06               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  3343  001446  ECB5  F00B         	call	_EUSART1_SetErrorHandler	;wreg free
  3344                           
  3345                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
  3346  00144A  0E00               	movlw	0
  3347  00144C  0100               	movlb	0	; () banked
  3348  00144E  6F88               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  3349                           
  3350                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
  3351  001450  0E00               	movlw	0
  3352  001452  6F8C               	movwf	_eusart1TxHead& (0+255),b	;volatile
  3353                           
  3354                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
  3355  001454  0E00               	movlw	0
  3356  001456  6F8B               	movwf	_eusart1TxTail& (0+255),b	;volatile
  3357                           
  3358                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  3359  001458  0E08               	movlw	8
  3360  00145A  6F8A               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
  3361                           
  3362                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
  3363  00145C  0E00               	movlw	0
  3364  00145E  6E5A               	movwf	_eusart1RxHead^0,c	;volatile
  3365                           
  3366                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
  3367  001460  0E00               	movlw	0
  3368  001462  6E59               	movwf	_eusart1RxTail^0,c	;volatile
  3369                           
  3370                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
  3371  001464  0E00               	movlw	0
  3372  001466  6F89               	movwf	_eusart1RxCount& (0+255),b	;volatile
  3373  001468                     
  3374                           ; BSR set to: 0
  3375                           ;mcc_generated_files/eusart1.c: 129:     PIE1bits.RC1IE = 1;
  3376  001468  8A9D               	bsf	157,5,c	;volatile
  3377  00146A                     
  3378                           ; BSR set to: 0
  3379  00146A  0012               	return		;funcret
  3380  00146C                     __end_of_EUSART1_Initialize:
  3381                           	callstack 0
  3382                           
  3383 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  3384 ;; Defined at:
  3385 ;;		line 285 in file "mcc_generated_files/eusart1.c"
  3386 ;; Parameters:    Size  Location     Type
  3387 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3388 ;;		 -> EUSART1_Transmit_ISR(1), 
  3389 ;; Auto vars:     Size  Location     Type
  3390 ;;		None
  3391 ;; Return value:  Size  Location     Type
  3392 ;;                  1    wreg      void 
  3393 ;; Registers used:
  3394 ;;		wreg, status,2, status,0
  3395 ;; Tracked objects:
  3396 ;;		On entry : 0/0
  3397 ;;		On exit  : 0/0
  3398 ;;		Unchanged: 0/0
  3399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3400 ;;      Params:         2       0       0       0       0       0       0       0       0
  3401 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3402 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3403 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3404 ;;Total ram usage:        2 bytes
  3405 ;; Hardware stack levels used: 1
  3406 ;; Hardware stack levels required when called: 4
  3407 ;; This function calls:
  3408 ;;		Nothing
  3409 ;; This function is called by:
  3410 ;;		_EUSART1_Initialize
  3411 ;; This function uses a non-reentrant model
  3412 ;;
  3413                           
  3414                           	psect	text20
  3415  001742                     __ptext20:
  3416                           	callstack 0
  3417  001742                     _EUSART1_SetTxInterruptHandler:
  3418                           	callstack 24
  3419  001742                     
  3420                           ;mcc_generated_files/eusart1.c: 286:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  3421  001742  C005  F086         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  3422  001746  C006  F087         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  3423  00174A  0012               	return		;funcret
  3424  00174C                     __end_of_EUSART1_SetTxInterruptHandler:
  3425                           	callstack 0
  3426                           
  3427 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  3428 ;; Defined at:
  3429 ;;		line 289 in file "mcc_generated_files/eusart1.c"
  3430 ;; Parameters:    Size  Location     Type
  3431 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3432 ;;		 -> EUSART1_Receive_ISR(1), 
  3433 ;; Auto vars:     Size  Location     Type
  3434 ;;		None
  3435 ;; Return value:  Size  Location     Type
  3436 ;;                  1    wreg      void 
  3437 ;; Registers used:
  3438 ;;		wreg, status,2, status,0
  3439 ;; Tracked objects:
  3440 ;;		On entry : 0/0
  3441 ;;		On exit  : 0/0
  3442 ;;		Unchanged: 0/0
  3443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3444 ;;      Params:         2       0       0       0       0       0       0       0       0
  3445 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3446 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3447 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3448 ;;Total ram usage:        2 bytes
  3449 ;; Hardware stack levels used: 1
  3450 ;; Hardware stack levels required when called: 4
  3451 ;; This function calls:
  3452 ;;		Nothing
  3453 ;; This function is called by:
  3454 ;;		_EUSART1_Initialize
  3455 ;; This function uses a non-reentrant model
  3456 ;;
  3457                           
  3458                           	psect	text21
  3459  00174C                     __ptext21:
  3460                           	callstack 0
  3461  00174C                     _EUSART1_SetRxInterruptHandler:
  3462                           	callstack 24
  3463  00174C                     
  3464                           ;mcc_generated_files/eusart1.c: 290:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  3465  00174C  C005  F084         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  3466  001750  C006  F085         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  3467  001754  0012               	return		;funcret
  3468  001756                     __end_of_EUSART1_SetRxInterruptHandler:
  3469                           	callstack 0
  3470                           
  3471 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  3472 ;; Defined at:
  3473 ;;		line 277 in file "mcc_generated_files/eusart1.c"
  3474 ;; Parameters:    Size  Location     Type
  3475 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3476 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  3477 ;; Auto vars:     Size  Location     Type
  3478 ;;		None
  3479 ;; Return value:  Size  Location     Type
  3480 ;;                  1    wreg      void 
  3481 ;; Registers used:
  3482 ;;		wreg, status,2, status,0
  3483 ;; Tracked objects:
  3484 ;;		On entry : 0/0
  3485 ;;		On exit  : 0/0
  3486 ;;		Unchanged: 0/0
  3487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3488 ;;      Params:         2       0       0       0       0       0       0       0       0
  3489 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3490 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3491 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3492 ;;Total ram usage:        2 bytes
  3493 ;; Hardware stack levels used: 1
  3494 ;; Hardware stack levels required when called: 4
  3495 ;; This function calls:
  3496 ;;		Nothing
  3497 ;; This function is called by:
  3498 ;;		_EUSART1_Initialize
  3499 ;; This function uses a non-reentrant model
  3500 ;;
  3501                           
  3502                           	psect	text22
  3503  001756                     __ptext22:
  3504                           	callstack 0
  3505  001756                     _EUSART1_SetOverrunErrorHandler:
  3506                           	callstack 24
  3507  001756                     
  3508                           ;mcc_generated_files/eusart1.c: 278:     EUSART1_OverrunErrorHandler = interruptHandler;
  3509  001756  C005  F080         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  3510  00175A  C006  F081         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  3511  00175E  0012               	return		;funcret
  3512  001760                     __end_of_EUSART1_SetOverrunErrorHandler:
  3513                           	callstack 0
  3514                           
  3515 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  3516 ;; Defined at:
  3517 ;;		line 273 in file "mcc_generated_files/eusart1.c"
  3518 ;; Parameters:    Size  Location     Type
  3519 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3520 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  3521 ;; Auto vars:     Size  Location     Type
  3522 ;;		None
  3523 ;; Return value:  Size  Location     Type
  3524 ;;                  1    wreg      void 
  3525 ;; Registers used:
  3526 ;;		wreg, status,2, status,0
  3527 ;; Tracked objects:
  3528 ;;		On entry : 0/0
  3529 ;;		On exit  : 0/0
  3530 ;;		Unchanged: 0/0
  3531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3532 ;;      Params:         2       0       0       0       0       0       0       0       0
  3533 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3534 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3535 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3536 ;;Total ram usage:        2 bytes
  3537 ;; Hardware stack levels used: 1
  3538 ;; Hardware stack levels required when called: 4
  3539 ;; This function calls:
  3540 ;;		Nothing
  3541 ;; This function is called by:
  3542 ;;		_EUSART1_Initialize
  3543 ;; This function uses a non-reentrant model
  3544 ;;
  3545                           
  3546                           	psect	text23
  3547  001760                     __ptext23:
  3548                           	callstack 0
  3549  001760                     _EUSART1_SetFramingErrorHandler:
  3550                           	callstack 24
  3551  001760                     
  3552                           ;mcc_generated_files/eusart1.c: 274:     EUSART1_FramingErrorHandler = interruptHandler;
  3553  001760  C005  F082         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  3554  001764  C006  F083         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  3555  001768  0012               	return		;funcret
  3556  00176A                     __end_of_EUSART1_SetFramingErrorHandler:
  3557                           	callstack 0
  3558                           
  3559 ;; *************** function _EUSART1_SetErrorHandler *****************
  3560 ;; Defined at:
  3561 ;;		line 281 in file "mcc_generated_files/eusart1.c"
  3562 ;; Parameters:    Size  Location     Type
  3563 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3564 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  3565 ;; Auto vars:     Size  Location     Type
  3566 ;;		None
  3567 ;; Return value:  Size  Location     Type
  3568 ;;                  1    wreg      void 
  3569 ;; Registers used:
  3570 ;;		wreg, status,2, status,0
  3571 ;; Tracked objects:
  3572 ;;		On entry : 0/0
  3573 ;;		On exit  : 0/0
  3574 ;;		Unchanged: 0/0
  3575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3576 ;;      Params:         2       0       0       0       0       0       0       0       0
  3577 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3578 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3579 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3580 ;;Total ram usage:        2 bytes
  3581 ;; Hardware stack levels used: 1
  3582 ;; Hardware stack levels required when called: 4
  3583 ;; This function calls:
  3584 ;;		Nothing
  3585 ;; This function is called by:
  3586 ;;		_EUSART1_Initialize
  3587 ;; This function uses a non-reentrant model
  3588 ;;
  3589                           
  3590                           	psect	text24
  3591  00176A                     __ptext24:
  3592                           	callstack 0
  3593  00176A                     _EUSART1_SetErrorHandler:
  3594                           	callstack 24
  3595  00176A                     
  3596                           ;mcc_generated_files/eusart1.c: 282:     EUSART1_ErrorHandler = interruptHandler;
  3597  00176A  C005  F07E         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  3598  00176E  C006  F07F         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  3599  001772  0012               	return		;funcret
  3600  001774                     __end_of_EUSART1_SetErrorHandler:
  3601                           	callstack 0
  3602                           
  3603 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
  3604 ;; Defined at:
  3605 ;;		line 68 in file "mcc_generated_files/interrupt_manager.c"
  3606 ;; Parameters:    Size  Location     Type
  3607 ;;		None
  3608 ;; Auto vars:     Size  Location     Type
  3609 ;;		None
  3610 ;; Return value:  Size  Location     Type
  3611 ;;                  1    wreg      void 
  3612 ;; Registers used:
  3613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  3614 ;; Tracked objects:
  3615 ;;		On entry : 0/0
  3616 ;;		On exit  : 0/0
  3617 ;;		Unchanged: 0/0
  3618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3619 ;;      Params:         0       0       0       0       0       0       0       0       0
  3620 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3621 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3622 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3623 ;;Total ram usage:        4 bytes
  3624 ;; Hardware stack levels used: 1
  3625 ;; Hardware stack levels required when called: 3
  3626 ;; This function calls:
  3627 ;;		Absolute function
  3628 ;;		_EUSART1_Receive_ISR
  3629 ;;		_EUSART1_Transmit_ISR
  3630 ;; This function is called by:
  3631 ;;		Interrupt level 2
  3632 ;; This function uses a non-reentrant model
  3633 ;;
  3634                           
  3635                           	psect	intcode
  3636  000008                     __pintcode:
  3637                           	callstack 0
  3638  000008                     _INTERRUPT_InterruptManagerHigh:
  3639                           	callstack 18
  3640                           
  3641                           ;incstack = 0
  3642  000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3643  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
  3644  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
  3645  000012  CFD9 F003          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+2
  3646  000016  CFDA F004          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+3
  3647  00001A                     
  3648                           ;mcc_generated_files/interrupt_manager.c: 71:     if(PIE1bits.TX1IE == 1 && PIR1bits.TX1
      +                          IF == 1)
  3649  00001A  A89D               	btfss	157,4,c	;volatile
  3650  00001C  EF12  F000         	goto	i2u168_41
  3651  000020  EF14  F000         	goto	i2u168_40
  3652  000024                     i2u168_41:
  3653  000024  EF2B  F000         	goto	i2l273
  3654  000028                     i2u168_40:
  3655  000028  A89E               	btfss	158,4,c	;volatile
  3656  00002A  EF19  F000         	goto	i2u169_41
  3657  00002E  EF1B  F000         	goto	i2u169_40
  3658  000032                     i2u169_41:
  3659  000032  EF2B  F000         	goto	i2l273
  3660  000036                     i2u169_40:
  3661  000036                     
  3662                           ;mcc_generated_files/interrupt_manager.c: 72:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 73:         EUSART1_TxDefaultInterruptHandler();
  3663  000036  D802               	call	i2u170_48
  3664  000038  EF29  F000         	goto	i2u170_49
  3665  00003C                     i2u170_48:
  3666  00003C  0005               	push	
  3667  00003E  0100               	movlb	0	; () banked
  3668  000040  6EFA               	movwf	pclath,c
  3669  000042  5186               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
  3670  000044  6EFD               	movwf	tosl,c
  3671  000046  5187               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
  3672  000048  6EFE               	movwf	tosh,c
  3673  00004A  50F8               	movf	tblptru,w,c
  3674  00004C  6EFF               	movwf	tosu,c
  3675  00004E  50FA               	movf	pclath,w,c
  3676  000050  0012               	return		;indir
  3677  000052                     i2u170_49:
  3678                           
  3679                           ;mcc_generated_files/interrupt_manager.c: 74:     }
  3680  000052  EF47  F000         	goto	i2l277
  3681  000056                     i2l273:
  3682  000056  AA9D               	btfss	157,5,c	;volatile
  3683  000058  EF30  F000         	goto	i2u171_41
  3684  00005C  EF32  F000         	goto	i2u171_40
  3685  000060                     i2u171_41:
  3686  000060  EF47  F000         	goto	i2l277
  3687  000064                     i2u171_40:
  3688  000064  AA9E               	btfss	158,5,c	;volatile
  3689  000066  EF37  F000         	goto	i2u172_41
  3690  00006A  EF39  F000         	goto	i2u172_40
  3691  00006E                     i2u172_41:
  3692  00006E  EF47  F000         	goto	i2l277
  3693  000072                     i2u172_40:
  3694  000072                     
  3695                           ;mcc_generated_files/interrupt_manager.c: 76:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 77:         EUSART1_RxDefaultInterruptHandler();
  3696  000072  D802               	call	i2u173_48
  3697  000074  EF47  F000         	goto	i2u173_49
  3698  000078                     i2u173_48:
  3699  000078  0005               	push	
  3700  00007A  0100               	movlb	0	; () banked
  3701  00007C  6EFA               	movwf	pclath,c
  3702  00007E  5184               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
  3703  000080  6EFD               	movwf	tosl,c
  3704  000082  5185               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
  3705  000084  6EFE               	movwf	tosh,c
  3706  000086  50F8               	movf	tblptru,w,c
  3707  000088  6EFF               	movwf	tosu,c
  3708  00008A  50FA               	movf	pclath,w,c
  3709  00008C  0012               	return		;indir
  3710  00008E                     i2u173_49:
  3711  00008E                     i2l277:
  3712  00008E  C004  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr2h
  3713  000092  C003  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr2l
  3714  000096  C002  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
  3715  00009A  C001  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
  3716  00009E  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3717  0000A0  0011               	retfie		f
  3718  0000A2                     __end_of_INTERRUPT_InterruptManagerHigh:
  3719                           	callstack 0
  3720                           
  3721 ;; *************** function _EUSART1_Transmit_ISR *****************
  3722 ;; Defined at:
  3723 ;;		line 206 in file "mcc_generated_files/eusart1.c"
  3724 ;; Parameters:    Size  Location     Type
  3725 ;;		None
  3726 ;; Auto vars:     Size  Location     Type
  3727 ;;		None
  3728 ;; Return value:  Size  Location     Type
  3729 ;;                  1    wreg      void 
  3730 ;; Registers used:
  3731 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3732 ;; Tracked objects:
  3733 ;;		On entry : 0/0
  3734 ;;		On exit  : 0/0
  3735 ;;		Unchanged: 0/0
  3736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3737 ;;      Params:         0       0       0       0       0       0       0       0       0
  3738 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3739 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3740 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3741 ;;Total ram usage:        0 bytes
  3742 ;; Hardware stack levels used: 1
  3743 ;; This function calls:
  3744 ;;		Nothing
  3745 ;; This function is called by:
  3746 ;;		_EUSART1_Initialize
  3747 ;;		_INTERRUPT_InterruptManagerHigh
  3748 ;; This function uses a non-reentrant model
  3749 ;;
  3750                           
  3751                           	psect	text26
  3752  0015B8                     __ptext26:
  3753                           	callstack 0
  3754  0015B8                     _EUSART1_Transmit_ISR:
  3755                           	callstack 20
  3756  0015B8                     
  3757                           ;mcc_generated_files/eusart1.c: 210:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
  3758  0015B8  0E08               	movlw	8
  3759  0015BA  0100               	movlb	0	; () banked
  3760  0015BC  618A               	cpfslt	_eusart1TxBufferRemaining& (0+255),b	;volatile
  3761  0015BE  EFE3  F00A         	goto	i2u146_41
  3762  0015C2  EFE5  F00A         	goto	i2u146_40
  3763  0015C6                     i2u146_41:
  3764  0015C6  EFFB  F00A         	goto	i2l112
  3765  0015CA                     i2u146_40:
  3766  0015CA                     
  3767                           ; BSR set to: 0
  3768                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         T
      +                          XREG1 = eusart1TxBuffer[eusart1TxTail++];
  3769  0015CA  0E70               	movlw	low _eusart1TxBuffer
  3770  0015CC  258B               	addwf	_eusart1TxTail& (0+255),w,b	;volatile
  3771  0015CE  6ED9               	movwf	fsr2l,c
  3772  0015D0  6ADA               	clrf	fsr2h,c
  3773  0015D2  0E00               	movlw	high _eusart1TxBuffer
  3774  0015D4  22DA               	addwfc	fsr2h,f,c
  3775  0015D6  50DF               	movf	indf2,w,c
  3776  0015D8  6EAD               	movwf	173,c	;volatile
  3777  0015DA                     
  3778                           ; BSR set to: 0
  3779  0015DA  2B8B               	incf	_eusart1TxTail& (0+255),f,b	;volatile
  3780  0015DC                     
  3781                           ; BSR set to: 0
  3782                           ;mcc_generated_files/eusart1.c: 213:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
  3783  0015DC  0E07               	movlw	7
  3784  0015DE  658B               	cpfsgt	_eusart1TxTail& (0+255),b	;volatile
  3785  0015E0  EFF4  F00A         	goto	i2u147_41
  3786  0015E4  EFF6  F00A         	goto	i2u147_40
  3787  0015E8                     i2u147_41:
  3788  0015E8  EFF8  F00A         	goto	i2l2089
  3789  0015EC                     i2u147_40:
  3790  0015EC                     
  3791                           ; BSR set to: 0
  3792                           ;mcc_generated_files/eusart1.c: 214:         {;mcc_generated_files/eusart1.c: 215:      
      +                                 eusart1TxTail = 0;
  3793  0015EC  0E00               	movlw	0
  3794  0015EE  6F8B               	movwf	_eusart1TxTail& (0+255),b	;volatile
  3795  0015F0                     i2l2089:
  3796                           
  3797                           ; BSR set to: 0
  3798                           ;mcc_generated_files/eusart1.c: 217:         eusart1TxBufferRemaining++;
  3799  0015F0  2B8A               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
  3800                           
  3801                           ;mcc_generated_files/eusart1.c: 218:     }
  3802  0015F2  EFFC  F00A         	goto	i2l115
  3803  0015F6                     i2l112:
  3804                           
  3805                           ; BSR set to: 0
  3806                           ;mcc_generated_files/eusart1.c: 220:     {;mcc_generated_files/eusart1.c: 221:         P
      +                          IE1bits.TX1IE = 0;
  3807  0015F6  989D               	bcf	157,4,c	;volatile
  3808  0015F8                     i2l115:
  3809                           
  3810                           ; BSR set to: 0
  3811  0015F8  0012               	return		;funcret
  3812  0015FA                     __end_of_EUSART1_Transmit_ISR:
  3813                           	callstack 0
  3814                           
  3815 ;; *************** function _EUSART1_Receive_ISR *****************
  3816 ;; Defined at:
  3817 ;;		line 225 in file "mcc_generated_files/eusart1.c"
  3818 ;; Parameters:    Size  Location     Type
  3819 ;;		None
  3820 ;; Auto vars:     Size  Location     Type
  3821 ;;		None
  3822 ;; Return value:  Size  Location     Type
  3823 ;;                  1    wreg      void 
  3824 ;; Registers used:
  3825 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  3826 ;; Tracked objects:
  3827 ;;		On entry : 0/0
  3828 ;;		On exit  : 0/0
  3829 ;;		Unchanged: 0/0
  3830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3831 ;;      Params:         0       0       0       0       0       0       0       0       0
  3832 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3833 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3834 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3835 ;;Total ram usage:        0 bytes
  3836 ;; Hardware stack levels used: 1
  3837 ;; Hardware stack levels required when called: 2
  3838 ;; This function calls:
  3839 ;;		Absolute function
  3840 ;;		_EUSART1_DefaultErrorHandler
  3841 ;;		_EUSART1_DefaultFramingErrorHandler
  3842 ;;		_EUSART1_DefaultOverrunErrorHandler
  3843 ;;		_EUSART1_RxDataHandler
  3844 ;; This function is called by:
  3845 ;;		_EUSART1_Initialize
  3846 ;;		_INTERRUPT_InterruptManagerHigh
  3847 ;; This function uses a non-reentrant model
  3848 ;;
  3849                           
  3850                           	psect	text27
  3851  00121E                     __ptext27:
  3852                           	callstack 0
  3853  00121E                     _EUSART1_Receive_ISR:
  3854                           	callstack 18
  3855  00121E                     
  3856                           ;mcc_generated_files/eusart1.c: 228:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
  3857  00121E  0E60               	movlw	low _eusart1RxStatusBuffer
  3858  001220  245A               	addwf	_eusart1RxHead^0,w,c	;volatile
  3859  001222  6ED9               	movwf	fsr2l,c
  3860  001224  6ADA               	clrf	fsr2h,c
  3861  001226  0E00               	movlw	high _eusart1RxStatusBuffer
  3862  001228  22DA               	addwfc	fsr2h,f,c
  3863  00122A  0E00               	movlw	0
  3864  00122C  6EDF               	movwf	indf2,c
  3865  00122E                     
  3866                           ;mcc_generated_files/eusart1.c: 230:     if(RCSTA1bits.FERR){
  3867  00122E  A4AB               	btfss	171,2,c	;volatile
  3868  001230  EF1C  F009         	goto	i2u148_41
  3869  001234  EF1E  F009         	goto	i2u148_40
  3870  001238                     i2u148_41:
  3871  001238  EF33  F009         	goto	i2l2099
  3872  00123C                     i2u148_40:
  3873  00123C                     
  3874                           ;mcc_generated_files/eusart1.c: 231:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
  3875  00123C  0E60               	movlw	low _eusart1RxStatusBuffer
  3876  00123E  245A               	addwf	_eusart1RxHead^0,w,c	;volatile
  3877  001240  6ED9               	movwf	fsr2l,c
  3878  001242  6ADA               	clrf	fsr2h,c
  3879  001244  0E00               	movlw	high _eusart1RxStatusBuffer
  3880  001246  22DA               	addwfc	fsr2h,f,c
  3881  001248  0100               	movlb	0	; () banked
  3882  00124A  82DF               	bsf	indf2,1,c
  3883  00124C                     
  3884                           ; BSR set to: 0
  3885                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_FramingErrorHandler();
  3886  00124C  D802               	call	i2u149_48
  3887  00124E  EF33  F009         	goto	i2u149_49
  3888  001252                     i2u149_48:
  3889  001252  0005               	push	
  3890  001254  6EFA               	movwf	pclath,c
  3891  001256  5182               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
  3892  001258  6EFD               	movwf	tosl,c
  3893  00125A  5183               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
  3894  00125C  6EFE               	movwf	tosh,c
  3895  00125E  50F8               	movf	tblptru,w,c
  3896  001260  6EFF               	movwf	tosu,c
  3897  001262  50FA               	movf	pclath,w,c
  3898  001264  0012               	return		;indir
  3899  001266                     i2u149_49:
  3900  001266                     i2l2099:
  3901                           
  3902                           ;mcc_generated_files/eusart1.c: 235:     if(RCSTA1bits.OERR){
  3903  001266  A2AB               	btfss	171,1,c	;volatile
  3904  001268  EF38  F009         	goto	i2u150_41
  3905  00126C  EF3A  F009         	goto	i2u150_40
  3906  001270                     i2u150_41:
  3907  001270  EF4F  F009         	goto	i2l2105
  3908  001274                     i2u150_40:
  3909  001274                     
  3910                           ;mcc_generated_files/eusart1.c: 236:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
  3911  001274  0E60               	movlw	low _eusart1RxStatusBuffer
  3912  001276  245A               	addwf	_eusart1RxHead^0,w,c	;volatile
  3913  001278  6ED9               	movwf	fsr2l,c
  3914  00127A  6ADA               	clrf	fsr2h,c
  3915  00127C  0E00               	movlw	high _eusart1RxStatusBuffer
  3916  00127E  22DA               	addwfc	fsr2h,f,c
  3917  001280  0100               	movlb	0	; () banked
  3918  001282  84DF               	bsf	indf2,2,c
  3919  001284                     
  3920                           ; BSR set to: 0
  3921                           ;mcc_generated_files/eusart1.c: 237:         EUSART1_OverrunErrorHandler();
  3922  001284  D802               	call	i2u151_48
  3923  001286  EF4F  F009         	goto	i2u151_49
  3924  00128A                     i2u151_48:
  3925  00128A  0005               	push	
  3926  00128C  6EFA               	movwf	pclath,c
  3927  00128E  5180               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
  3928  001290  6EFD               	movwf	tosl,c
  3929  001292  5181               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
  3930  001294  6EFE               	movwf	tosh,c
  3931  001296  50F8               	movf	tblptru,w,c
  3932  001298  6EFF               	movwf	tosu,c
  3933  00129A  50FA               	movf	pclath,w,c
  3934  00129C  0012               	return		;indir
  3935  00129E                     i2u151_49:
  3936  00129E                     i2l2105:
  3937                           
  3938                           ;mcc_generated_files/eusart1.c: 240:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
  3939  00129E  0E60               	movlw	low _eusart1RxStatusBuffer
  3940  0012A0  245A               	addwf	_eusart1RxHead^0,w,c	;volatile
  3941  0012A2  6ED9               	movwf	fsr2l,c
  3942  0012A4  6ADA               	clrf	fsr2h,c
  3943  0012A6  0E00               	movlw	high _eusart1RxStatusBuffer
  3944  0012A8  22DA               	addwfc	fsr2h,f,c
  3945  0012AA  50DF               	movf	indf2,w,c
  3946  0012AC  B4D8               	btfsc	status,2,c
  3947  0012AE  EF5B  F009         	goto	i2u152_41
  3948  0012B2  EF5D  F009         	goto	i2u152_40
  3949  0012B6                     i2u152_41:
  3950  0012B6  EF6D  F009         	goto	i2l2109
  3951  0012BA                     i2u152_40:
  3952  0012BA                     
  3953                           ;mcc_generated_files/eusart1.c: 241:         EUSART1_ErrorHandler();
  3954  0012BA  D802               	call	i2u153_48
  3955  0012BC  EF6B  F009         	goto	i2u153_49
  3956  0012C0                     i2u153_48:
  3957  0012C0  0005               	push	
  3958  0012C2  0100               	movlb	0	; () banked
  3959  0012C4  6EFA               	movwf	pclath,c
  3960  0012C6  517E               	movf	_EUSART1_ErrorHandler& (0+255),w,b
  3961  0012C8  6EFD               	movwf	tosl,c
  3962  0012CA  517F               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
  3963  0012CC  6EFE               	movwf	tosh,c
  3964  0012CE  50F8               	movf	tblptru,w,c
  3965  0012D0  6EFF               	movwf	tosu,c
  3966  0012D2  50FA               	movf	pclath,w,c
  3967  0012D4  0012               	return		;indir
  3968  0012D6                     i2u153_49:
  3969                           
  3970                           ;mcc_generated_files/eusart1.c: 242:     } else {
  3971  0012D6  EF6F  F009         	goto	i2l122
  3972  0012DA                     i2l2109:
  3973                           
  3974                           ;mcc_generated_files/eusart1.c: 243:         EUSART1_RxDataHandler();
  3975  0012DA  EC59  F00B         	call	_EUSART1_RxDataHandler	;wreg free
  3976  0012DE                     i2l122:
  3977  0012DE  0012               	return		;funcret
  3978  0012E0                     __end_of_EUSART1_Receive_ISR:
  3979                           	callstack 0
  3980                           
  3981 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
  3982 ;; Defined at:
  3983 ;;		line 261 in file "mcc_generated_files/eusart1.c"
  3984 ;; Parameters:    Size  Location     Type
  3985 ;;		None
  3986 ;; Auto vars:     Size  Location     Type
  3987 ;;		None
  3988 ;; Return value:  Size  Location     Type
  3989 ;;                  1    wreg      void 
  3990 ;; Registers used:
  3991 ;;		None
  3992 ;; Tracked objects:
  3993 ;;		On entry : 0/0
  3994 ;;		On exit  : 0/0
  3995 ;;		Unchanged: 0/0
  3996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3997 ;;      Params:         0       0       0       0       0       0       0       0       0
  3998 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3999 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4000 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4001 ;;Total ram usage:        0 bytes
  4002 ;; Hardware stack levels used: 1
  4003 ;; This function calls:
  4004 ;;		Nothing
  4005 ;; This function is called by:
  4006 ;;		_EUSART1_Initialize
  4007 ;;		_EUSART1_Receive_ISR
  4008 ;; This function uses a non-reentrant model
  4009 ;;
  4010                           
  4011                           	psect	text28
  4012  00177C                     __ptext28:
  4013                           	callstack 0
  4014  00177C                     _EUSART1_DefaultOverrunErrorHandler:
  4015                           	callstack 19
  4016  00177C                     
  4017                           ;mcc_generated_files/eusart1.c: 264:     RCSTA1bits.CREN = 0;
  4018  00177C  98AB               	bcf	171,4,c	;volatile
  4019                           
  4020                           ;mcc_generated_files/eusart1.c: 265:     RCSTA1bits.CREN = 1;
  4021  00177E  88AB               	bsf	171,4,c	;volatile
  4022  001780  0012               	return		;funcret
  4023  001782                     __end_of_EUSART1_DefaultOverrunErrorHandler:
  4024                           	callstack 0
  4025                           
  4026 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
  4027 ;; Defined at:
  4028 ;;		line 259 in file "mcc_generated_files/eusart1.c"
  4029 ;; Parameters:    Size  Location     Type
  4030 ;;		None
  4031 ;; Auto vars:     Size  Location     Type
  4032 ;;		None
  4033 ;; Return value:  Size  Location     Type
  4034 ;;                  1    wreg      void 
  4035 ;; Registers used:
  4036 ;;		None
  4037 ;; Tracked objects:
  4038 ;;		On entry : 0/0
  4039 ;;		On exit  : 0/0
  4040 ;;		Unchanged: 0/0
  4041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4042 ;;      Params:         0       0       0       0       0       0       0       0       0
  4043 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4044 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4045 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4046 ;;Total ram usage:        0 bytes
  4047 ;; Hardware stack levels used: 1
  4048 ;; This function calls:
  4049 ;;		Nothing
  4050 ;; This function is called by:
  4051 ;;		_EUSART1_Initialize
  4052 ;;		_EUSART1_Receive_ISR
  4053 ;; This function uses a non-reentrant model
  4054 ;;
  4055                           
  4056                           	psect	text29
  4057  00178A                     __ptext29:
  4058                           	callstack 0
  4059  00178A                     _EUSART1_DefaultFramingErrorHandler:
  4060                           	callstack 19
  4061  00178A  0012               	return		;funcret
  4062  00178C                     __end_of_EUSART1_DefaultFramingErrorHandler:
  4063                           	callstack 0
  4064                           
  4065 ;; *************** function _EUSART1_DefaultErrorHandler *****************
  4066 ;; Defined at:
  4067 ;;		line 269 in file "mcc_generated_files/eusart1.c"
  4068 ;; Parameters:    Size  Location     Type
  4069 ;;		None
  4070 ;; Auto vars:     Size  Location     Type
  4071 ;;		None
  4072 ;; Return value:  Size  Location     Type
  4073 ;;                  1    wreg      void 
  4074 ;; Registers used:
  4075 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4076 ;; Tracked objects:
  4077 ;;		On entry : 0/0
  4078 ;;		On exit  : 0/0
  4079 ;;		Unchanged: 0/0
  4080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4081 ;;      Params:         0       0       0       0       0       0       0       0       0
  4082 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4083 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4084 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4085 ;;Total ram usage:        0 bytes
  4086 ;; Hardware stack levels used: 1
  4087 ;; Hardware stack levels required when called: 1
  4088 ;; This function calls:
  4089 ;;		_EUSART1_RxDataHandler
  4090 ;; This function is called by:
  4091 ;;		_EUSART1_Initialize
  4092 ;;		_EUSART1_Receive_ISR
  4093 ;; This function uses a non-reentrant model
  4094 ;;
  4095                           
  4096                           	psect	text30
  4097  001782                     __ptext30:
  4098                           	callstack 0
  4099  001782                     _EUSART1_DefaultErrorHandler:
  4100                           	callstack 18
  4101  001782                     
  4102                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_RxDataHandler();
  4103  001782  EC59  F00B         	call	_EUSART1_RxDataHandler	;wreg free
  4104  001786  0012               	return		;funcret
  4105  001788                     __end_of_EUSART1_DefaultErrorHandler:
  4106                           	callstack 0
  4107                           
  4108 ;; *************** function _EUSART1_RxDataHandler *****************
  4109 ;; Defined at:
  4110 ;;		line 249 in file "mcc_generated_files/eusart1.c"
  4111 ;; Parameters:    Size  Location     Type
  4112 ;;		None
  4113 ;; Auto vars:     Size  Location     Type
  4114 ;;		None
  4115 ;; Return value:  Size  Location     Type
  4116 ;;                  1    wreg      void 
  4117 ;; Registers used:
  4118 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4119 ;; Tracked objects:
  4120 ;;		On entry : 0/0
  4121 ;;		On exit  : 0/0
  4122 ;;		Unchanged: 0/0
  4123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4124 ;;      Params:         0       0       0       0       0       0       0       0       0
  4125 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4126 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4127 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4128 ;;Total ram usage:        0 bytes
  4129 ;; Hardware stack levels used: 1
  4130 ;; This function calls:
  4131 ;;		Nothing
  4132 ;; This function is called by:
  4133 ;;		_EUSART1_Receive_ISR
  4134 ;;		_EUSART1_DefaultErrorHandler
  4135 ;; This function uses a non-reentrant model
  4136 ;;
  4137                           
  4138                           	psect	text31
  4139  0016B2                     __ptext31:
  4140                           	callstack 0
  4141  0016B2                     _EUSART1_RxDataHandler:
  4142                           	callstack 19
  4143  0016B2                     
  4144                           ;mcc_generated_files/eusart1.c: 251:     eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  4145  0016B2  0E68               	movlw	low _eusart1RxBuffer
  4146  0016B4  245A               	addwf	_eusart1RxHead^0,w,c	;volatile
  4147  0016B6  6ED9               	movwf	fsr2l,c
  4148  0016B8  6ADA               	clrf	fsr2h,c
  4149  0016BA  0E00               	movlw	high _eusart1RxBuffer
  4150  0016BC  22DA               	addwfc	fsr2h,f,c
  4151  0016BE  CFAE FFDF          	movff	4014,indf2	;volatile
  4152  0016C2  2A5A               	incf	_eusart1RxHead^0,f,c	;volatile
  4153  0016C4                     
  4154                           ;mcc_generated_files/eusart1.c: 252:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  4155  0016C4  0E07               	movlw	7
  4156  0016C6  645A               	cpfsgt	_eusart1RxHead^0,c	;volatile
  4157  0016C8  EF68  F00B         	goto	i2u134_41
  4158  0016CC  EF6A  F00B         	goto	i2u134_40
  4159  0016D0                     i2u134_41:
  4160  0016D0  EF6C  F00B         	goto	i2l1949
  4161  0016D4                     i2u134_40:
  4162  0016D4                     
  4163                           ;mcc_generated_files/eusart1.c: 253:     {;mcc_generated_files/eusart1.c: 254:         e
      +                          usart1RxHead = 0;
  4164  0016D4  0E00               	movlw	0
  4165  0016D6  6E5A               	movwf	_eusart1RxHead^0,c	;volatile
  4166  0016D8                     i2l1949:
  4167                           
  4168                           ;mcc_generated_files/eusart1.c: 256:     eusart1RxCount++;
  4169  0016D8  0100               	movlb	0	; () banked
  4170  0016DA  2B89               	incf	_eusart1RxCount& (0+255),f,b	;volatile
  4171  0016DC                     
  4172                           ; BSR set to: 0
  4173  0016DC  0012               	return		;funcret
  4174  0016DE                     __end_of_EUSART1_RxDataHandler:
  4175                           	callstack 0
  4176                           
  4177                           	psect	text32
  4178  000000                     __ptext32:
  4179                           	callstack 0
  4180  000000                     
  4181                           	psect	rparam
  4182  0000                     
  4183                           	psect	temp
  4184  00005B                     btemp:
  4185                           	callstack 0
  4186  00005B                     	ds	1
  4187  0000                     int$flags	set	btemp
  4188  0000                     wtemp8	set	btemp+1
  4189  0000                     ttemp5	set	btemp+1
  4190  0000                     ttemp6	set	btemp+4
  4191  0000                     ttemp7	set	btemp+8
  4192                           
  4193                           	psect	idloc
  4194                           
  4195                           ;Config register IDLOC0 @ 0x200000
  4196                           ;	unspecified, using default values
  4197  200000                     	org	2097152
  4198  200000  FF                 	db	255
  4199                           
  4200                           ;Config register IDLOC1 @ 0x200001
  4201                           ;	unspecified, using default values
  4202  200001                     	org	2097153
  4203  200001  FF                 	db	255
  4204                           
  4205                           ;Config register IDLOC2 @ 0x200002
  4206                           ;	unspecified, using default values
  4207  200002                     	org	2097154
  4208  200002  FF                 	db	255
  4209                           
  4210                           ;Config register IDLOC3 @ 0x200003
  4211                           ;	unspecified, using default values
  4212  200003                     	org	2097155
  4213  200003  FF                 	db	255
  4214                           
  4215                           ;Config register IDLOC4 @ 0x200004
  4216                           ;	unspecified, using default values
  4217  200004                     	org	2097156
  4218  200004  FF                 	db	255
  4219                           
  4220                           ;Config register IDLOC5 @ 0x200005
  4221                           ;	unspecified, using default values
  4222  200005                     	org	2097157
  4223  200005  FF                 	db	255
  4224                           
  4225                           ;Config register IDLOC6 @ 0x200006
  4226                           ;	unspecified, using default values
  4227  200006                     	org	2097158
  4228  200006  FF                 	db	255
  4229                           
  4230                           ;Config register IDLOC7 @ 0x200007
  4231                           ;	unspecified, using default values
  4232  200007                     	org	2097159
  4233  200007  FF                 	db	255
  4234                           
  4235                           	psect	config
  4236                           
  4237                           ;Config register CONFIG1L @ 0x300000
  4238                           ;	PLL Selection
  4239                           ;	PLLSEL = PLL3X, 3x clock multiplier
  4240                           ;	PLL Enable Configuration bit
  4241                           ;	CFGPLLEN = ON, PLL Enabled
  4242                           ;	CPU System Clock Postscaler
  4243                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  4244                           ;	Low Speed USB mode with 48 MHz system clock
  4245                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
  4246  300000                     	org	3145728
  4247  300000  03                 	db	3
  4248                           
  4249                           ;Config register CONFIG1H @ 0x300001
  4250                           ;	Oscillator Selection
  4251                           ;	FOSC = INTOSCIO, Internal oscillator
  4252                           ;	Primary Oscillator Shutdown
  4253                           ;	PCLKEN = ON, Primary oscillator enabled
  4254                           ;	Fail-Safe Clock Monitor
  4255                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4256                           ;	Internal/External Oscillator Switchover
  4257                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4258  300001                     	org	3145729
  4259  300001  28                 	db	40
  4260                           
  4261                           ;Config register CONFIG2L @ 0x300002
  4262                           ;	Power-up Timer Enable
  4263                           ;	nPWRTEN = OFF, Power up timer disabled
  4264                           ;	Brown-out Reset Enable
  4265                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
  4266                           ;	Brown-out Reset Voltage
  4267                           ;	BORV = 190, BOR set to 1.9V nominal
  4268                           ;	Low-Power Brown-out Reset
  4269                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  4270  300002                     	org	3145730
  4271  300002  5F                 	db	95
  4272                           
  4273                           ;Config register CONFIG2H @ 0x300003
  4274                           ;	Watchdog Timer Enable bits
  4275                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  4276                           ;	Watchdog Timer Postscaler
  4277                           ;	WDTPS = 32768, 1:32768
  4278  300003                     	org	3145731
  4279  300003  3C                 	db	60
  4280                           
  4281                           ; Padding undefined space
  4282  300004                     	org	3145732
  4283  300004  FF                 	db	255
  4284                           
  4285                           ;Config register CONFIG3H @ 0x300005
  4286                           ;	CCP2 MUX bit
  4287                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  4288                           ;	PORTB A/D Enable bit
  4289                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  4290                           ;	Timer3 Clock Input MUX bit
  4291                           ;	T3CMX = RC0, T3CKI function is on RC0
  4292                           ;	SDO Output MUX bit
  4293                           ;	SDOMX = RB3, SDO function is on RB3
  4294                           ;	Master Clear Reset Pin Enable
  4295                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  4296  300005                     	org	3145733
  4297  300005  D3                 	db	211
  4298                           
  4299                           ;Config register CONFIG4L @ 0x300006
  4300                           ;	Stack Full/Underflow Reset
  4301                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4302                           ;	Single-Supply ICSP Enable bit
  4303                           ;	LVP = OFF, Single-Supply ICSP disabled
  4304                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  4305                           ;	ICPRT = OFF, ICPORT disabled
  4306                           ;	Extended Instruction Set Enable bit
  4307                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  4308                           ;	Background Debugger Enable bit
  4309                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  4310  300006                     	org	3145734
  4311  300006  81                 	db	129
  4312                           
  4313                           ; Padding undefined space
  4314  300007                     	org	3145735
  4315  300007  FF                 	db	255
  4316                           
  4317                           ;Config register CONFIG5L @ 0x300008
  4318                           ;	Block 0 Code Protect
  4319                           ;	CP0 = OFF, Block 0 is not code-protected
  4320                           ;	Block 1 Code Protect
  4321                           ;	CP1 = OFF, Block 1 is not code-protected
  4322                           ;	Block 2 Code Protect
  4323                           ;	CP2 = OFF, Block 2 is not code-protected
  4324                           ;	Block 3 Code Protect
  4325                           ;	CP3 = OFF, Block 3 is not code-protected
  4326  300008                     	org	3145736
  4327  300008  0F                 	db	15
  4328                           
  4329                           ;Config register CONFIG5H @ 0x300009
  4330                           ;	Boot Block Code Protect
  4331                           ;	CPB = OFF, Boot block is not code-protected
  4332                           ;	Data EEPROM Code Protect
  4333                           ;	CPD = OFF, Data EEPROM is not code-protected
  4334  300009                     	org	3145737
  4335  300009  C0                 	db	192
  4336                           
  4337                           ;Config register CONFIG6L @ 0x30000A
  4338                           ;	Block 0 Write Protect
  4339                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  4340                           ;	Block 1 Write Protect
  4341                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  4342                           ;	Block 2 Write Protect
  4343                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  4344                           ;	Block 3 Write Protect
  4345                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  4346  30000A                     	org	3145738
  4347  30000A  0F                 	db	15
  4348                           
  4349                           ;Config register CONFIG6H @ 0x30000B
  4350                           ;	Configuration Registers Write Protect
  4351                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  4352                           ;	Boot Block Write Protect
  4353                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  4354                           ;	Data EEPROM Write Protect
  4355                           ;	WRTD = OFF, Data EEPROM is not write-protected
  4356  30000B                     	org	3145739
  4357  30000B  E0                 	db	224
  4358                           
  4359                           ;Config register CONFIG7L @ 0x30000C
  4360                           ;	Block 0 Table Read Protect
  4361                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  4362                           ;	Block 1 Table Read Protect
  4363                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  4364                           ;	Block 2 Table Read Protect
  4365                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  4366                           ;	Block 3 Table Read Protect
  4367                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  4368  30000C                     	org	3145740
  4369  30000C  0F                 	db	15
  4370                           
  4371                           ;Config register CONFIG7H @ 0x30000D
  4372                           ;	Boot Block Table Read Protect
  4373                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  4374  30000D                     	org	3145741
  4375  30000D  40                 	db	64
  4376                           tosu	equ	0xFFF
  4377                           tosh	equ	0xFFE
  4378                           tosl	equ	0xFFD
  4379                           stkptr	equ	0xFFC
  4380                           pclatu	equ	0xFFB
  4381                           pclath	equ	0xFFA
  4382                           pcl	equ	0xFF9
  4383                           tblptru	equ	0xFF8
  4384                           tblptrh	equ	0xFF7
  4385                           tblptrl	equ	0xFF6
  4386                           tablat	equ	0xFF5
  4387                           prodh	equ	0xFF4
  4388                           prodl	equ	0xFF3
  4389                           indf0	equ	0xFEF
  4390                           postinc0	equ	0xFEE
  4391                           postdec0	equ	0xFED
  4392                           preinc0	equ	0xFEC
  4393                           plusw0	equ	0xFEB
  4394                           fsr0h	equ	0xFEA
  4395                           fsr0l	equ	0xFE9
  4396                           wreg	equ	0xFE8
  4397                           indf1	equ	0xFE7
  4398                           postinc1	equ	0xFE6
  4399                           postdec1	equ	0xFE5
  4400                           preinc1	equ	0xFE4
  4401                           plusw1	equ	0xFE3
  4402                           fsr1h	equ	0xFE2
  4403                           fsr1l	equ	0xFE1
  4404                           bsr	equ	0xFE0
  4405                           indf2	equ	0xFDF
  4406                           postinc2	equ	0xFDE
  4407                           postdec2	equ	0xFDD
  4408                           preinc2	equ	0xFDC
  4409                           plusw2	equ	0xFDB
  4410                           fsr2h	equ	0xFDA
  4411                           fsr2l	equ	0xFD9
  4412                           status	equ	0xFD8

Data Sizes:
    Strings     127
    Constant    20
    Data        2
    BSS         97
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      90
    BANK0           160     18     113
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    S378$4$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    S378$6$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), STR_1(CODE[15]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), STR_1(CODE[15]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1402$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S1402$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 62
		 -> STR_7(CODE[14]), STR_6(CODE[4]), STR_5(CODE[3]), STR_4(CODE[12]), 
		 -> STR_3(CODE[62]), STR_2(CODE[17]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 62
		 -> STR_7(CODE[14]), STR_6(CODE[4]), STR_5(CODE[3]), STR_4(CODE[12]), 
		 -> STR_3(CODE[62]), STR_2(CODE[17]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 62
		 -> STR_7(CODE[14]), STR_6(CODE[4]), STR_5(CODE[3]), STR_4(CODE[12]), 
		 -> STR_3(CODE[62]), STR_2(CODE[17]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    sp__memset	PTR void  size(2) Largest target is 16
		 -> rx(BANK0[16]), 

    string	PTR unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), 

    S378$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Initialize(), 

    uart.Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Initialize(), 

    S378$TxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    uart.TxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    S378$TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_tx_done(), 

    uart.TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_tx_done(), 

    S378$SetRxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetRxInterruptHandler(), 

    uart.SetRxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetRxInterruptHandler(), 

    S378$RxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    uart.RxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    S378$SetTxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetTxInterruptHandler(), 

    uart.SetTxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetTxInterruptHandler(), 

    S378$DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_rx_ready(), 

    uart.DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_rx_ready(), 

    S378$TransmitReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_tx_ready(), 

    uart.TransmitReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_tx_ready(), 

    S378$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART1_Write(), 

    uart.Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART1_Write(), 

    S378$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_Read(), 

    uart.Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_Read(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   13013
                                             14 BANK0      4     4      0
                  _SYSTEM_Initialize
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4   12486
                                              8 BANK0      6     2      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   11859
                                              0 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6   11377
                                             69 COMRAM    17    11      6
                               _ctoa
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    6853
                                             33 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    4587
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     310
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    2077
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 8     5      3    2051
                                             15 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1577
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      93
                                              5 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Write                                        1     1      0      62
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     490
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     490
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManagerHigh                      4     4      0       0
                                              0 COMRAM     4     4      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (11) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _printf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _fputc
             _putch
               _EUSART1_Write
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
             _fputs
               _fputc
             _strlen
         _fputc

 _INTERRUPT_InterruptManagerHigh (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      34        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     12      71       5       70.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITBIGSFRlllhl      25      0       0      31        0.0%
BITBIGSFRhhlhh      1D      0       0      21        0.0%
BITBIGSFRhhll       17      0       0      23        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRhllh        B      0       0      26        0.0%
BITBIGSFRllll        8      0       0      32        0.0%
BITBIGSFRlhhl        4      0       0      28        0.0%
BITBIGSFRlhll        4      0       0      29        0.0%
BITBIGSFRhlhhl       4      0       0      25        0.0%
BITBIGSFRlllhh       3      0       0      30        0.0%
BITBIGSFRhlhhh       2      0       0      24        0.0%
BITBIGSFRlhhh        1      0       0      27        0.0%
BITBIGSFRhhlhl       1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      CB      33        0.0%
DATA                 0      0      CB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Sat Aug 26 22:14:12 2023

                      _eusart1TxBufferRemaining 008A                                              l75 146A  
                                            l99 14E2                                              _rx 00AD  
                                           l100 14F8                                             l103 1524  
                                           l141 175E                                             l301 1716  
                                           l109 1740                                             l150 1754  
                                           l144 1772                                             l304 1724  
                                           l138 1768                                             l250 1676  
                                           l147 174A                                             l443 0F20  
                                           l268 177A                                             l456 1084  
                                           l298 1736                                             _abs 15FA  
                                           _pad 115C                                             tosl 000FFD  
                                           wreg 000FE8                                      _TXSTA1bits 000FAC  
                                          l1110 1630                                            l2001 13F6  
                                          l1113 1638                                            l1105 14C4  
                                          l1017 1704                                            l1106 14CC  
                                          l2011 141A                                            l2003 13F8  
                                          ?_abs 0017                                            l1060 10EC  
                                          l1044 11A0                                            l2021 143E  
                                          l2013 141E                                            l2005 1404  
                                          l1125 1374                                            l1133 15B6  
                                          l2023 1468                                            l2015 1422  
                                          l2007 1412                                            l1063 112E  
                                          l1047 11E2                                            l1071 0936  
                                          l2017 1426                                            l2009 1416  
                                          l1065 115A                                            l1049 121C  
                                          l1073 093E                                            l2019 1432  
                                          l1139 1572                                            l1091 0B72  
                                          l2061 165A                                            l2301 0D9E  
                                          l2063 165C                                            l2055 163A  
                                          l2311 0DFE                                            l2303 0DAC  
                                          l1096 0D98                                            l2065 1674  
                                          l2057 1652                                            l2321 0E48  
                                          l2313 0E02                                            l2305 0DCC  
                                          l2401 15FA                                            l2067 1774  
                                          l2059 1654                                            l2171 1732  
                                          l2251 14F0                                            l2411 10B2  
                                          l2331 0EB8                                            l2323 0E56  
                                          l2315 0E0E                                            l2307 0DD0  
                                          l2403 1614                                            l2069 1706  
                                          l2165 1726                                            l2261 1520  
                                          l2253 14FA                                            l2421 10F8  
                                          l2413 10C0                                            l2405 1086  
                                          l2333 0ECA                                            l2325 0E68  
                                          l2317 0E2C                                            l2309 0DDE  
                                          l2501 0BB8                                            l2167 172A  
                                          l2255 150A                                            l2263 1522  
                                          l2247 14D0                                            l2271 1304  
                                          l2423 110C                                            l2415 10D2  
                                          l2407 109A                                            l2327 0E96  
                                          l2319 0E34                                            l2335 0ED0  
                                          l2351 0F58                                            l2343 0F22  
                                          l2511 0C2E                                            l2503 0BBC  
                                          l2169 172E                                            l2257 150C  
                                          l2249 14D0                                            l2265 173A  
                                          l2273 130E                                            l2425 1110  
                                          l2409 10A6                                            l2337 0EE0  
                                          l2329 0EB6                                            l2361 0FC0  
                                          l2353 0F66                                            l2345 0F26  
                                          l2281 1526                                            l2441 090E  
                                          l2433 0896                                            l2521 0CF6  
                                          l2513 0C52                                            l2505 0BE0  
                                          l2259 151C                                            l2275 132C  
                                          l2267 12E0                                            l2427 113C  
                                          l2419 10E4                                            l2339 0F00  
                                          l2363 0FCE                                            l2371 1034  
                                          l2355 0F86                                            l2347 0F34  
                                          l2291 1574                                            l2283 1532  
                                          l2451 0966                                            l2443 0910  
                                          l2435 08B6                                            l2523 0D1A  
                                          l2531 0D48                                            l2515 0C76  
                                          l2507 0C12                                            l2277 1362  
                                          l2269 12F2                                            l2429 114E  
                                          l2373 1044                                            l2365 0FFC  
                                          l2357 0FA4                                            l2349 0F54  
                                          l2293 1580                                            l2285 1536  
                                          l2381 116A                                            l2461 0A04  
                                          l2453 096C                                            l2445 092A  
                                          l2437 08DE                                            l2533 0D56  
                                          l2525 0D28                                            l2517 0CBE  
                                          l2621 137E                                            l2375 1064  
                                          l2367 101C                                            l2359 0FAC  
                                          l2295 1592                                            l2287 1566  
                                          l2391 11C0                                            l2383 117E  
                                          l2471 0AAC                                            l2463 0A0A  
                                          l2455 0974                                            l2447 0946  
                                          l2439 08FE                                            l2527 0D3C  
                                          l2551 14A8                                            l2631 13D4  
                                          l2623 1388                                            l2615 1376  
                                          l2369 102E                                            l2297 1596  
                                          l2393 11C4                                            l2385 118C  
                                          l2481 0B0E                                            l2473 0AC6  
                                          l2465 0A10                                            l2457 097C  
                                          l2449 0958                                            l2537 0D62  
                                          l2545 146C                                            l2633 13E8  
                                          l2625 138C                                            l2617 137A  
                                          l1931 174C                                            l2299 0D9A  
                                          l2395 11F0                                            l2387 1198  
                                          l2379 115C                                            l2483 0B14  
                                          l2491 0B4A                                            l2475 0AE0  
                                          l2459 0982                                            l2467 0A74  
                                          l2539 0D86                                            l2547 1474  
                                          l2627 1392                                            l2619 137C  
                                          l1933 1742                                            l2397 1204  
                                          l2389 11AC                                            l2485 0B26  
                                          l2469 0A8E                                            l2477 0AEE  
                                          l2549 1482                                            l2629 13AC  
                                          l1935 1760                                            l2487 0B32  
                                          l2479 0B00                                            l2495 0B74  
                                          l2567 16DE                                            l1937 1756  
                                          l2489 0B3A                                            l2497 0B98  
                                          l2569 16E8                                            l1939 176A  
                                          l2499 0BA6                                            ?_pad 0017  
                                          STR_1 0864                                            STR_2 0853  
                                          STR_3 0815                                            STR_4 0881  
                                          STR_5 0891                                            STR_6 088D  
                                          STR_7 0873                                            u2000 118C  
                                          u2001 1188                                            u2010 11E2  
                                          u2011 11DE                                            u2020 11F0  
                                          u2100 08C8                                            u2021 11EC  
                                          u2030 1614                                            u2110 08DE  
                                          u2031 1610                                            u2111 08DA  
                                          u2040 109A                                            u2200 0AEE  
                                          u2120 090E                                            u2041 1096  
                                          u2201 0AEA                                            u2121 090A  
                                          u2050 10C0                                            u2210 0B00  
                                          u2130 092A                                            u2051 10BC  
                                          u2211 0AFC                                            u2131 0926  
                                          u2060 10E0                                            u2220 0B0E  
                                          u2140 0958                                            u2061 10DC  
                                          u2221 0B0A                                            u2141 0954  
                                          _LATA 000F89                                            u2070 112E  
                                          u2230 0B26                                            u2150 0966  
                                          _LATB 000F8A                                            u2071 112A  
                                          u2231 0B22                                            u2151 0962  
                                          _LATC 000F8B                                            u1440 1724  
                                          u2080 113C                                            u2160 0A8E  
                                          u2240 0B98                                            _LATD 000F8C  
                                          u1441 1720                                            u2081 1138  
                                          u2161 0A8A                                            u2241 0B94  
                                          _LATE 000F8D                                            u2170 0AAC  
                                          u2090 08C6                                            u2250 0BE0  
                                          u2171 0AA8                                            u2091 08C0  
                                          u2251 0BDC                                            u2180 0AC6  
                                          u2260 0C52                                            u2181 0AC2  
                                          u2261 0C4E                                            u2190 0AE0  
                                          u2270 0C76                                            u2191 0ADC  
                                          u2271 0C72                                            u1800 1304  
                                          u2280 0D1A                                            u2408 13C4  
                                          u1801 1300                                            u2281 0D16  
                                          u2417 139E                                            u1810 132C  
                                          u2290 14C4                                            u1811 1328  
                                          u2291 14C0                                            u1820 1362  
                                          u1900 0E56                                            u1821 135E  
                                          u1901 0E52                                            u1910 0E96  
                                          u1830 1556                                            u2390 13C0  
                                          u1911 0E92                                            u2391 13B6  
                                          u1760 14E2                                            u1920 0EE0  
                                          u1840 1566                                            u1761 14DE  
                                          u1921 0EDC                                            u1841 1562  
                                   main@counter 00CD                                            u1770 14F0  
                                          u1930 0F34                                            u1850 15B6  
                                          u1771 14EC                                            u1931 0F30  
                                          u1851 15B2                                            u1780 151C  
                                          u1860 0DAC                                            u1940 0F66  
                                          u1781 1518                                            u1861 0DA8  
                                          u1941 0F62                                            u1837 154C  
                                          u1790 12F2                                            u1870 0DDE  
                                          u1950 0FA4                                            u1791 12EE  
                                          u1871 0DDA                                            u1951 0FA0  
                                          u1960 0FCE                                            u1881 0E08  
                                          u1961 0FCA                                            u1890 0E2C  
                                          u1970 0FFC                                            u1891 0E28  
                                          u1971 0FF8                                            u1980 1044  
                                          u1981 1040                                            u1990 116A  
                                          u1991 1166                                            _WPUB 000F85  
                                 _EUSART1_Write 14CE                                            abs@a 0017  
                                          _dbuf 008D                                            _ctoa 1086  
                                          _main 1376                                            _dtoa 0896  
                                          _prec 007C                                            _uart 0801  
                                          _nout 0078                                            pad@i 001E  
                                          pad@p 001B                                            fsr0h 000FEA  
                                          fsr1h 000FE2                                            indf0 000FEF  
                                          fsr2h 000FDA                                            fsr0l 000FE9  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 0020                                            fsr2l 000FD9  
                                          btemp 005B                                            start 00A2  
                fp__EUSART1_DefaultErrorHandler 0000                                    ___param_bank 000000  
                                         ??_abs 0019                                           ??_pad 001D  
                 __end_of_OSCILLATOR_Initialize 1726                           _eusart1RxStatusBuffer 0060  
                               __end_of___aodiv 0F22                                           ?_ctoa 0010  
                                         ?_main 0001                                           ?_dtoa 0022  
                               __end_of___aomod 1086                                           i2l112 15F6  
                                         i2l122 12DE                                           i2l115 15F8  
                                         i2l132 1780                                           i2l126 16DC  
                                         i2l135 1786                                           i2l129 178A  
                                         i2l273 0056                                           i2l277 008E  
                                  vfpfcnvrt@fmt 0048                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
                                         _TRISD 000F95                                           _TRISE 000F96  
                          _EUSART1_Transmit_ISR 15B8                                           _flags 0057  
                                         _fputc 12E0                                           _fputs 1574  
                                         pad@fp 0017                                           _width 007A  
                                         ctoa@c 0012                                           _putch 1738  
                                         ctoa@l 0014                                           ctoa@w 0016  
                                         dtoa@d 0024                                           dtoa@i 0044  
                                         dtoa@n 003C                                           dtoa@p 0036  
                                         dtoa@s 003A                                           dtoa@w 0038  
                                ?_EUSART1_Write 0001                                           pclath 000FFA  
                                         pclatu 000FFB                                           tablat 000FF5  
                                         ttemp5 005C                                           ttemp6 005F  
                                         ttemp7 0063                                           status 000FD8  
                                         wtemp8 005C           fp__EUSART1_DefaultFramingErrorHandler 0000  
    __end_of_EUSART1_DefaultFramingErrorHandler 178C            ??_EUSART1_DefaultFramingErrorHandler 0001  
           ?_EUSART1_DefaultFramingErrorHandler 0001              _EUSART1_DefaultFramingErrorHandler 178A  
                               __initialization 1678                                    __end_of_ctoa 115C  
                    __end_of_EUSART1_Initialize 146C                                    __end_of_main 13F6  
                                  __end_of_dtoa 0B74                                    __end_of_uart 0815  
                                        ??_ctoa 0013                                          ??_main 00CB  
                                        ??_dtoa 002C                                   __activetblptr 000002  
                         ?_EUSART1_Transmit_ISR 0001                                          ?_fputc 0007  
                                        _ACTCON 000FB5                                          ?_fputs 0010  
                                        _ANSELA 000F5B                                          ?_putch 0001  
                                        _ANSELB 000F5C                                          _ANSELC 000F5D  
                                        _ANSELD 000F5E                                          _ANSELE 000F5F  
                                        i2l2101 1274                                          i2l2103 1284  
                                        i2l2105 129E                                          i2l2051 177C  
                                        i2l2107 12BA                                          i2l2053 1782  
                                        i2l2109 12DA                                          i2l2221 0036  
                                        i2l2223 0064                                          i2l2081 15CA  
                                        i2l2225 0072                                          i2l2217 001A  
                                        i2l2091 121E                                          i2l2083 15DA  
                                        i2l2219 0028                                          i2l2093 122E  
                                        i2l2085 15DC                                          i2l2095 123C  
                                        i2l2087 15EC                                          i2l2079 15B8  
                                        i2l2097 124C                                          i2l2089 15F0  
                                        i2l2099 1266                                          i2l1941 16B2  
                                        i2l1943 16C2                                          i2l1945 16C4  
                                        i2l1947 16D4                                          i2l1949 16D8  
                                        _RCREG1 000FAE                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                          _PLLRDY 007E97  
                                        _SPBRG1 000FAF                                          _TXREG1 000FAD  
                                        _TXSTA1 000FAC                                    vfprintf@cfmt 00C3  
                                     ??___aodiv 0015                                       ??___aomod 0015  
                      ?_EUSART1_SetErrorHandler 0005                                          clear_0 1696  
                                        isa$std 000001                                          _printf 16DE  
                                        pad@buf 0019                ??_EUSART1_SetOverrunErrorHandler 0007  
               ?_EUSART1_SetOverrunErrorHandler 0005                                          ctoa@fp 0010  
                                        dtoa@fp 0022                                          _string 00CF  
                                        _strlen 1526                                          fputc@c 0007  
                                        fputs@c 0014                                          fputs@i 0015  
                                        fputs@s 0010                                    __mediumconst 0000  
                                        tblptrh 000FF7                                          tblptrl 000FF6  
                                        tblptru 000FF8                                __end_of_vfprintf 14CE  
                               ??_EUSART1_Write 0005                                 _eusart1RxBuffer 0068  
                               _eusart1TxBuffer 0070                ??_INTERRUPT_InterruptManagerHigh 0001  
               ?_INTERRUPT_InterruptManagerHigh 0001                               _SYSTEM_Initialize 1726  
                                    __accesstop 0060                         __end_of__initialization 16A4  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                 __end_of_EUSART1_RxDataHandler 16DE                                  __pcstackCOMRAM 0001  
                                  __pidataBANK0 1788                             ??_SYSTEM_Initialize 0007  
                                 __end_of_fputc 1376                                   __end_of_fputs 15B8  
                                 __end_of_putch 1742                           fp__EUSART1_Initialize 0000  
                        ??_EUSART1_Transmit_ISR 0001                     __end_of_EUSART1_Receive_ISR 12E0  
                                       ??_fputc 000B                       __end_of_SYSTEM_Initialize 1738  
                                       ??_fputs 0014                                         ??_putch 0006  
                                 _eusart1RxHead 005A                                   _eusart1TxHead 008C  
                                 _eusart1RxTail 0059                                      __pbssBANK0 0060  
                                 _eusart1TxTail 008B               _EUSART1_TxDefaultInterruptHandler 0086  
               ??_EUSART1_SetRxInterruptHandler 0007                 __end_of_EUSART1_SetErrorHandler 1774  
                                       ?_printf 00C5                                         ?_strlen 0005  
        __end_of_EUSART1_SetFramingErrorHandler 176A                  _EUSART1_SetFramingErrorHandler 1760  
                  ?_EUSART1_DefaultErrorHandler 0001                                         _OSCCON2 000FD2  
                                       _OSCTUNE 000F9B                                         _SPBRGH1 000FB0  
                                       __Hparam 0000                                         __Lparam 0000  
                                       ___aodiv 0D9A                                         ___aomod 0F22  
                                     ?_vfprintf 00BD                                    __psmallconst 0800  
                           _EUSART1_is_rx_ready 000000                                         __pcinit 1678  
                                       __ramtop 0800                             _EUSART1_is_tx_ready 000000  
                                       __ptext0 1376                                         __ptext1 16DE  
                                       __ptext2 146C                                         __ptext3 0B74  
                                       __ptext4 0896                                         __ptext5 115C  
                                       __ptext6 1526                                         __ptext7 1574  
                                       __ptext8 15FA                                         __ptext9 0F22  
                         _OSCILLATOR_Initialize 1706                              _EUSART1_Initialize 13F6  
                      ??_PIN_MANAGER_Initialize 0005                   ??_EUSART1_DefaultErrorHandler 0001  
                          end_of_initialization 16A4                             ?_EUSART1_Initialize 0001  
                                       fputc@fp 0009                                   __Lmediumconst 0000  
                   _EUSART1_OverrunErrorHandler 0080                                         fputs@fp 0012  
         __end_of_EUSART1_SetRxInterruptHandler 1756                   _EUSART1_SetRxInterruptHandler 174C  
                             __end_of_vfpfcnvrt 0D9A                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc1 000FE6  
                                       postinc2 000FDE                                      ??_vfprintf 0057  
                          ??_EUSART1_Initialize 0007                                         strlen@a 0007  
                                       strlen@s 0005                         fp__EUSART1_Transmit_ISR 0000  
                           EUSART1_Write@txData 0005                                    _EUSART1_Read 000000  
                  __end_of_INTERRUPT_Initialize 177C                                     vfpfcnvrt@ap 004A  
                                   vfpfcnvrt@fp 0046                                     vfpfcnvrt@ll 004E  
                        ?_OSCILLATOR_Initialize 0001                                  __end_of_printf 1706  
                                __end_of_strlen 1574                             start_initialization 1678  
                                   __end_of_abs 163A                                     __end_of_pad 121E  
 EUSART1_SetRxInterruptHandler@interruptHandler 0005   EUSART1_SetTxInterruptHandler@interruptHandler 0005  
                                   putch@txData 0006                           __end_of_EUSART1_Write 1526  
                        fp__EUSART1_Receive_ISR 0000                                     vfprintf@fmt 00BF  
                         _EUSART1_RxDataHandler 16B2                fp__EUSART1_SetRxInterruptHandler 0000  
                ?_EUSART1_SetRxInterruptHandler 0005                                     __pdataBANK0 00CF  
                                      ??_printf 0057                                        ??_strlen 0007  
                                _eusart1RxCount 0089                                     __pbssCOMRAM 0057  
             _EUSART1_RxDefaultInterruptHandler 0084                                   __pcstackBANK0 00BD  
                              ___aodiv@dividend 0005                 ??_EUSART1_SetTxInterruptHandler 0007  
              ??_EUSART1_SetFramingErrorHandler 0007                 ?_EUSART1_SetFramingErrorHandler 0005  
                        _PIN_MANAGER_Initialize 163A                                       _dtoa$1472 0034  
                                     __pintcode 0008                                        ?___aodiv 0005  
                                      ?___aomod 0005                                ___aodiv@quotient 0017  
                                   __smallconst 0800                                        _BAUDCON1 000FB8  
         fp__EUSART1_DefaultOverrunErrorHandler 0000      __end_of_EUSART1_DefaultOverrunErrorHandler 1782  
          ??_EUSART1_DefaultOverrunErrorHandler 0001             ?_EUSART1_DefaultOverrunErrorHandler 0001  
            _EUSART1_DefaultOverrunErrorHandler 177C                            _EUSART1_ErrorHandler 007E  
                       _EUSART1_SetErrorHandler 176A                              _EUSART1_is_tx_done 000000  
                          _INTERRUPT_Initialize 1774         EUSART1_SetErrorHandler@interruptHandler 0005  
                                      _LATDbits 000F8C                                        _IPR1bits 000F9F  
                                      _PIE1bits 000F9D                                        i2u134_40 16D4  
                                      i2u150_40 1274                                        i2u134_41 16D0  
                                      i2u150_41 1270                                        i2u152_40 12BA  
                                      i2u151_48 128A                                        i2u152_41 12B6  
                                      i2u151_49 129E                                        i2u153_48 12C0  
                                      i2u146_40 15CA                                        i2u153_49 12D6  
                                      i2u146_41 15C6                                        i2u147_40 15EC  
                                      i2u171_40 0064                                        i2u170_48 003C  
                                      i2u147_41 15E8                                        i2u171_41 0060  
                                      i2u170_49 0052                                        i2u148_40 123C  
                                      i2u172_40 0072                                        i2u148_41 1238  
                                      i2u172_41 006E                                        i2u149_48 1252  
                                      i2u173_48 0078                                        i2u149_49 1266  
                                      i2u173_49 008E                                        i2u168_40 0028  
                                      i2u168_41 0024                                        i2u169_40 0036  
                                      i2u169_41 0032                                        _PIR1bits 000F9E  
                        ?_EUSART1_RxDataHandler 0001                                        _RCONbits 000FD0  
                                     _vfpfcnvrt 0B74                                      vfpfcnvrt@c 0056  
                                   _INTCON2bits 000FF1                           ?_INTERRUPT_Initialize 0001  
         __end_of_EUSART1_SetTxInterruptHandler 174C                   _EUSART1_SetTxInterruptHandler 1742  
                                      __Hrparam 0000                                      vfprintf@ap 00C1  
                                      __Lrparam 0000                                      vfprintf@fp 00BD  
                       ??_OSCILLATOR_Initialize 0005                                      ?_vfpfcnvrt 0046  
                               ___aodiv@divisor 000D                                 ___aodiv@counter 0015  
                     ??_EUSART1_SetErrorHandler 0007             __end_of_EUSART1_DefaultErrorHandler 1788  
                   _EUSART1_DefaultErrorHandler 1782                                        __ptext10 0D9A  
                                      __ptext11 1086                                        __ptext20 1742  
                                      __ptext12 12E0                                        __ptext21 174C  
                                      __ptext13 1738                                        __ptext30 1782  
                                      __ptext22 1756                                        __ptext14 14CE  
                                      __ptext31 16B2                                        __ptext23 1760  
                                      __ptext15 1726                                        __ptext32 0000  
                                      __ptext24 176A                                        __ptext16 163A  
                                      __ptext17 1706                                        __ptext26 15B8  
                                      __ptext18 1774                                        __ptext27 121E  
                                      __ptext19 13F6                                        __ptext28 177C  
                                      __ptext29 178A  EUSART1_SetOverrunErrorHandler@interruptHandler 0005  
                                      isa$xinst 000000                                        int$flags 005B  
                                      _vfprintf 146C                                       printf@fmt 00C5  
                   _EUSART1_FramingErrorHandler 0082                             _EUSART1_Receive_ISR 121E  
                              ___aomod@dividend 0005                                      _INTCONbits 000FF2  
                        ??_INTERRUPT_Initialize 0005                                        intlevel2 0000  
                          ?_EUSART1_Receive_ISR 0001                         ?_PIN_MANAGER_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 1760                  _EUSART1_SetOverrunErrorHandler 1756  
                                    _RCSTA1bits 000FAB                    __end_of_EUSART1_Transmit_ISR 15FA  
                                      printf@ap 00C9  EUSART1_SetFramingErrorHandler@interruptHandler 0005  
              fp__EUSART1_SetTxInterruptHandler 0000                  ?_EUSART1_SetTxInterruptHandler 0005  
                               ___aomod@divisor 000D                                     ??_vfpfcnvrt 004C  
                               ___aomod@counter 0015                              _eusart1RxLastError 0088  
                              fp__EUSART1_Write 0000          __end_of_INTERRUPT_InterruptManagerHigh 00A2  
                _INTERRUPT_InterruptManagerHigh 0008                                    ___aodiv@sign 0016  
                         ??_EUSART1_Receive_ISR 0001                  __end_of_PIN_MANAGER_Initialize 1678  
                       ??_EUSART1_RxDataHandler 0001                                    ___aomod@sign 0016  
